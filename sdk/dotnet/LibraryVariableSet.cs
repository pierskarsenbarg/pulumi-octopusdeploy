// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Octopusdeploy
{
    /// <summary>
    /// This resource manages library variable sets in Octopus Deploy.
    /// </summary>
    [OctopusdeployResourceType("octopusdeploy:index/libraryVariableSet:LibraryVariableSet")]
    public partial class LibraryVariableSet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of this library variable set.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of this resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The space ID associated with this resource.
        /// </summary>
        [Output("spaceId")]
        public Output<string> SpaceId { get; private set; } = null!;

        [Output("templates")]
        public Output<ImmutableArray<Outputs.LibraryVariableSetTemplate>> Templates { get; private set; } = null!;

        [Output("variableSetId")]
        public Output<string> VariableSetId { get; private set; } = null!;


        /// <summary>
        /// Create a LibraryVariableSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LibraryVariableSet(string name, LibraryVariableSetArgs? args = null, CustomResourceOptions? options = null)
            : base("octopusdeploy:index/libraryVariableSet:LibraryVariableSet", name, args ?? new LibraryVariableSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LibraryVariableSet(string name, Input<string> id, LibraryVariableSetState? state = null, CustomResourceOptions? options = null)
            : base("octopusdeploy:index/libraryVariableSet:LibraryVariableSet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LibraryVariableSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LibraryVariableSet Get(string name, Input<string> id, LibraryVariableSetState? state = null, CustomResourceOptions? options = null)
        {
            return new LibraryVariableSet(name, id, state, options);
        }
    }

    public sealed class LibraryVariableSetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of this library variable set.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of this resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The space ID associated with this resource.
        /// </summary>
        [Input("spaceId")]
        public Input<string>? SpaceId { get; set; }

        [Input("templates")]
        private InputList<Inputs.LibraryVariableSetTemplateArgs>? _templates;
        public InputList<Inputs.LibraryVariableSetTemplateArgs> Templates
        {
            get => _templates ?? (_templates = new InputList<Inputs.LibraryVariableSetTemplateArgs>());
            set => _templates = value;
        }

        public LibraryVariableSetArgs()
        {
        }
        public static new LibraryVariableSetArgs Empty => new LibraryVariableSetArgs();
    }

    public sealed class LibraryVariableSetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of this library variable set.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of this resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The space ID associated with this resource.
        /// </summary>
        [Input("spaceId")]
        public Input<string>? SpaceId { get; set; }

        [Input("templates")]
        private InputList<Inputs.LibraryVariableSetTemplateGetArgs>? _templates;
        public InputList<Inputs.LibraryVariableSetTemplateGetArgs> Templates
        {
            get => _templates ?? (_templates = new InputList<Inputs.LibraryVariableSetTemplateGetArgs>());
            set => _templates = value;
        }

        [Input("variableSetId")]
        public Input<string>? VariableSetId { get; set; }

        public LibraryVariableSetState()
        {
        }
        public static new LibraryVariableSetState Empty => new LibraryVariableSetState();
    }
}
