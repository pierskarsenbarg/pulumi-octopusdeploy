// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Octopusdeploy
{
    public static class GetLifecycles
    {
        /// <summary>
        /// Provides information about existing lifecycles.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Octopusdeploy = Pulumi.Octopusdeploy;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Octopusdeploy.GetLifecycles.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "Lifecycles-123",
        ///             "Lifecycles-321",
        ///         },
        ///         PartialName = "Defau",
        ///         Skip = 5,
        ///         Take = 100,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetLifecyclesResult> InvokeAsync(GetLifecyclesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLifecyclesResult>("octopusdeploy:index/getLifecycles:getLifecycles", args ?? new GetLifecyclesArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about existing lifecycles.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Octopusdeploy = Pulumi.Octopusdeploy;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Octopusdeploy.GetLifecycles.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "Lifecycles-123",
        ///             "Lifecycles-321",
        ///         },
        ///         PartialName = "Defau",
        ///         Skip = 5,
        ///         Take = 100,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetLifecyclesResult> Invoke(GetLifecyclesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLifecyclesResult>("octopusdeploy:index/getLifecycles:getLifecycles", args ?? new GetLifecyclesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLifecyclesArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A filter to search by a list of IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        [Input("lifecycles")]
        private List<Inputs.GetLifecyclesLifecycleArgs>? _lifecycles;

        /// <summary>
        /// A list of lifecycles that match the filter(s).
        /// </summary>
        public List<Inputs.GetLifecyclesLifecycleArgs> Lifecycles
        {
            get => _lifecycles ?? (_lifecycles = new List<Inputs.GetLifecyclesLifecycleArgs>());
            set => _lifecycles = value;
        }

        /// <summary>
        /// A filter to search by the partial match of a name.
        /// </summary>
        [Input("partialName")]
        public string? PartialName { get; set; }

        /// <summary>
        /// A filter to specify the number of items to skip in the response.
        /// </summary>
        [Input("skip")]
        public int? Skip { get; set; }

        /// <summary>
        /// A filter to specify the number of items to take (or return) in the response.
        /// </summary>
        [Input("take")]
        public int? Take { get; set; }

        public GetLifecyclesArgs()
        {
        }
        public static new GetLifecyclesArgs Empty => new GetLifecyclesArgs();
    }

    public sealed class GetLifecyclesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A filter to search by a list of IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        [Input("lifecycles")]
        private InputList<Inputs.GetLifecyclesLifecycleInputArgs>? _lifecycles;

        /// <summary>
        /// A list of lifecycles that match the filter(s).
        /// </summary>
        public InputList<Inputs.GetLifecyclesLifecycleInputArgs> Lifecycles
        {
            get => _lifecycles ?? (_lifecycles = new InputList<Inputs.GetLifecyclesLifecycleInputArgs>());
            set => _lifecycles = value;
        }

        /// <summary>
        /// A filter to search by the partial match of a name.
        /// </summary>
        [Input("partialName")]
        public Input<string>? PartialName { get; set; }

        /// <summary>
        /// A filter to specify the number of items to skip in the response.
        /// </summary>
        [Input("skip")]
        public Input<int>? Skip { get; set; }

        /// <summary>
        /// A filter to specify the number of items to take (or return) in the response.
        /// </summary>
        [Input("take")]
        public Input<int>? Take { get; set; }

        public GetLifecyclesInvokeArgs()
        {
        }
        public static new GetLifecyclesInvokeArgs Empty => new GetLifecyclesInvokeArgs();
    }


    [OutputType]
    public sealed class GetLifecyclesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A filter to search by a list of IDs.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// A list of lifecycles that match the filter(s).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLifecyclesLifecycleResult> Lifecycles;
        /// <summary>
        /// A filter to search by the partial match of a name.
        /// </summary>
        public readonly string? PartialName;
        /// <summary>
        /// A filter to specify the number of items to skip in the response.
        /// </summary>
        public readonly int? Skip;
        /// <summary>
        /// A filter to specify the number of items to take (or return) in the response.
        /// </summary>
        public readonly int? Take;

        [OutputConstructor]
        private GetLifecyclesResult(
            string id,

            ImmutableArray<string> ids,

            ImmutableArray<Outputs.GetLifecyclesLifecycleResult> lifecycles,

            string? partialName,

            int? skip,

            int? take)
        {
            Id = id;
            Ids = ids;
            Lifecycles = lifecycles;
            PartialName = partialName;
            Skip = skip;
            Take = take;
        }
    }
}
