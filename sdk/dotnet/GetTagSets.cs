// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Octopusdeploy
{
    public static class GetTagSets
    {
        /// <summary>
        /// Provides information about existing tag sets.
        /// </summary>
        public static Task<GetTagSetsResult> InvokeAsync(GetTagSetsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTagSetsResult>("octopusdeploy:index/getTagSets:getTagSets", args ?? new GetTagSetsArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about existing tag sets.
        /// </summary>
        public static Output<GetTagSetsResult> Invoke(GetTagSetsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTagSetsResult>("octopusdeploy:index/getTagSets:getTagSets", args ?? new GetTagSetsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTagSetsArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A filter to search by a list of IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A filter to search by the partial match of a name.
        /// </summary>
        [Input("partialName")]
        public string? PartialName { get; set; }

        /// <summary>
        /// A filter to specify the number of items to skip in the response.
        /// </summary>
        [Input("skip")]
        public int? Skip { get; set; }

        [Input("tagSets")]
        private List<Inputs.GetTagSetsTagSetArgs>? _tagSets;

        /// <summary>
        /// A list of tag sets that match the filter(s).
        /// </summary>
        public List<Inputs.GetTagSetsTagSetArgs> TagSets
        {
            get => _tagSets ?? (_tagSets = new List<Inputs.GetTagSetsTagSetArgs>());
            set => _tagSets = value;
        }

        /// <summary>
        /// A filter to specify the number of items to take (or return) in the response.
        /// </summary>
        [Input("take")]
        public int? Take { get; set; }

        public GetTagSetsArgs()
        {
        }
        public static new GetTagSetsArgs Empty => new GetTagSetsArgs();
    }

    public sealed class GetTagSetsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A filter to search by a list of IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A filter to search by the partial match of a name.
        /// </summary>
        [Input("partialName")]
        public Input<string>? PartialName { get; set; }

        /// <summary>
        /// A filter to specify the number of items to skip in the response.
        /// </summary>
        [Input("skip")]
        public Input<int>? Skip { get; set; }

        [Input("tagSets")]
        private InputList<Inputs.GetTagSetsTagSetInputArgs>? _tagSets;

        /// <summary>
        /// A list of tag sets that match the filter(s).
        /// </summary>
        public InputList<Inputs.GetTagSetsTagSetInputArgs> TagSets
        {
            get => _tagSets ?? (_tagSets = new InputList<Inputs.GetTagSetsTagSetInputArgs>());
            set => _tagSets = value;
        }

        /// <summary>
        /// A filter to specify the number of items to take (or return) in the response.
        /// </summary>
        [Input("take")]
        public Input<int>? Take { get; set; }

        public GetTagSetsInvokeArgs()
        {
        }
        public static new GetTagSetsInvokeArgs Empty => new GetTagSetsInvokeArgs();
    }


    [OutputType]
    public sealed class GetTagSetsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A filter to search by a list of IDs.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// A filter to search by the partial match of a name.
        /// </summary>
        public readonly string? PartialName;
        /// <summary>
        /// A filter to specify the number of items to skip in the response.
        /// </summary>
        public readonly int? Skip;
        /// <summary>
        /// A list of tag sets that match the filter(s).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTagSetsTagSetResult> TagSets;
        /// <summary>
        /// A filter to specify the number of items to take (or return) in the response.
        /// </summary>
        public readonly int? Take;

        [OutputConstructor]
        private GetTagSetsResult(
            string id,

            ImmutableArray<string> ids,

            string? partialName,

            int? skip,

            ImmutableArray<Outputs.GetTagSetsTagSetResult> tagSets,

            int? take)
        {
            Id = id;
            Ids = ids;
            PartialName = partialName;
            Skip = skip;
            TagSets = tagSets;
            Take = take;
        }
    }
}
