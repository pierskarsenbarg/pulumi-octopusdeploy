// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Octopusdeploy.Inputs
{

    public sealed class GetListeningTentacleDeploymentTargetsListeningTentacleDeploymentTargetInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("certificateSignatureAlgorithm", required: true)]
        public Input<string> CertificateSignatureAlgorithm { get; set; } = null!;

        [Input("environments", required: true)]
        private InputList<string>? _environments;

        /// <summary>
        /// A list of environment IDs associated with this listening tentacle.
        /// </summary>
        public InputList<string> Environments
        {
            get => _environments ?? (_environments = new InputList<string>());
            set => _environments = value;
        }

        [Input("hasLatestCalamari", required: true)]
        public Input<bool> HasLatestCalamari { get; set; } = null!;

        /// <summary>
        /// Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.
        /// </summary>
        [Input("healthStatus", required: true)]
        public Input<string> HealthStatus { get; set; } = null!;

        /// <summary>
        /// The unique ID for this resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Represents the disabled status of this deployment target.
        /// </summary>
        [Input("isDisabled", required: true)]
        public Input<bool> IsDisabled { get; set; } = null!;

        /// <summary>
        /// Represents the in-process status of this deployment target.
        /// </summary>
        [Input("isInProcess", required: true)]
        public Input<bool> IsInProcess { get; set; } = null!;

        /// <summary>
        /// The machine policy ID that is associated with this deployment target.
        /// </summary>
        [Input("machinePolicyId", required: true)]
        public Input<string> MachinePolicyId { get; set; } = null!;

        /// <summary>
        /// The name of this resource.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The operating system that is associated with this deployment target.
        /// </summary>
        [Input("operatingSystem", required: true)]
        public Input<string> OperatingSystem { get; set; } = null!;

        /// <summary>
        /// The proxy ID that is associated with this deployment target.
        /// </summary>
        [Input("proxyId", required: true)]
        public Input<string> ProxyId { get; set; } = null!;

        [Input("roles", required: true)]
        private InputList<string>? _roles;

        /// <summary>
        /// A list of role IDs that are associated with this deployment target.
        /// </summary>
        public InputList<string> Roles
        {
            get => _roles ?? (_roles = new InputList<string>());
            set => _roles = value;
        }

        /// <summary>
        /// The shell name associated with this deployment target.
        /// </summary>
        [Input("shellName", required: true)]
        public Input<string> ShellName { get; set; } = null!;

        /// <summary>
        /// The shell version associated with this deployment target.
        /// </summary>
        [Input("shellVersion", required: true)]
        public Input<string> ShellVersion { get; set; } = null!;

        /// <summary>
        /// The space ID associated with this resource.
        /// </summary>
        [Input("spaceId", required: true)]
        public Input<string> SpaceId { get; set; } = null!;

        /// <summary>
        /// The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.
        /// </summary>
        [Input("status", required: true)]
        public Input<string> Status { get; set; } = null!;

        /// <summary>
        /// A summary elaborating on the status of this resource.
        /// </summary>
        [Input("statusSummary", required: true)]
        public Input<string> StatusSummary { get; set; } = null!;

        [Input("tenantTags", required: true)]
        private InputList<string>? _tenantTags;

        /// <summary>
        /// A list of tenant tags associated with this resource.
        /// </summary>
        public InputList<string> TenantTags
        {
            get => _tenantTags ?? (_tenantTags = new InputList<string>());
            set => _tenantTags = value;
        }

        /// <summary>
        /// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
        /// </summary>
        [Input("tenantedDeploymentParticipation", required: true)]
        public Input<string> TenantedDeploymentParticipation { get; set; } = null!;

        [Input("tenants", required: true)]
        private InputList<string>? _tenants;

        /// <summary>
        /// A list of tenant IDs associated with this resource.
        /// </summary>
        public InputList<string> Tenants
        {
            get => _tenants ?? (_tenants = new InputList<string>());
            set => _tenants = value;
        }

        /// <summary>
        /// The tenant URL of this deployment target.
        /// </summary>
        [Input("tentacleUrl", required: true)]
        public Input<string> TentacleUrl { get; set; } = null!;

        [Input("tentacleVersionDetails", required: true)]
        private InputList<Inputs.GetListeningTentacleDeploymentTargetsListeningTentacleDeploymentTargetTentacleVersionDetailInputArgs>? _tentacleVersionDetails;
        public InputList<Inputs.GetListeningTentacleDeploymentTargetsListeningTentacleDeploymentTargetTentacleVersionDetailInputArgs> TentacleVersionDetails
        {
            get => _tentacleVersionDetails ?? (_tentacleVersionDetails = new InputList<Inputs.GetListeningTentacleDeploymentTargetsListeningTentacleDeploymentTargetTentacleVersionDetailInputArgs>());
            set => _tentacleVersionDetails = value;
        }

        /// <summary>
        /// The thumbprint of this deployment target.
        /// </summary>
        [Input("thumbprint", required: true)]
        public Input<string> Thumbprint { get; set; } = null!;

        /// <summary>
        /// The URI of this deployment target.
        /// </summary>
        [Input("uri", required: true)]
        public Input<string> Uri { get; set; } = null!;

        public GetListeningTentacleDeploymentTargetsListeningTentacleDeploymentTargetInputArgs()
        {
        }
        public static new GetListeningTentacleDeploymentTargetsListeningTentacleDeploymentTargetInputArgs Empty => new GetListeningTentacleDeploymentTargetsListeningTentacleDeploymentTargetInputArgs();
    }
}
