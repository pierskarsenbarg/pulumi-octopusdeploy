// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Octopusdeploy
{
    /// <summary>
    /// This resource manages machine policies in Octopus Deploy.
    /// </summary>
    [OctopusdeployResourceType("octopusdeploy:index/machinePolicy:MachinePolicy")]
    public partial class MachinePolicy : global::Pulumi.CustomResource
    {
        [Output("connectionConnectTimeout")]
        public Output<int?> ConnectionConnectTimeout { get; private set; } = null!;

        [Output("connectionRetryCountLimit")]
        public Output<int?> ConnectionRetryCountLimit { get; private set; } = null!;

        [Output("connectionRetrySleepInterval")]
        public Output<int?> ConnectionRetrySleepInterval { get; private set; } = null!;

        [Output("connectionRetryTimeLimit")]
        public Output<int?> ConnectionRetryTimeLimit { get; private set; } = null!;

        /// <summary>
        /// The description of this machine policy.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("isDefault")]
        public Output<bool> IsDefault { get; private set; } = null!;

        [Output("machineCleanupPolicy")]
        public Output<Outputs.MachinePolicyMachineCleanupPolicy> MachineCleanupPolicy { get; private set; } = null!;

        [Output("machineConnectivityPolicy")]
        public Output<Outputs.MachinePolicyMachineConnectivityPolicy> MachineConnectivityPolicy { get; private set; } = null!;

        [Output("machineHealthCheckPolicy")]
        public Output<Outputs.MachinePolicyMachineHealthCheckPolicy> MachineHealthCheckPolicy { get; private set; } = null!;

        [Output("machineUpdatePolicy")]
        public Output<Outputs.MachinePolicyMachineUpdatePolicy> MachineUpdatePolicy { get; private set; } = null!;

        /// <summary>
        /// The name of this resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("pollingRequestMaximumMessageProcessingTimeout")]
        public Output<int?> PollingRequestMaximumMessageProcessingTimeout { get; private set; } = null!;

        [Output("pollingRequestQueueTimeout")]
        public Output<int?> PollingRequestQueueTimeout { get; private set; } = null!;

        /// <summary>
        /// The space ID associated with this resource.
        /// </summary>
        [Output("spaceId")]
        public Output<string> SpaceId { get; private set; } = null!;


        /// <summary>
        /// Create a MachinePolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MachinePolicy(string name, MachinePolicyArgs? args = null, CustomResourceOptions? options = null)
            : base("octopusdeploy:index/machinePolicy:MachinePolicy", name, args ?? new MachinePolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MachinePolicy(string name, Input<string> id, MachinePolicyState? state = null, CustomResourceOptions? options = null)
            : base("octopusdeploy:index/machinePolicy:MachinePolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MachinePolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MachinePolicy Get(string name, Input<string> id, MachinePolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new MachinePolicy(name, id, state, options);
        }
    }

    public sealed class MachinePolicyArgs : global::Pulumi.ResourceArgs
    {
        [Input("connectionConnectTimeout")]
        public Input<int>? ConnectionConnectTimeout { get; set; }

        [Input("connectionRetryCountLimit")]
        public Input<int>? ConnectionRetryCountLimit { get; set; }

        [Input("connectionRetrySleepInterval")]
        public Input<int>? ConnectionRetrySleepInterval { get; set; }

        [Input("connectionRetryTimeLimit")]
        public Input<int>? ConnectionRetryTimeLimit { get; set; }

        /// <summary>
        /// The description of this machine policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("machineCleanupPolicy")]
        public Input<Inputs.MachinePolicyMachineCleanupPolicyArgs>? MachineCleanupPolicy { get; set; }

        [Input("machineConnectivityPolicy")]
        public Input<Inputs.MachinePolicyMachineConnectivityPolicyArgs>? MachineConnectivityPolicy { get; set; }

        [Input("machineHealthCheckPolicy")]
        public Input<Inputs.MachinePolicyMachineHealthCheckPolicyArgs>? MachineHealthCheckPolicy { get; set; }

        [Input("machineUpdatePolicy")]
        public Input<Inputs.MachinePolicyMachineUpdatePolicyArgs>? MachineUpdatePolicy { get; set; }

        /// <summary>
        /// The name of this resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("pollingRequestMaximumMessageProcessingTimeout")]
        public Input<int>? PollingRequestMaximumMessageProcessingTimeout { get; set; }

        [Input("pollingRequestQueueTimeout")]
        public Input<int>? PollingRequestQueueTimeout { get; set; }

        /// <summary>
        /// The space ID associated with this resource.
        /// </summary>
        [Input("spaceId")]
        public Input<string>? SpaceId { get; set; }

        public MachinePolicyArgs()
        {
        }
        public static new MachinePolicyArgs Empty => new MachinePolicyArgs();
    }

    public sealed class MachinePolicyState : global::Pulumi.ResourceArgs
    {
        [Input("connectionConnectTimeout")]
        public Input<int>? ConnectionConnectTimeout { get; set; }

        [Input("connectionRetryCountLimit")]
        public Input<int>? ConnectionRetryCountLimit { get; set; }

        [Input("connectionRetrySleepInterval")]
        public Input<int>? ConnectionRetrySleepInterval { get; set; }

        [Input("connectionRetryTimeLimit")]
        public Input<int>? ConnectionRetryTimeLimit { get; set; }

        /// <summary>
        /// The description of this machine policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        [Input("machineCleanupPolicy")]
        public Input<Inputs.MachinePolicyMachineCleanupPolicyGetArgs>? MachineCleanupPolicy { get; set; }

        [Input("machineConnectivityPolicy")]
        public Input<Inputs.MachinePolicyMachineConnectivityPolicyGetArgs>? MachineConnectivityPolicy { get; set; }

        [Input("machineHealthCheckPolicy")]
        public Input<Inputs.MachinePolicyMachineHealthCheckPolicyGetArgs>? MachineHealthCheckPolicy { get; set; }

        [Input("machineUpdatePolicy")]
        public Input<Inputs.MachinePolicyMachineUpdatePolicyGetArgs>? MachineUpdatePolicy { get; set; }

        /// <summary>
        /// The name of this resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("pollingRequestMaximumMessageProcessingTimeout")]
        public Input<int>? PollingRequestMaximumMessageProcessingTimeout { get; set; }

        [Input("pollingRequestQueueTimeout")]
        public Input<int>? PollingRequestQueueTimeout { get; set; }

        /// <summary>
        /// The space ID associated with this resource.
        /// </summary>
        [Input("spaceId")]
        public Input<string>? SpaceId { get; set; }

        public MachinePolicyState()
        {
        }
        public static new MachinePolicyState Empty => new MachinePolicyState();
    }
}
