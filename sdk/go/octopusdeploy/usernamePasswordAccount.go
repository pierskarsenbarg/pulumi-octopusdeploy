// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package octopusdeploy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource manages username-password accounts in Octopus Deploy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := octopusdeploy.NewUsernamePasswordAccount(ctx, "example", &octopusdeploy.UsernamePasswordAccountArgs{
//				Password: pulumi.String("###########"),
//				Username: pulumi.String("[username]"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import octopusdeploy:index/usernamePasswordAccount:UsernamePasswordAccount [options] octopusdeploy_username_password_account.<name> <account-id>
//
// ```
type UsernamePasswordAccount struct {
	pulumi.CustomResourceState

	// The description of this username/password account.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A list of environment IDs associated with this resource.
	Environments pulumi.StringArrayOutput `pulumi:"environments"`
	// The name of this resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The password associated with this resource.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// The space ID associated with this resource.
	SpaceId pulumi.StringOutput `pulumi:"spaceId"`
	// A list of tenant tags associated with this resource.
	TenantTags pulumi.StringArrayOutput `pulumi:"tenantTags"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation pulumi.StringOutput `pulumi:"tenantedDeploymentParticipation"`
	// A list of tenant IDs associated with this resource.
	Tenants pulumi.StringArrayOutput `pulumi:"tenants"`
	// The username associated with this resource.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewUsernamePasswordAccount registers a new resource with the given unique name, arguments, and options.
func NewUsernamePasswordAccount(ctx *pulumi.Context,
	name string, args *UsernamePasswordAccountArgs, opts ...pulumi.ResourceOption) (*UsernamePasswordAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	if args.Username != nil {
		args.Username = pulumi.ToSecret(args.Username).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
		"username",
	})
	opts = append(opts, secrets)
	var resource UsernamePasswordAccount
	err := ctx.RegisterResource("octopusdeploy:index/usernamePasswordAccount:UsernamePasswordAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUsernamePasswordAccount gets an existing UsernamePasswordAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUsernamePasswordAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UsernamePasswordAccountState, opts ...pulumi.ResourceOption) (*UsernamePasswordAccount, error) {
	var resource UsernamePasswordAccount
	err := ctx.ReadResource("octopusdeploy:index/usernamePasswordAccount:UsernamePasswordAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UsernamePasswordAccount resources.
type usernamePasswordAccountState struct {
	// The description of this username/password account.
	Description *string `pulumi:"description"`
	// A list of environment IDs associated with this resource.
	Environments []string `pulumi:"environments"`
	// The name of this resource.
	Name *string `pulumi:"name"`
	// The password associated with this resource.
	Password *string `pulumi:"password"`
	// The space ID associated with this resource.
	SpaceId *string `pulumi:"spaceId"`
	// A list of tenant tags associated with this resource.
	TenantTags []string `pulumi:"tenantTags"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation *string `pulumi:"tenantedDeploymentParticipation"`
	// A list of tenant IDs associated with this resource.
	Tenants []string `pulumi:"tenants"`
	// The username associated with this resource.
	Username *string `pulumi:"username"`
}

type UsernamePasswordAccountState struct {
	// The description of this username/password account.
	Description pulumi.StringPtrInput
	// A list of environment IDs associated with this resource.
	Environments pulumi.StringArrayInput
	// The name of this resource.
	Name pulumi.StringPtrInput
	// The password associated with this resource.
	Password pulumi.StringPtrInput
	// The space ID associated with this resource.
	SpaceId pulumi.StringPtrInput
	// A list of tenant tags associated with this resource.
	TenantTags pulumi.StringArrayInput
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation pulumi.StringPtrInput
	// A list of tenant IDs associated with this resource.
	Tenants pulumi.StringArrayInput
	// The username associated with this resource.
	Username pulumi.StringPtrInput
}

func (UsernamePasswordAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*usernamePasswordAccountState)(nil)).Elem()
}

type usernamePasswordAccountArgs struct {
	// The description of this username/password account.
	Description *string `pulumi:"description"`
	// A list of environment IDs associated with this resource.
	Environments []string `pulumi:"environments"`
	// The name of this resource.
	Name *string `pulumi:"name"`
	// The password associated with this resource.
	Password *string `pulumi:"password"`
	// The space ID associated with this resource.
	SpaceId *string `pulumi:"spaceId"`
	// A list of tenant tags associated with this resource.
	TenantTags []string `pulumi:"tenantTags"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation *string `pulumi:"tenantedDeploymentParticipation"`
	// A list of tenant IDs associated with this resource.
	Tenants []string `pulumi:"tenants"`
	// The username associated with this resource.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a UsernamePasswordAccount resource.
type UsernamePasswordAccountArgs struct {
	// The description of this username/password account.
	Description pulumi.StringPtrInput
	// A list of environment IDs associated with this resource.
	Environments pulumi.StringArrayInput
	// The name of this resource.
	Name pulumi.StringPtrInput
	// The password associated with this resource.
	Password pulumi.StringPtrInput
	// The space ID associated with this resource.
	SpaceId pulumi.StringPtrInput
	// A list of tenant tags associated with this resource.
	TenantTags pulumi.StringArrayInput
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation pulumi.StringPtrInput
	// A list of tenant IDs associated with this resource.
	Tenants pulumi.StringArrayInput
	// The username associated with this resource.
	Username pulumi.StringInput
}

func (UsernamePasswordAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*usernamePasswordAccountArgs)(nil)).Elem()
}

type UsernamePasswordAccountInput interface {
	pulumi.Input

	ToUsernamePasswordAccountOutput() UsernamePasswordAccountOutput
	ToUsernamePasswordAccountOutputWithContext(ctx context.Context) UsernamePasswordAccountOutput
}

func (*UsernamePasswordAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**UsernamePasswordAccount)(nil)).Elem()
}

func (i *UsernamePasswordAccount) ToUsernamePasswordAccountOutput() UsernamePasswordAccountOutput {
	return i.ToUsernamePasswordAccountOutputWithContext(context.Background())
}

func (i *UsernamePasswordAccount) ToUsernamePasswordAccountOutputWithContext(ctx context.Context) UsernamePasswordAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsernamePasswordAccountOutput)
}

// UsernamePasswordAccountArrayInput is an input type that accepts UsernamePasswordAccountArray and UsernamePasswordAccountArrayOutput values.
// You can construct a concrete instance of `UsernamePasswordAccountArrayInput` via:
//
//	UsernamePasswordAccountArray{ UsernamePasswordAccountArgs{...} }
type UsernamePasswordAccountArrayInput interface {
	pulumi.Input

	ToUsernamePasswordAccountArrayOutput() UsernamePasswordAccountArrayOutput
	ToUsernamePasswordAccountArrayOutputWithContext(context.Context) UsernamePasswordAccountArrayOutput
}

type UsernamePasswordAccountArray []UsernamePasswordAccountInput

func (UsernamePasswordAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UsernamePasswordAccount)(nil)).Elem()
}

func (i UsernamePasswordAccountArray) ToUsernamePasswordAccountArrayOutput() UsernamePasswordAccountArrayOutput {
	return i.ToUsernamePasswordAccountArrayOutputWithContext(context.Background())
}

func (i UsernamePasswordAccountArray) ToUsernamePasswordAccountArrayOutputWithContext(ctx context.Context) UsernamePasswordAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsernamePasswordAccountArrayOutput)
}

// UsernamePasswordAccountMapInput is an input type that accepts UsernamePasswordAccountMap and UsernamePasswordAccountMapOutput values.
// You can construct a concrete instance of `UsernamePasswordAccountMapInput` via:
//
//	UsernamePasswordAccountMap{ "key": UsernamePasswordAccountArgs{...} }
type UsernamePasswordAccountMapInput interface {
	pulumi.Input

	ToUsernamePasswordAccountMapOutput() UsernamePasswordAccountMapOutput
	ToUsernamePasswordAccountMapOutputWithContext(context.Context) UsernamePasswordAccountMapOutput
}

type UsernamePasswordAccountMap map[string]UsernamePasswordAccountInput

func (UsernamePasswordAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UsernamePasswordAccount)(nil)).Elem()
}

func (i UsernamePasswordAccountMap) ToUsernamePasswordAccountMapOutput() UsernamePasswordAccountMapOutput {
	return i.ToUsernamePasswordAccountMapOutputWithContext(context.Background())
}

func (i UsernamePasswordAccountMap) ToUsernamePasswordAccountMapOutputWithContext(ctx context.Context) UsernamePasswordAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsernamePasswordAccountMapOutput)
}

type UsernamePasswordAccountOutput struct{ *pulumi.OutputState }

func (UsernamePasswordAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UsernamePasswordAccount)(nil)).Elem()
}

func (o UsernamePasswordAccountOutput) ToUsernamePasswordAccountOutput() UsernamePasswordAccountOutput {
	return o
}

func (o UsernamePasswordAccountOutput) ToUsernamePasswordAccountOutputWithContext(ctx context.Context) UsernamePasswordAccountOutput {
	return o
}

// The description of this username/password account.
func (o UsernamePasswordAccountOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UsernamePasswordAccount) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of environment IDs associated with this resource.
func (o UsernamePasswordAccountOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UsernamePasswordAccount) pulumi.StringArrayOutput { return v.Environments }).(pulumi.StringArrayOutput)
}

// The name of this resource.
func (o UsernamePasswordAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *UsernamePasswordAccount) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The password associated with this resource.
func (o UsernamePasswordAccountOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UsernamePasswordAccount) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// The space ID associated with this resource.
func (o UsernamePasswordAccountOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *UsernamePasswordAccount) pulumi.StringOutput { return v.SpaceId }).(pulumi.StringOutput)
}

// A list of tenant tags associated with this resource.
func (o UsernamePasswordAccountOutput) TenantTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UsernamePasswordAccount) pulumi.StringArrayOutput { return v.TenantTags }).(pulumi.StringArrayOutput)
}

// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
func (o UsernamePasswordAccountOutput) TenantedDeploymentParticipation() pulumi.StringOutput {
	return o.ApplyT(func(v *UsernamePasswordAccount) pulumi.StringOutput { return v.TenantedDeploymentParticipation }).(pulumi.StringOutput)
}

// A list of tenant IDs associated with this resource.
func (o UsernamePasswordAccountOutput) Tenants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UsernamePasswordAccount) pulumi.StringArrayOutput { return v.Tenants }).(pulumi.StringArrayOutput)
}

// The username associated with this resource.
func (o UsernamePasswordAccountOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *UsernamePasswordAccount) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type UsernamePasswordAccountArrayOutput struct{ *pulumi.OutputState }

func (UsernamePasswordAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UsernamePasswordAccount)(nil)).Elem()
}

func (o UsernamePasswordAccountArrayOutput) ToUsernamePasswordAccountArrayOutput() UsernamePasswordAccountArrayOutput {
	return o
}

func (o UsernamePasswordAccountArrayOutput) ToUsernamePasswordAccountArrayOutputWithContext(ctx context.Context) UsernamePasswordAccountArrayOutput {
	return o
}

func (o UsernamePasswordAccountArrayOutput) Index(i pulumi.IntInput) UsernamePasswordAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UsernamePasswordAccount {
		return vs[0].([]*UsernamePasswordAccount)[vs[1].(int)]
	}).(UsernamePasswordAccountOutput)
}

type UsernamePasswordAccountMapOutput struct{ *pulumi.OutputState }

func (UsernamePasswordAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UsernamePasswordAccount)(nil)).Elem()
}

func (o UsernamePasswordAccountMapOutput) ToUsernamePasswordAccountMapOutput() UsernamePasswordAccountMapOutput {
	return o
}

func (o UsernamePasswordAccountMapOutput) ToUsernamePasswordAccountMapOutputWithContext(ctx context.Context) UsernamePasswordAccountMapOutput {
	return o
}

func (o UsernamePasswordAccountMapOutput) MapIndex(k pulumi.StringInput) UsernamePasswordAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UsernamePasswordAccount {
		return vs[0].(map[string]*UsernamePasswordAccount)[vs[1].(string)]
	}).(UsernamePasswordAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UsernamePasswordAccountInput)(nil)).Elem(), &UsernamePasswordAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsernamePasswordAccountArrayInput)(nil)).Elem(), UsernamePasswordAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsernamePasswordAccountMapInput)(nil)).Elem(), UsernamePasswordAccountMap{})
	pulumi.RegisterOutputType(UsernamePasswordAccountOutput{})
	pulumi.RegisterOutputType(UsernamePasswordAccountArrayOutput{})
	pulumi.RegisterOutputType(UsernamePasswordAccountMapOutput{})
}
