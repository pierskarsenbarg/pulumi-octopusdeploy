// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package octopusdeploy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource manages a Docker Container Registry in Octopus Deploy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-octopusdeploy/sdk/go/octopusdeploy"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := octopusdeploy.NewDockerContainerRegistry(ctx, "example", &octopusdeploy.DockerContainerRegistryArgs{
//				FeedUri:      pulumi.String("https://index.docker.io"),
//				Password:     pulumi.String("test-password"),
//				RegistryPath: pulumi.String("testing/test-image"),
//				Username:     pulumi.String("test-username"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import octopusdeploy:index/dockerContainerRegistry:DockerContainerRegistry [options] octopusdeploy_docker_container_registry.<name> <feed-id>
//
// ```
type DockerContainerRegistry struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// The URL to a Maven repository. This URL is the same value defined in the `repositories`/`repository`/`url` element of a Maven `settings.xml` file.
	FeedUri pulumi.StringOutput `pulumi:"feedUri"`
	// A short, memorable, unique name for this feed. Example: ACME Builds.
	Name                              pulumi.StringOutput      `pulumi:"name"`
	PackageAcquisitionLocationOptions pulumi.StringArrayOutput `pulumi:"packageAcquisitionLocationOptions"`
	// The password associated with this resource.
	Password     pulumi.StringPtrOutput `pulumi:"password"`
	RegistryPath pulumi.StringPtrOutput `pulumi:"registryPath"`
	// The space ID associated with this resource.
	SpaceId pulumi.StringOutput `pulumi:"spaceId"`
	// The username associated with this resource.
	Username pulumi.StringPtrOutput `pulumi:"username"`
}

// NewDockerContainerRegistry registers a new resource with the given unique name, arguments, and options.
func NewDockerContainerRegistry(ctx *pulumi.Context,
	name string, args *DockerContainerRegistryArgs, opts ...pulumi.ResourceOption) (*DockerContainerRegistry, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeedUri == nil {
		return nil, errors.New("invalid value for required argument 'FeedUri'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	if args.Username != nil {
		args.Username = pulumi.ToSecret(args.Username).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
		"username",
	})
	opts = append(opts, secrets)
	var resource DockerContainerRegistry
	err := ctx.RegisterResource("octopusdeploy:index/dockerContainerRegistry:DockerContainerRegistry", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDockerContainerRegistry gets an existing DockerContainerRegistry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDockerContainerRegistry(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DockerContainerRegistryState, opts ...pulumi.ResourceOption) (*DockerContainerRegistry, error) {
	var resource DockerContainerRegistry
	err := ctx.ReadResource("octopusdeploy:index/dockerContainerRegistry:DockerContainerRegistry", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DockerContainerRegistry resources.
type dockerContainerRegistryState struct {
	ApiVersion *string `pulumi:"apiVersion"`
	// The URL to a Maven repository. This URL is the same value defined in the `repositories`/`repository`/`url` element of a Maven `settings.xml` file.
	FeedUri *string `pulumi:"feedUri"`
	// A short, memorable, unique name for this feed. Example: ACME Builds.
	Name                              *string  `pulumi:"name"`
	PackageAcquisitionLocationOptions []string `pulumi:"packageAcquisitionLocationOptions"`
	// The password associated with this resource.
	Password     *string `pulumi:"password"`
	RegistryPath *string `pulumi:"registryPath"`
	// The space ID associated with this resource.
	SpaceId *string `pulumi:"spaceId"`
	// The username associated with this resource.
	Username *string `pulumi:"username"`
}

type DockerContainerRegistryState struct {
	ApiVersion pulumi.StringPtrInput
	// The URL to a Maven repository. This URL is the same value defined in the `repositories`/`repository`/`url` element of a Maven `settings.xml` file.
	FeedUri pulumi.StringPtrInput
	// A short, memorable, unique name for this feed. Example: ACME Builds.
	Name                              pulumi.StringPtrInput
	PackageAcquisitionLocationOptions pulumi.StringArrayInput
	// The password associated with this resource.
	Password     pulumi.StringPtrInput
	RegistryPath pulumi.StringPtrInput
	// The space ID associated with this resource.
	SpaceId pulumi.StringPtrInput
	// The username associated with this resource.
	Username pulumi.StringPtrInput
}

func (DockerContainerRegistryState) ElementType() reflect.Type {
	return reflect.TypeOf((*dockerContainerRegistryState)(nil)).Elem()
}

type dockerContainerRegistryArgs struct {
	ApiVersion *string `pulumi:"apiVersion"`
	// The URL to a Maven repository. This URL is the same value defined in the `repositories`/`repository`/`url` element of a Maven `settings.xml` file.
	FeedUri string `pulumi:"feedUri"`
	// A short, memorable, unique name for this feed. Example: ACME Builds.
	Name                              *string  `pulumi:"name"`
	PackageAcquisitionLocationOptions []string `pulumi:"packageAcquisitionLocationOptions"`
	// The password associated with this resource.
	Password     *string `pulumi:"password"`
	RegistryPath *string `pulumi:"registryPath"`
	// The space ID associated with this resource.
	SpaceId *string `pulumi:"spaceId"`
	// The username associated with this resource.
	Username *string `pulumi:"username"`
}

// The set of arguments for constructing a DockerContainerRegistry resource.
type DockerContainerRegistryArgs struct {
	ApiVersion pulumi.StringPtrInput
	// The URL to a Maven repository. This URL is the same value defined in the `repositories`/`repository`/`url` element of a Maven `settings.xml` file.
	FeedUri pulumi.StringInput
	// A short, memorable, unique name for this feed. Example: ACME Builds.
	Name                              pulumi.StringPtrInput
	PackageAcquisitionLocationOptions pulumi.StringArrayInput
	// The password associated with this resource.
	Password     pulumi.StringPtrInput
	RegistryPath pulumi.StringPtrInput
	// The space ID associated with this resource.
	SpaceId pulumi.StringPtrInput
	// The username associated with this resource.
	Username pulumi.StringPtrInput
}

func (DockerContainerRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dockerContainerRegistryArgs)(nil)).Elem()
}

type DockerContainerRegistryInput interface {
	pulumi.Input

	ToDockerContainerRegistryOutput() DockerContainerRegistryOutput
	ToDockerContainerRegistryOutputWithContext(ctx context.Context) DockerContainerRegistryOutput
}

func (*DockerContainerRegistry) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerContainerRegistry)(nil)).Elem()
}

func (i *DockerContainerRegistry) ToDockerContainerRegistryOutput() DockerContainerRegistryOutput {
	return i.ToDockerContainerRegistryOutputWithContext(context.Background())
}

func (i *DockerContainerRegistry) ToDockerContainerRegistryOutputWithContext(ctx context.Context) DockerContainerRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerContainerRegistryOutput)
}

// DockerContainerRegistryArrayInput is an input type that accepts DockerContainerRegistryArray and DockerContainerRegistryArrayOutput values.
// You can construct a concrete instance of `DockerContainerRegistryArrayInput` via:
//
//	DockerContainerRegistryArray{ DockerContainerRegistryArgs{...} }
type DockerContainerRegistryArrayInput interface {
	pulumi.Input

	ToDockerContainerRegistryArrayOutput() DockerContainerRegistryArrayOutput
	ToDockerContainerRegistryArrayOutputWithContext(context.Context) DockerContainerRegistryArrayOutput
}

type DockerContainerRegistryArray []DockerContainerRegistryInput

func (DockerContainerRegistryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DockerContainerRegistry)(nil)).Elem()
}

func (i DockerContainerRegistryArray) ToDockerContainerRegistryArrayOutput() DockerContainerRegistryArrayOutput {
	return i.ToDockerContainerRegistryArrayOutputWithContext(context.Background())
}

func (i DockerContainerRegistryArray) ToDockerContainerRegistryArrayOutputWithContext(ctx context.Context) DockerContainerRegistryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerContainerRegistryArrayOutput)
}

// DockerContainerRegistryMapInput is an input type that accepts DockerContainerRegistryMap and DockerContainerRegistryMapOutput values.
// You can construct a concrete instance of `DockerContainerRegistryMapInput` via:
//
//	DockerContainerRegistryMap{ "key": DockerContainerRegistryArgs{...} }
type DockerContainerRegistryMapInput interface {
	pulumi.Input

	ToDockerContainerRegistryMapOutput() DockerContainerRegistryMapOutput
	ToDockerContainerRegistryMapOutputWithContext(context.Context) DockerContainerRegistryMapOutput
}

type DockerContainerRegistryMap map[string]DockerContainerRegistryInput

func (DockerContainerRegistryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DockerContainerRegistry)(nil)).Elem()
}

func (i DockerContainerRegistryMap) ToDockerContainerRegistryMapOutput() DockerContainerRegistryMapOutput {
	return i.ToDockerContainerRegistryMapOutputWithContext(context.Background())
}

func (i DockerContainerRegistryMap) ToDockerContainerRegistryMapOutputWithContext(ctx context.Context) DockerContainerRegistryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerContainerRegistryMapOutput)
}

type DockerContainerRegistryOutput struct{ *pulumi.OutputState }

func (DockerContainerRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerContainerRegistry)(nil)).Elem()
}

func (o DockerContainerRegistryOutput) ToDockerContainerRegistryOutput() DockerContainerRegistryOutput {
	return o
}

func (o DockerContainerRegistryOutput) ToDockerContainerRegistryOutputWithContext(ctx context.Context) DockerContainerRegistryOutput {
	return o
}

func (o DockerContainerRegistryOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerContainerRegistry) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// The URL to a Maven repository. This URL is the same value defined in the `repositories`/`repository`/`url` element of a Maven `settings.xml` file.
func (o DockerContainerRegistryOutput) FeedUri() pulumi.StringOutput {
	return o.ApplyT(func(v *DockerContainerRegistry) pulumi.StringOutput { return v.FeedUri }).(pulumi.StringOutput)
}

// A short, memorable, unique name for this feed. Example: ACME Builds.
func (o DockerContainerRegistryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DockerContainerRegistry) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DockerContainerRegistryOutput) PackageAcquisitionLocationOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DockerContainerRegistry) pulumi.StringArrayOutput { return v.PackageAcquisitionLocationOptions }).(pulumi.StringArrayOutput)
}

// The password associated with this resource.
func (o DockerContainerRegistryOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerContainerRegistry) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

func (o DockerContainerRegistryOutput) RegistryPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerContainerRegistry) pulumi.StringPtrOutput { return v.RegistryPath }).(pulumi.StringPtrOutput)
}

// The space ID associated with this resource.
func (o DockerContainerRegistryOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DockerContainerRegistry) pulumi.StringOutput { return v.SpaceId }).(pulumi.StringOutput)
}

// The username associated with this resource.
func (o DockerContainerRegistryOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerContainerRegistry) pulumi.StringPtrOutput { return v.Username }).(pulumi.StringPtrOutput)
}

type DockerContainerRegistryArrayOutput struct{ *pulumi.OutputState }

func (DockerContainerRegistryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DockerContainerRegistry)(nil)).Elem()
}

func (o DockerContainerRegistryArrayOutput) ToDockerContainerRegistryArrayOutput() DockerContainerRegistryArrayOutput {
	return o
}

func (o DockerContainerRegistryArrayOutput) ToDockerContainerRegistryArrayOutputWithContext(ctx context.Context) DockerContainerRegistryArrayOutput {
	return o
}

func (o DockerContainerRegistryArrayOutput) Index(i pulumi.IntInput) DockerContainerRegistryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DockerContainerRegistry {
		return vs[0].([]*DockerContainerRegistry)[vs[1].(int)]
	}).(DockerContainerRegistryOutput)
}

type DockerContainerRegistryMapOutput struct{ *pulumi.OutputState }

func (DockerContainerRegistryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DockerContainerRegistry)(nil)).Elem()
}

func (o DockerContainerRegistryMapOutput) ToDockerContainerRegistryMapOutput() DockerContainerRegistryMapOutput {
	return o
}

func (o DockerContainerRegistryMapOutput) ToDockerContainerRegistryMapOutputWithContext(ctx context.Context) DockerContainerRegistryMapOutput {
	return o
}

func (o DockerContainerRegistryMapOutput) MapIndex(k pulumi.StringInput) DockerContainerRegistryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DockerContainerRegistry {
		return vs[0].(map[string]*DockerContainerRegistry)[vs[1].(string)]
	}).(DockerContainerRegistryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DockerContainerRegistryInput)(nil)).Elem(), &DockerContainerRegistry{})
	pulumi.RegisterInputType(reflect.TypeOf((*DockerContainerRegistryArrayInput)(nil)).Elem(), DockerContainerRegistryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DockerContainerRegistryMapInput)(nil)).Elem(), DockerContainerRegistryMap{})
	pulumi.RegisterOutputType(DockerContainerRegistryOutput{})
	pulumi.RegisterOutputType(DockerContainerRegistryArrayOutput{})
	pulumi.RegisterOutputType(DockerContainerRegistryMapOutput{})
}
