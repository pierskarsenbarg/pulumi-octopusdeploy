// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package octopusdeploy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about existing library variable sets.
func GetLibraryVariableSets(ctx *pulumi.Context, args *GetLibraryVariableSetsArgs, opts ...pulumi.InvokeOption) (*GetLibraryVariableSetsResult, error) {
	var rv GetLibraryVariableSetsResult
	err := ctx.Invoke("octopusdeploy:index/getLibraryVariableSets:getLibraryVariableSets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLibraryVariableSets.
type GetLibraryVariableSetsArgs struct {
	// A filter to search by content type.
	ContentType *string `pulumi:"contentType"`
	// A filter to search by a list of IDs.
	Ids []string `pulumi:"ids"`
	// A list of library variable sets that match the filter(s).
	LibraryVariableSets []GetLibraryVariableSetsLibraryVariableSet `pulumi:"libraryVariableSets"`
	// A filter to search by the partial match of a name.
	PartialName *string `pulumi:"partialName"`
	// A filter to specify the number of items to skip in the response.
	Skip *int `pulumi:"skip"`
	// A filter to specify the number of items to take (or return) in the response.
	Take *int `pulumi:"take"`
}

// A collection of values returned by getLibraryVariableSets.
type GetLibraryVariableSetsResult struct {
	// A filter to search by content type.
	ContentType *string `pulumi:"contentType"`
	// An auto-generated identifier that includes the timestamp when this data source was last modified.
	Id string `pulumi:"id"`
	// A filter to search by a list of IDs.
	Ids []string `pulumi:"ids"`
	// A list of library variable sets that match the filter(s).
	LibraryVariableSets []GetLibraryVariableSetsLibraryVariableSet `pulumi:"libraryVariableSets"`
	// A filter to search by the partial match of a name.
	PartialName *string `pulumi:"partialName"`
	// A filter to specify the number of items to skip in the response.
	Skip *int `pulumi:"skip"`
	// A filter to specify the number of items to take (or return) in the response.
	Take *int `pulumi:"take"`
}

func GetLibraryVariableSetsOutput(ctx *pulumi.Context, args GetLibraryVariableSetsOutputArgs, opts ...pulumi.InvokeOption) GetLibraryVariableSetsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLibraryVariableSetsResult, error) {
			args := v.(GetLibraryVariableSetsArgs)
			r, err := GetLibraryVariableSets(ctx, &args, opts...)
			var s GetLibraryVariableSetsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLibraryVariableSetsResultOutput)
}

// A collection of arguments for invoking getLibraryVariableSets.
type GetLibraryVariableSetsOutputArgs struct {
	// A filter to search by content type.
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	// A filter to search by a list of IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A list of library variable sets that match the filter(s).
	LibraryVariableSets GetLibraryVariableSetsLibraryVariableSetArrayInput `pulumi:"libraryVariableSets"`
	// A filter to search by the partial match of a name.
	PartialName pulumi.StringPtrInput `pulumi:"partialName"`
	// A filter to specify the number of items to skip in the response.
	Skip pulumi.IntPtrInput `pulumi:"skip"`
	// A filter to specify the number of items to take (or return) in the response.
	Take pulumi.IntPtrInput `pulumi:"take"`
}

func (GetLibraryVariableSetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLibraryVariableSetsArgs)(nil)).Elem()
}

// A collection of values returned by getLibraryVariableSets.
type GetLibraryVariableSetsResultOutput struct{ *pulumi.OutputState }

func (GetLibraryVariableSetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLibraryVariableSetsResult)(nil)).Elem()
}

func (o GetLibraryVariableSetsResultOutput) ToGetLibraryVariableSetsResultOutput() GetLibraryVariableSetsResultOutput {
	return o
}

func (o GetLibraryVariableSetsResultOutput) ToGetLibraryVariableSetsResultOutputWithContext(ctx context.Context) GetLibraryVariableSetsResultOutput {
	return o
}

// A filter to search by content type.
func (o GetLibraryVariableSetsResultOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsResult) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

// An auto-generated identifier that includes the timestamp when this data source was last modified.
func (o GetLibraryVariableSetsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A filter to search by a list of IDs.
func (o GetLibraryVariableSetsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// A list of library variable sets that match the filter(s).
func (o GetLibraryVariableSetsResultOutput) LibraryVariableSets() GetLibraryVariableSetsLibraryVariableSetArrayOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsResult) []GetLibraryVariableSetsLibraryVariableSet {
		return v.LibraryVariableSets
	}).(GetLibraryVariableSetsLibraryVariableSetArrayOutput)
}

// A filter to search by the partial match of a name.
func (o GetLibraryVariableSetsResultOutput) PartialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsResult) *string { return v.PartialName }).(pulumi.StringPtrOutput)
}

// A filter to specify the number of items to skip in the response.
func (o GetLibraryVariableSetsResultOutput) Skip() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsResult) *int { return v.Skip }).(pulumi.IntPtrOutput)
}

// A filter to specify the number of items to take (or return) in the response.
func (o GetLibraryVariableSetsResultOutput) Take() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetLibraryVariableSetsResult) *int { return v.Take }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLibraryVariableSetsResultOutput{})
}
