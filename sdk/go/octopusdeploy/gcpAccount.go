// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package octopusdeploy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource manages GCP accounts in Octopus Deploy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-octopusdeploy/sdk/go/octopusdeploy"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := octopusdeploy.NewGcpAccount(ctx, "example", &octopusdeploy.GcpAccountArgs{
//				JsonKey: pulumi.String("json-key"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import octopusdeploy:index/gcpAccount:GcpAccount [options] octopusdeploy_gcp_account.<name> <account-id>
//
// ```
type GcpAccount struct {
	pulumi.CustomResourceState

	// A user-friendly description of this GCP account.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A list of environment IDs associated with this resource.
	Environments pulumi.StringArrayOutput `pulumi:"environments"`
	// The JSON key associated with this GCP account.
	JsonKey pulumi.StringOutput `pulumi:"jsonKey"`
	// The name of this GCP account.
	Name pulumi.StringOutput `pulumi:"name"`
	// The space ID associated with this resource.
	SpaceId pulumi.StringOutput `pulumi:"spaceId"`
	// A list of tenant tags associated with this resource.
	TenantTags pulumi.StringArrayOutput `pulumi:"tenantTags"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation pulumi.StringOutput `pulumi:"tenantedDeploymentParticipation"`
	// A list of tenant IDs associated with this resource.
	Tenants pulumi.StringArrayOutput `pulumi:"tenants"`
}

// NewGcpAccount registers a new resource with the given unique name, arguments, and options.
func NewGcpAccount(ctx *pulumi.Context,
	name string, args *GcpAccountArgs, opts ...pulumi.ResourceOption) (*GcpAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.JsonKey == nil {
		return nil, errors.New("invalid value for required argument 'JsonKey'")
	}
	if args.JsonKey != nil {
		args.JsonKey = pulumi.ToSecret(args.JsonKey).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"jsonKey",
	})
	opts = append(opts, secrets)
	var resource GcpAccount
	err := ctx.RegisterResource("octopusdeploy:index/gcpAccount:GcpAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGcpAccount gets an existing GcpAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGcpAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GcpAccountState, opts ...pulumi.ResourceOption) (*GcpAccount, error) {
	var resource GcpAccount
	err := ctx.ReadResource("octopusdeploy:index/gcpAccount:GcpAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GcpAccount resources.
type gcpAccountState struct {
	// A user-friendly description of this GCP account.
	Description *string `pulumi:"description"`
	// A list of environment IDs associated with this resource.
	Environments []string `pulumi:"environments"`
	// The JSON key associated with this GCP account.
	JsonKey *string `pulumi:"jsonKey"`
	// The name of this GCP account.
	Name *string `pulumi:"name"`
	// The space ID associated with this resource.
	SpaceId *string `pulumi:"spaceId"`
	// A list of tenant tags associated with this resource.
	TenantTags []string `pulumi:"tenantTags"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation *string `pulumi:"tenantedDeploymentParticipation"`
	// A list of tenant IDs associated with this resource.
	Tenants []string `pulumi:"tenants"`
}

type GcpAccountState struct {
	// A user-friendly description of this GCP account.
	Description pulumi.StringPtrInput
	// A list of environment IDs associated with this resource.
	Environments pulumi.StringArrayInput
	// The JSON key associated with this GCP account.
	JsonKey pulumi.StringPtrInput
	// The name of this GCP account.
	Name pulumi.StringPtrInput
	// The space ID associated with this resource.
	SpaceId pulumi.StringPtrInput
	// A list of tenant tags associated with this resource.
	TenantTags pulumi.StringArrayInput
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation pulumi.StringPtrInput
	// A list of tenant IDs associated with this resource.
	Tenants pulumi.StringArrayInput
}

func (GcpAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*gcpAccountState)(nil)).Elem()
}

type gcpAccountArgs struct {
	// A user-friendly description of this GCP account.
	Description *string `pulumi:"description"`
	// A list of environment IDs associated with this resource.
	Environments []string `pulumi:"environments"`
	// The JSON key associated with this GCP account.
	JsonKey string `pulumi:"jsonKey"`
	// The name of this GCP account.
	Name *string `pulumi:"name"`
	// The space ID associated with this resource.
	SpaceId *string `pulumi:"spaceId"`
	// A list of tenant tags associated with this resource.
	TenantTags []string `pulumi:"tenantTags"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation *string `pulumi:"tenantedDeploymentParticipation"`
	// A list of tenant IDs associated with this resource.
	Tenants []string `pulumi:"tenants"`
}

// The set of arguments for constructing a GcpAccount resource.
type GcpAccountArgs struct {
	// A user-friendly description of this GCP account.
	Description pulumi.StringPtrInput
	// A list of environment IDs associated with this resource.
	Environments pulumi.StringArrayInput
	// The JSON key associated with this GCP account.
	JsonKey pulumi.StringInput
	// The name of this GCP account.
	Name pulumi.StringPtrInput
	// The space ID associated with this resource.
	SpaceId pulumi.StringPtrInput
	// A list of tenant tags associated with this resource.
	TenantTags pulumi.StringArrayInput
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation pulumi.StringPtrInput
	// A list of tenant IDs associated with this resource.
	Tenants pulumi.StringArrayInput
}

func (GcpAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gcpAccountArgs)(nil)).Elem()
}

type GcpAccountInput interface {
	pulumi.Input

	ToGcpAccountOutput() GcpAccountOutput
	ToGcpAccountOutputWithContext(ctx context.Context) GcpAccountOutput
}

func (*GcpAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpAccount)(nil)).Elem()
}

func (i *GcpAccount) ToGcpAccountOutput() GcpAccountOutput {
	return i.ToGcpAccountOutputWithContext(context.Background())
}

func (i *GcpAccount) ToGcpAccountOutputWithContext(ctx context.Context) GcpAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpAccountOutput)
}

// GcpAccountArrayInput is an input type that accepts GcpAccountArray and GcpAccountArrayOutput values.
// You can construct a concrete instance of `GcpAccountArrayInput` via:
//
//	GcpAccountArray{ GcpAccountArgs{...} }
type GcpAccountArrayInput interface {
	pulumi.Input

	ToGcpAccountArrayOutput() GcpAccountArrayOutput
	ToGcpAccountArrayOutputWithContext(context.Context) GcpAccountArrayOutput
}

type GcpAccountArray []GcpAccountInput

func (GcpAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GcpAccount)(nil)).Elem()
}

func (i GcpAccountArray) ToGcpAccountArrayOutput() GcpAccountArrayOutput {
	return i.ToGcpAccountArrayOutputWithContext(context.Background())
}

func (i GcpAccountArray) ToGcpAccountArrayOutputWithContext(ctx context.Context) GcpAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpAccountArrayOutput)
}

// GcpAccountMapInput is an input type that accepts GcpAccountMap and GcpAccountMapOutput values.
// You can construct a concrete instance of `GcpAccountMapInput` via:
//
//	GcpAccountMap{ "key": GcpAccountArgs{...} }
type GcpAccountMapInput interface {
	pulumi.Input

	ToGcpAccountMapOutput() GcpAccountMapOutput
	ToGcpAccountMapOutputWithContext(context.Context) GcpAccountMapOutput
}

type GcpAccountMap map[string]GcpAccountInput

func (GcpAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GcpAccount)(nil)).Elem()
}

func (i GcpAccountMap) ToGcpAccountMapOutput() GcpAccountMapOutput {
	return i.ToGcpAccountMapOutputWithContext(context.Background())
}

func (i GcpAccountMap) ToGcpAccountMapOutputWithContext(ctx context.Context) GcpAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpAccountMapOutput)
}

type GcpAccountOutput struct{ *pulumi.OutputState }

func (GcpAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpAccount)(nil)).Elem()
}

func (o GcpAccountOutput) ToGcpAccountOutput() GcpAccountOutput {
	return o
}

func (o GcpAccountOutput) ToGcpAccountOutputWithContext(ctx context.Context) GcpAccountOutput {
	return o
}

// A user-friendly description of this GCP account.
func (o GcpAccountOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpAccount) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of environment IDs associated with this resource.
func (o GcpAccountOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GcpAccount) pulumi.StringArrayOutput { return v.Environments }).(pulumi.StringArrayOutput)
}

// The JSON key associated with this GCP account.
func (o GcpAccountOutput) JsonKey() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpAccount) pulumi.StringOutput { return v.JsonKey }).(pulumi.StringOutput)
}

// The name of this GCP account.
func (o GcpAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpAccount) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The space ID associated with this resource.
func (o GcpAccountOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpAccount) pulumi.StringOutput { return v.SpaceId }).(pulumi.StringOutput)
}

// A list of tenant tags associated with this resource.
func (o GcpAccountOutput) TenantTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GcpAccount) pulumi.StringArrayOutput { return v.TenantTags }).(pulumi.StringArrayOutput)
}

// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
func (o GcpAccountOutput) TenantedDeploymentParticipation() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpAccount) pulumi.StringOutput { return v.TenantedDeploymentParticipation }).(pulumi.StringOutput)
}

// A list of tenant IDs associated with this resource.
func (o GcpAccountOutput) Tenants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GcpAccount) pulumi.StringArrayOutput { return v.Tenants }).(pulumi.StringArrayOutput)
}

type GcpAccountArrayOutput struct{ *pulumi.OutputState }

func (GcpAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GcpAccount)(nil)).Elem()
}

func (o GcpAccountArrayOutput) ToGcpAccountArrayOutput() GcpAccountArrayOutput {
	return o
}

func (o GcpAccountArrayOutput) ToGcpAccountArrayOutputWithContext(ctx context.Context) GcpAccountArrayOutput {
	return o
}

func (o GcpAccountArrayOutput) Index(i pulumi.IntInput) GcpAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GcpAccount {
		return vs[0].([]*GcpAccount)[vs[1].(int)]
	}).(GcpAccountOutput)
}

type GcpAccountMapOutput struct{ *pulumi.OutputState }

func (GcpAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GcpAccount)(nil)).Elem()
}

func (o GcpAccountMapOutput) ToGcpAccountMapOutput() GcpAccountMapOutput {
	return o
}

func (o GcpAccountMapOutput) ToGcpAccountMapOutputWithContext(ctx context.Context) GcpAccountMapOutput {
	return o
}

func (o GcpAccountMapOutput) MapIndex(k pulumi.StringInput) GcpAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GcpAccount {
		return vs[0].(map[string]*GcpAccount)[vs[1].(string)]
	}).(GcpAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GcpAccountInput)(nil)).Elem(), &GcpAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpAccountArrayInput)(nil)).Elem(), GcpAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpAccountMapInput)(nil)).Elem(), GcpAccountMap{})
	pulumi.RegisterOutputType(GcpAccountOutput{})
	pulumi.RegisterOutputType(GcpAccountArrayOutput{})
	pulumi.RegisterOutputType(GcpAccountMapOutput{})
}
