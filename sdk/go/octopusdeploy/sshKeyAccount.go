// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package octopusdeploy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource manages SSH key accounts in Octopus Deploy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := octopusdeploy.NewSshKeyAccount(ctx, "example", &octopusdeploy.SshKeyAccountArgs{
//				PrivateKeyFile: pulumi.String("[private_key_file]"),
//				Username:       pulumi.String("[username]"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import octopusdeploy:index/sshKeyAccount:SshKeyAccount [options] octopusdeploy_ssh_key_account.<name> <account-id>
//
// ```
type SshKeyAccount struct {
	pulumi.CustomResourceState

	// The description of this SSH key account.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A list of environment IDs associated with this resource.
	Environments pulumi.StringArrayOutput `pulumi:"environments"`
	// The name of this resource.
	Name                 pulumi.StringOutput    `pulumi:"name"`
	PrivateKeyFile       pulumi.StringOutput    `pulumi:"privateKeyFile"`
	PrivateKeyPassphrase pulumi.StringPtrOutput `pulumi:"privateKeyPassphrase"`
	// The space ID associated with this resource.
	SpaceId pulumi.StringOutput `pulumi:"spaceId"`
	// A list of tenant tags associated with this resource.
	TenantTags pulumi.StringArrayOutput `pulumi:"tenantTags"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation pulumi.StringOutput `pulumi:"tenantedDeploymentParticipation"`
	// A list of tenant IDs associated with this resource.
	Tenants pulumi.StringArrayOutput `pulumi:"tenants"`
	// The username associated with this resource.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewSshKeyAccount registers a new resource with the given unique name, arguments, and options.
func NewSshKeyAccount(ctx *pulumi.Context,
	name string, args *SshKeyAccountArgs, opts ...pulumi.ResourceOption) (*SshKeyAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PrivateKeyFile == nil {
		return nil, errors.New("invalid value for required argument 'PrivateKeyFile'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	if args.PrivateKeyFile != nil {
		args.PrivateKeyFile = pulumi.ToSecret(args.PrivateKeyFile).(pulumi.StringInput)
	}
	if args.PrivateKeyPassphrase != nil {
		args.PrivateKeyPassphrase = pulumi.ToSecret(args.PrivateKeyPassphrase).(pulumi.StringPtrInput)
	}
	if args.Username != nil {
		args.Username = pulumi.ToSecret(args.Username).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"privateKeyFile",
		"privateKeyPassphrase",
		"username",
	})
	opts = append(opts, secrets)
	var resource SshKeyAccount
	err := ctx.RegisterResource("octopusdeploy:index/sshKeyAccount:SshKeyAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSshKeyAccount gets an existing SshKeyAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSshKeyAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SshKeyAccountState, opts ...pulumi.ResourceOption) (*SshKeyAccount, error) {
	var resource SshKeyAccount
	err := ctx.ReadResource("octopusdeploy:index/sshKeyAccount:SshKeyAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SshKeyAccount resources.
type sshKeyAccountState struct {
	// The description of this SSH key account.
	Description *string `pulumi:"description"`
	// A list of environment IDs associated with this resource.
	Environments []string `pulumi:"environments"`
	// The name of this resource.
	Name                 *string `pulumi:"name"`
	PrivateKeyFile       *string `pulumi:"privateKeyFile"`
	PrivateKeyPassphrase *string `pulumi:"privateKeyPassphrase"`
	// The space ID associated with this resource.
	SpaceId *string `pulumi:"spaceId"`
	// A list of tenant tags associated with this resource.
	TenantTags []string `pulumi:"tenantTags"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation *string `pulumi:"tenantedDeploymentParticipation"`
	// A list of tenant IDs associated with this resource.
	Tenants []string `pulumi:"tenants"`
	// The username associated with this resource.
	Username *string `pulumi:"username"`
}

type SshKeyAccountState struct {
	// The description of this SSH key account.
	Description pulumi.StringPtrInput
	// A list of environment IDs associated with this resource.
	Environments pulumi.StringArrayInput
	// The name of this resource.
	Name                 pulumi.StringPtrInput
	PrivateKeyFile       pulumi.StringPtrInput
	PrivateKeyPassphrase pulumi.StringPtrInput
	// The space ID associated with this resource.
	SpaceId pulumi.StringPtrInput
	// A list of tenant tags associated with this resource.
	TenantTags pulumi.StringArrayInput
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation pulumi.StringPtrInput
	// A list of tenant IDs associated with this resource.
	Tenants pulumi.StringArrayInput
	// The username associated with this resource.
	Username pulumi.StringPtrInput
}

func (SshKeyAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*sshKeyAccountState)(nil)).Elem()
}

type sshKeyAccountArgs struct {
	// The description of this SSH key account.
	Description *string `pulumi:"description"`
	// A list of environment IDs associated with this resource.
	Environments []string `pulumi:"environments"`
	// The name of this resource.
	Name                 *string `pulumi:"name"`
	PrivateKeyFile       string  `pulumi:"privateKeyFile"`
	PrivateKeyPassphrase *string `pulumi:"privateKeyPassphrase"`
	// The space ID associated with this resource.
	SpaceId *string `pulumi:"spaceId"`
	// A list of tenant tags associated with this resource.
	TenantTags []string `pulumi:"tenantTags"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation *string `pulumi:"tenantedDeploymentParticipation"`
	// A list of tenant IDs associated with this resource.
	Tenants []string `pulumi:"tenants"`
	// The username associated with this resource.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a SshKeyAccount resource.
type SshKeyAccountArgs struct {
	// The description of this SSH key account.
	Description pulumi.StringPtrInput
	// A list of environment IDs associated with this resource.
	Environments pulumi.StringArrayInput
	// The name of this resource.
	Name                 pulumi.StringPtrInput
	PrivateKeyFile       pulumi.StringInput
	PrivateKeyPassphrase pulumi.StringPtrInput
	// The space ID associated with this resource.
	SpaceId pulumi.StringPtrInput
	// A list of tenant tags associated with this resource.
	TenantTags pulumi.StringArrayInput
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation pulumi.StringPtrInput
	// A list of tenant IDs associated with this resource.
	Tenants pulumi.StringArrayInput
	// The username associated with this resource.
	Username pulumi.StringInput
}

func (SshKeyAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sshKeyAccountArgs)(nil)).Elem()
}

type SshKeyAccountInput interface {
	pulumi.Input

	ToSshKeyAccountOutput() SshKeyAccountOutput
	ToSshKeyAccountOutputWithContext(ctx context.Context) SshKeyAccountOutput
}

func (*SshKeyAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**SshKeyAccount)(nil)).Elem()
}

func (i *SshKeyAccount) ToSshKeyAccountOutput() SshKeyAccountOutput {
	return i.ToSshKeyAccountOutputWithContext(context.Background())
}

func (i *SshKeyAccount) ToSshKeyAccountOutputWithContext(ctx context.Context) SshKeyAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshKeyAccountOutput)
}

// SshKeyAccountArrayInput is an input type that accepts SshKeyAccountArray and SshKeyAccountArrayOutput values.
// You can construct a concrete instance of `SshKeyAccountArrayInput` via:
//
//	SshKeyAccountArray{ SshKeyAccountArgs{...} }
type SshKeyAccountArrayInput interface {
	pulumi.Input

	ToSshKeyAccountArrayOutput() SshKeyAccountArrayOutput
	ToSshKeyAccountArrayOutputWithContext(context.Context) SshKeyAccountArrayOutput
}

type SshKeyAccountArray []SshKeyAccountInput

func (SshKeyAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SshKeyAccount)(nil)).Elem()
}

func (i SshKeyAccountArray) ToSshKeyAccountArrayOutput() SshKeyAccountArrayOutput {
	return i.ToSshKeyAccountArrayOutputWithContext(context.Background())
}

func (i SshKeyAccountArray) ToSshKeyAccountArrayOutputWithContext(ctx context.Context) SshKeyAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshKeyAccountArrayOutput)
}

// SshKeyAccountMapInput is an input type that accepts SshKeyAccountMap and SshKeyAccountMapOutput values.
// You can construct a concrete instance of `SshKeyAccountMapInput` via:
//
//	SshKeyAccountMap{ "key": SshKeyAccountArgs{...} }
type SshKeyAccountMapInput interface {
	pulumi.Input

	ToSshKeyAccountMapOutput() SshKeyAccountMapOutput
	ToSshKeyAccountMapOutputWithContext(context.Context) SshKeyAccountMapOutput
}

type SshKeyAccountMap map[string]SshKeyAccountInput

func (SshKeyAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SshKeyAccount)(nil)).Elem()
}

func (i SshKeyAccountMap) ToSshKeyAccountMapOutput() SshKeyAccountMapOutput {
	return i.ToSshKeyAccountMapOutputWithContext(context.Background())
}

func (i SshKeyAccountMap) ToSshKeyAccountMapOutputWithContext(ctx context.Context) SshKeyAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshKeyAccountMapOutput)
}

type SshKeyAccountOutput struct{ *pulumi.OutputState }

func (SshKeyAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SshKeyAccount)(nil)).Elem()
}

func (o SshKeyAccountOutput) ToSshKeyAccountOutput() SshKeyAccountOutput {
	return o
}

func (o SshKeyAccountOutput) ToSshKeyAccountOutputWithContext(ctx context.Context) SshKeyAccountOutput {
	return o
}

// The description of this SSH key account.
func (o SshKeyAccountOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SshKeyAccount) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of environment IDs associated with this resource.
func (o SshKeyAccountOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SshKeyAccount) pulumi.StringArrayOutput { return v.Environments }).(pulumi.StringArrayOutput)
}

// The name of this resource.
func (o SshKeyAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SshKeyAccount) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SshKeyAccountOutput) PrivateKeyFile() pulumi.StringOutput {
	return o.ApplyT(func(v *SshKeyAccount) pulumi.StringOutput { return v.PrivateKeyFile }).(pulumi.StringOutput)
}

func (o SshKeyAccountOutput) PrivateKeyPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SshKeyAccount) pulumi.StringPtrOutput { return v.PrivateKeyPassphrase }).(pulumi.StringPtrOutput)
}

// The space ID associated with this resource.
func (o SshKeyAccountOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SshKeyAccount) pulumi.StringOutput { return v.SpaceId }).(pulumi.StringOutput)
}

// A list of tenant tags associated with this resource.
func (o SshKeyAccountOutput) TenantTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SshKeyAccount) pulumi.StringArrayOutput { return v.TenantTags }).(pulumi.StringArrayOutput)
}

// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
func (o SshKeyAccountOutput) TenantedDeploymentParticipation() pulumi.StringOutput {
	return o.ApplyT(func(v *SshKeyAccount) pulumi.StringOutput { return v.TenantedDeploymentParticipation }).(pulumi.StringOutput)
}

// A list of tenant IDs associated with this resource.
func (o SshKeyAccountOutput) Tenants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SshKeyAccount) pulumi.StringArrayOutput { return v.Tenants }).(pulumi.StringArrayOutput)
}

// The username associated with this resource.
func (o SshKeyAccountOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *SshKeyAccount) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type SshKeyAccountArrayOutput struct{ *pulumi.OutputState }

func (SshKeyAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SshKeyAccount)(nil)).Elem()
}

func (o SshKeyAccountArrayOutput) ToSshKeyAccountArrayOutput() SshKeyAccountArrayOutput {
	return o
}

func (o SshKeyAccountArrayOutput) ToSshKeyAccountArrayOutputWithContext(ctx context.Context) SshKeyAccountArrayOutput {
	return o
}

func (o SshKeyAccountArrayOutput) Index(i pulumi.IntInput) SshKeyAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SshKeyAccount {
		return vs[0].([]*SshKeyAccount)[vs[1].(int)]
	}).(SshKeyAccountOutput)
}

type SshKeyAccountMapOutput struct{ *pulumi.OutputState }

func (SshKeyAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SshKeyAccount)(nil)).Elem()
}

func (o SshKeyAccountMapOutput) ToSshKeyAccountMapOutput() SshKeyAccountMapOutput {
	return o
}

func (o SshKeyAccountMapOutput) ToSshKeyAccountMapOutputWithContext(ctx context.Context) SshKeyAccountMapOutput {
	return o
}

func (o SshKeyAccountMapOutput) MapIndex(k pulumi.StringInput) SshKeyAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SshKeyAccount {
		return vs[0].(map[string]*SshKeyAccount)[vs[1].(string)]
	}).(SshKeyAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SshKeyAccountInput)(nil)).Elem(), &SshKeyAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshKeyAccountArrayInput)(nil)).Elem(), SshKeyAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshKeyAccountMapInput)(nil)).Elem(), SshKeyAccountMap{})
	pulumi.RegisterOutputType(SshKeyAccountOutput{})
	pulumi.RegisterOutputType(SshKeyAccountArrayOutput{})
	pulumi.RegisterOutputType(SshKeyAccountMapOutput{})
}
