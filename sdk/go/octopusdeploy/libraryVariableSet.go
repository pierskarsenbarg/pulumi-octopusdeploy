// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package octopusdeploy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource manages library variable sets in Octopus Deploy.
type LibraryVariableSet struct {
	pulumi.CustomResourceState

	// The description of this library variable set.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of this resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The space ID associated with this resource.
	SpaceId       pulumi.StringOutput                   `pulumi:"spaceId"`
	Templates     LibraryVariableSetTemplateArrayOutput `pulumi:"templates"`
	VariableSetId pulumi.StringOutput                   `pulumi:"variableSetId"`
}

// NewLibraryVariableSet registers a new resource with the given unique name, arguments, and options.
func NewLibraryVariableSet(ctx *pulumi.Context,
	name string, args *LibraryVariableSetArgs, opts ...pulumi.ResourceOption) (*LibraryVariableSet, error) {
	if args == nil {
		args = &LibraryVariableSetArgs{}
	}

	var resource LibraryVariableSet
	err := ctx.RegisterResource("octopusdeploy:index/libraryVariableSet:LibraryVariableSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLibraryVariableSet gets an existing LibraryVariableSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLibraryVariableSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LibraryVariableSetState, opts ...pulumi.ResourceOption) (*LibraryVariableSet, error) {
	var resource LibraryVariableSet
	err := ctx.ReadResource("octopusdeploy:index/libraryVariableSet:LibraryVariableSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LibraryVariableSet resources.
type libraryVariableSetState struct {
	// The description of this library variable set.
	Description *string `pulumi:"description"`
	// The name of this resource.
	Name *string `pulumi:"name"`
	// The space ID associated with this resource.
	SpaceId       *string                      `pulumi:"spaceId"`
	Templates     []LibraryVariableSetTemplate `pulumi:"templates"`
	VariableSetId *string                      `pulumi:"variableSetId"`
}

type LibraryVariableSetState struct {
	// The description of this library variable set.
	Description pulumi.StringPtrInput
	// The name of this resource.
	Name pulumi.StringPtrInput
	// The space ID associated with this resource.
	SpaceId       pulumi.StringPtrInput
	Templates     LibraryVariableSetTemplateArrayInput
	VariableSetId pulumi.StringPtrInput
}

func (LibraryVariableSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*libraryVariableSetState)(nil)).Elem()
}

type libraryVariableSetArgs struct {
	// The description of this library variable set.
	Description *string `pulumi:"description"`
	// The name of this resource.
	Name *string `pulumi:"name"`
	// The space ID associated with this resource.
	SpaceId   *string                      `pulumi:"spaceId"`
	Templates []LibraryVariableSetTemplate `pulumi:"templates"`
}

// The set of arguments for constructing a LibraryVariableSet resource.
type LibraryVariableSetArgs struct {
	// The description of this library variable set.
	Description pulumi.StringPtrInput
	// The name of this resource.
	Name pulumi.StringPtrInput
	// The space ID associated with this resource.
	SpaceId   pulumi.StringPtrInput
	Templates LibraryVariableSetTemplateArrayInput
}

func (LibraryVariableSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*libraryVariableSetArgs)(nil)).Elem()
}

type LibraryVariableSetInput interface {
	pulumi.Input

	ToLibraryVariableSetOutput() LibraryVariableSetOutput
	ToLibraryVariableSetOutputWithContext(ctx context.Context) LibraryVariableSetOutput
}

func (*LibraryVariableSet) ElementType() reflect.Type {
	return reflect.TypeOf((**LibraryVariableSet)(nil)).Elem()
}

func (i *LibraryVariableSet) ToLibraryVariableSetOutput() LibraryVariableSetOutput {
	return i.ToLibraryVariableSetOutputWithContext(context.Background())
}

func (i *LibraryVariableSet) ToLibraryVariableSetOutputWithContext(ctx context.Context) LibraryVariableSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LibraryVariableSetOutput)
}

// LibraryVariableSetArrayInput is an input type that accepts LibraryVariableSetArray and LibraryVariableSetArrayOutput values.
// You can construct a concrete instance of `LibraryVariableSetArrayInput` via:
//
//	LibraryVariableSetArray{ LibraryVariableSetArgs{...} }
type LibraryVariableSetArrayInput interface {
	pulumi.Input

	ToLibraryVariableSetArrayOutput() LibraryVariableSetArrayOutput
	ToLibraryVariableSetArrayOutputWithContext(context.Context) LibraryVariableSetArrayOutput
}

type LibraryVariableSetArray []LibraryVariableSetInput

func (LibraryVariableSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LibraryVariableSet)(nil)).Elem()
}

func (i LibraryVariableSetArray) ToLibraryVariableSetArrayOutput() LibraryVariableSetArrayOutput {
	return i.ToLibraryVariableSetArrayOutputWithContext(context.Background())
}

func (i LibraryVariableSetArray) ToLibraryVariableSetArrayOutputWithContext(ctx context.Context) LibraryVariableSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LibraryVariableSetArrayOutput)
}

// LibraryVariableSetMapInput is an input type that accepts LibraryVariableSetMap and LibraryVariableSetMapOutput values.
// You can construct a concrete instance of `LibraryVariableSetMapInput` via:
//
//	LibraryVariableSetMap{ "key": LibraryVariableSetArgs{...} }
type LibraryVariableSetMapInput interface {
	pulumi.Input

	ToLibraryVariableSetMapOutput() LibraryVariableSetMapOutput
	ToLibraryVariableSetMapOutputWithContext(context.Context) LibraryVariableSetMapOutput
}

type LibraryVariableSetMap map[string]LibraryVariableSetInput

func (LibraryVariableSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LibraryVariableSet)(nil)).Elem()
}

func (i LibraryVariableSetMap) ToLibraryVariableSetMapOutput() LibraryVariableSetMapOutput {
	return i.ToLibraryVariableSetMapOutputWithContext(context.Background())
}

func (i LibraryVariableSetMap) ToLibraryVariableSetMapOutputWithContext(ctx context.Context) LibraryVariableSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LibraryVariableSetMapOutput)
}

type LibraryVariableSetOutput struct{ *pulumi.OutputState }

func (LibraryVariableSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LibraryVariableSet)(nil)).Elem()
}

func (o LibraryVariableSetOutput) ToLibraryVariableSetOutput() LibraryVariableSetOutput {
	return o
}

func (o LibraryVariableSetOutput) ToLibraryVariableSetOutputWithContext(ctx context.Context) LibraryVariableSetOutput {
	return o
}

// The description of this library variable set.
func (o LibraryVariableSetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LibraryVariableSet) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of this resource.
func (o LibraryVariableSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LibraryVariableSet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The space ID associated with this resource.
func (o LibraryVariableSetOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *LibraryVariableSet) pulumi.StringOutput { return v.SpaceId }).(pulumi.StringOutput)
}

func (o LibraryVariableSetOutput) Templates() LibraryVariableSetTemplateArrayOutput {
	return o.ApplyT(func(v *LibraryVariableSet) LibraryVariableSetTemplateArrayOutput { return v.Templates }).(LibraryVariableSetTemplateArrayOutput)
}

func (o LibraryVariableSetOutput) VariableSetId() pulumi.StringOutput {
	return o.ApplyT(func(v *LibraryVariableSet) pulumi.StringOutput { return v.VariableSetId }).(pulumi.StringOutput)
}

type LibraryVariableSetArrayOutput struct{ *pulumi.OutputState }

func (LibraryVariableSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LibraryVariableSet)(nil)).Elem()
}

func (o LibraryVariableSetArrayOutput) ToLibraryVariableSetArrayOutput() LibraryVariableSetArrayOutput {
	return o
}

func (o LibraryVariableSetArrayOutput) ToLibraryVariableSetArrayOutputWithContext(ctx context.Context) LibraryVariableSetArrayOutput {
	return o
}

func (o LibraryVariableSetArrayOutput) Index(i pulumi.IntInput) LibraryVariableSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LibraryVariableSet {
		return vs[0].([]*LibraryVariableSet)[vs[1].(int)]
	}).(LibraryVariableSetOutput)
}

type LibraryVariableSetMapOutput struct{ *pulumi.OutputState }

func (LibraryVariableSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LibraryVariableSet)(nil)).Elem()
}

func (o LibraryVariableSetMapOutput) ToLibraryVariableSetMapOutput() LibraryVariableSetMapOutput {
	return o
}

func (o LibraryVariableSetMapOutput) ToLibraryVariableSetMapOutputWithContext(ctx context.Context) LibraryVariableSetMapOutput {
	return o
}

func (o LibraryVariableSetMapOutput) MapIndex(k pulumi.StringInput) LibraryVariableSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LibraryVariableSet {
		return vs[0].(map[string]*LibraryVariableSet)[vs[1].(string)]
	}).(LibraryVariableSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LibraryVariableSetInput)(nil)).Elem(), &LibraryVariableSet{})
	pulumi.RegisterInputType(reflect.TypeOf((*LibraryVariableSetArrayInput)(nil)).Elem(), LibraryVariableSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LibraryVariableSetMapInput)(nil)).Elem(), LibraryVariableSetMap{})
	pulumi.RegisterOutputType(LibraryVariableSetOutput{})
	pulumi.RegisterOutputType(LibraryVariableSetArrayOutput{})
	pulumi.RegisterOutputType(LibraryVariableSetMapOutput{})
}
