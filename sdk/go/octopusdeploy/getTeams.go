// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package octopusdeploy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about existing users.
func GetTeams(ctx *pulumi.Context, args *GetTeamsArgs, opts ...pulumi.InvokeOption) (*GetTeamsResult, error) {
	var rv GetTeamsResult
	err := ctx.Invoke("octopusdeploy:index/getTeams:getTeams", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTeams.
type GetTeamsArgs struct {
	// A filter to search by a list of IDs.
	Ids []string `pulumi:"ids"`
	// A filter to include system teams.
	IncludeSystem *bool `pulumi:"includeSystem"`
	// A filter to search by the partial match of a name.
	PartialName *string `pulumi:"partialName"`
	// A filter to specify the number of items to skip in the response.
	Skip *int `pulumi:"skip"`
	// A filter to search by a list of space IDs.
	Spaces []string `pulumi:"spaces"`
	// A filter to specify the number of items to take (or return) in the response.
	Take *int `pulumi:"take"`
	// A list of teams that match the filter(s).
	Teams []GetTeamsTeam `pulumi:"teams"`
}

// A collection of values returned by getTeams.
type GetTeamsResult struct {
	// An auto-generated identifier that includes the timestamp when this data source was last modified.
	Id string `pulumi:"id"`
	// A filter to search by a list of IDs.
	Ids []string `pulumi:"ids"`
	// A filter to include system teams.
	IncludeSystem *bool `pulumi:"includeSystem"`
	// A filter to search by the partial match of a name.
	PartialName *string `pulumi:"partialName"`
	// A filter to specify the number of items to skip in the response.
	Skip *int `pulumi:"skip"`
	// A filter to search by a list of space IDs.
	Spaces []string `pulumi:"spaces"`
	// A filter to specify the number of items to take (or return) in the response.
	Take *int `pulumi:"take"`
	// A list of teams that match the filter(s).
	Teams []GetTeamsTeam `pulumi:"teams"`
}

func GetTeamsOutput(ctx *pulumi.Context, args GetTeamsOutputArgs, opts ...pulumi.InvokeOption) GetTeamsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTeamsResult, error) {
			args := v.(GetTeamsArgs)
			r, err := GetTeams(ctx, &args, opts...)
			var s GetTeamsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTeamsResultOutput)
}

// A collection of arguments for invoking getTeams.
type GetTeamsOutputArgs struct {
	// A filter to search by a list of IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A filter to include system teams.
	IncludeSystem pulumi.BoolPtrInput `pulumi:"includeSystem"`
	// A filter to search by the partial match of a name.
	PartialName pulumi.StringPtrInput `pulumi:"partialName"`
	// A filter to specify the number of items to skip in the response.
	Skip pulumi.IntPtrInput `pulumi:"skip"`
	// A filter to search by a list of space IDs.
	Spaces pulumi.StringArrayInput `pulumi:"spaces"`
	// A filter to specify the number of items to take (or return) in the response.
	Take pulumi.IntPtrInput `pulumi:"take"`
	// A list of teams that match the filter(s).
	Teams GetTeamsTeamArrayInput `pulumi:"teams"`
}

func (GetTeamsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamsArgs)(nil)).Elem()
}

// A collection of values returned by getTeams.
type GetTeamsResultOutput struct{ *pulumi.OutputState }

func (GetTeamsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamsResult)(nil)).Elem()
}

func (o GetTeamsResultOutput) ToGetTeamsResultOutput() GetTeamsResultOutput {
	return o
}

func (o GetTeamsResultOutput) ToGetTeamsResultOutputWithContext(ctx context.Context) GetTeamsResultOutput {
	return o
}

// An auto-generated identifier that includes the timestamp when this data source was last modified.
func (o GetTeamsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A filter to search by a list of IDs.
func (o GetTeamsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTeamsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// A filter to include system teams.
func (o GetTeamsResultOutput) IncludeSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetTeamsResult) *bool { return v.IncludeSystem }).(pulumi.BoolPtrOutput)
}

// A filter to search by the partial match of a name.
func (o GetTeamsResultOutput) PartialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTeamsResult) *string { return v.PartialName }).(pulumi.StringPtrOutput)
}

// A filter to specify the number of items to skip in the response.
func (o GetTeamsResultOutput) Skip() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetTeamsResult) *int { return v.Skip }).(pulumi.IntPtrOutput)
}

// A filter to search by a list of space IDs.
func (o GetTeamsResultOutput) Spaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTeamsResult) []string { return v.Spaces }).(pulumi.StringArrayOutput)
}

// A filter to specify the number of items to take (or return) in the response.
func (o GetTeamsResultOutput) Take() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetTeamsResult) *int { return v.Take }).(pulumi.IntPtrOutput)
}

// A list of teams that match the filter(s).
func (o GetTeamsResultOutput) Teams() GetTeamsTeamArrayOutput {
	return o.ApplyT(func(v GetTeamsResult) []GetTeamsTeam { return v.Teams }).(GetTeamsTeamArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTeamsResultOutput{})
}
