// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package octopusdeploy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource manages machine policies in Octopus Deploy.
type MachinePolicy struct {
	pulumi.CustomResourceState

	ConnectionConnectTimeout     pulumi.IntPtrOutput `pulumi:"connectionConnectTimeout"`
	ConnectionRetryCountLimit    pulumi.IntPtrOutput `pulumi:"connectionRetryCountLimit"`
	ConnectionRetrySleepInterval pulumi.IntPtrOutput `pulumi:"connectionRetrySleepInterval"`
	ConnectionRetryTimeLimit     pulumi.IntPtrOutput `pulumi:"connectionRetryTimeLimit"`
	// The description of this machine policy.
	Description               pulumi.StringPtrOutput                       `pulumi:"description"`
	IsDefault                 pulumi.BoolOutput                            `pulumi:"isDefault"`
	MachineCleanupPolicy      MachinePolicyMachineCleanupPolicyOutput      `pulumi:"machineCleanupPolicy"`
	MachineConnectivityPolicy MachinePolicyMachineConnectivityPolicyOutput `pulumi:"machineConnectivityPolicy"`
	MachineHealthCheckPolicy  MachinePolicyMachineHealthCheckPolicyOutput  `pulumi:"machineHealthCheckPolicy"`
	MachineUpdatePolicy       MachinePolicyMachineUpdatePolicyOutput       `pulumi:"machineUpdatePolicy"`
	// The name of this resource.
	Name                                          pulumi.StringOutput `pulumi:"name"`
	PollingRequestMaximumMessageProcessingTimeout pulumi.IntPtrOutput `pulumi:"pollingRequestMaximumMessageProcessingTimeout"`
	PollingRequestQueueTimeout                    pulumi.IntPtrOutput `pulumi:"pollingRequestQueueTimeout"`
	// The space ID associated with this resource.
	SpaceId pulumi.StringOutput `pulumi:"spaceId"`
}

// NewMachinePolicy registers a new resource with the given unique name, arguments, and options.
func NewMachinePolicy(ctx *pulumi.Context,
	name string, args *MachinePolicyArgs, opts ...pulumi.ResourceOption) (*MachinePolicy, error) {
	if args == nil {
		args = &MachinePolicyArgs{}
	}

	var resource MachinePolicy
	err := ctx.RegisterResource("octopusdeploy:index/machinePolicy:MachinePolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMachinePolicy gets an existing MachinePolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMachinePolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MachinePolicyState, opts ...pulumi.ResourceOption) (*MachinePolicy, error) {
	var resource MachinePolicy
	err := ctx.ReadResource("octopusdeploy:index/machinePolicy:MachinePolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MachinePolicy resources.
type machinePolicyState struct {
	ConnectionConnectTimeout     *int `pulumi:"connectionConnectTimeout"`
	ConnectionRetryCountLimit    *int `pulumi:"connectionRetryCountLimit"`
	ConnectionRetrySleepInterval *int `pulumi:"connectionRetrySleepInterval"`
	ConnectionRetryTimeLimit     *int `pulumi:"connectionRetryTimeLimit"`
	// The description of this machine policy.
	Description               *string                                 `pulumi:"description"`
	IsDefault                 *bool                                   `pulumi:"isDefault"`
	MachineCleanupPolicy      *MachinePolicyMachineCleanupPolicy      `pulumi:"machineCleanupPolicy"`
	MachineConnectivityPolicy *MachinePolicyMachineConnectivityPolicy `pulumi:"machineConnectivityPolicy"`
	MachineHealthCheckPolicy  *MachinePolicyMachineHealthCheckPolicy  `pulumi:"machineHealthCheckPolicy"`
	MachineUpdatePolicy       *MachinePolicyMachineUpdatePolicy       `pulumi:"machineUpdatePolicy"`
	// The name of this resource.
	Name                                          *string `pulumi:"name"`
	PollingRequestMaximumMessageProcessingTimeout *int    `pulumi:"pollingRequestMaximumMessageProcessingTimeout"`
	PollingRequestQueueTimeout                    *int    `pulumi:"pollingRequestQueueTimeout"`
	// The space ID associated with this resource.
	SpaceId *string `pulumi:"spaceId"`
}

type MachinePolicyState struct {
	ConnectionConnectTimeout     pulumi.IntPtrInput
	ConnectionRetryCountLimit    pulumi.IntPtrInput
	ConnectionRetrySleepInterval pulumi.IntPtrInput
	ConnectionRetryTimeLimit     pulumi.IntPtrInput
	// The description of this machine policy.
	Description               pulumi.StringPtrInput
	IsDefault                 pulumi.BoolPtrInput
	MachineCleanupPolicy      MachinePolicyMachineCleanupPolicyPtrInput
	MachineConnectivityPolicy MachinePolicyMachineConnectivityPolicyPtrInput
	MachineHealthCheckPolicy  MachinePolicyMachineHealthCheckPolicyPtrInput
	MachineUpdatePolicy       MachinePolicyMachineUpdatePolicyPtrInput
	// The name of this resource.
	Name                                          pulumi.StringPtrInput
	PollingRequestMaximumMessageProcessingTimeout pulumi.IntPtrInput
	PollingRequestQueueTimeout                    pulumi.IntPtrInput
	// The space ID associated with this resource.
	SpaceId pulumi.StringPtrInput
}

func (MachinePolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*machinePolicyState)(nil)).Elem()
}

type machinePolicyArgs struct {
	ConnectionConnectTimeout     *int `pulumi:"connectionConnectTimeout"`
	ConnectionRetryCountLimit    *int `pulumi:"connectionRetryCountLimit"`
	ConnectionRetrySleepInterval *int `pulumi:"connectionRetrySleepInterval"`
	ConnectionRetryTimeLimit     *int `pulumi:"connectionRetryTimeLimit"`
	// The description of this machine policy.
	Description               *string                                 `pulumi:"description"`
	MachineCleanupPolicy      *MachinePolicyMachineCleanupPolicy      `pulumi:"machineCleanupPolicy"`
	MachineConnectivityPolicy *MachinePolicyMachineConnectivityPolicy `pulumi:"machineConnectivityPolicy"`
	MachineHealthCheckPolicy  *MachinePolicyMachineHealthCheckPolicy  `pulumi:"machineHealthCheckPolicy"`
	MachineUpdatePolicy       *MachinePolicyMachineUpdatePolicy       `pulumi:"machineUpdatePolicy"`
	// The name of this resource.
	Name                                          *string `pulumi:"name"`
	PollingRequestMaximumMessageProcessingTimeout *int    `pulumi:"pollingRequestMaximumMessageProcessingTimeout"`
	PollingRequestQueueTimeout                    *int    `pulumi:"pollingRequestQueueTimeout"`
	// The space ID associated with this resource.
	SpaceId *string `pulumi:"spaceId"`
}

// The set of arguments for constructing a MachinePolicy resource.
type MachinePolicyArgs struct {
	ConnectionConnectTimeout     pulumi.IntPtrInput
	ConnectionRetryCountLimit    pulumi.IntPtrInput
	ConnectionRetrySleepInterval pulumi.IntPtrInput
	ConnectionRetryTimeLimit     pulumi.IntPtrInput
	// The description of this machine policy.
	Description               pulumi.StringPtrInput
	MachineCleanupPolicy      MachinePolicyMachineCleanupPolicyPtrInput
	MachineConnectivityPolicy MachinePolicyMachineConnectivityPolicyPtrInput
	MachineHealthCheckPolicy  MachinePolicyMachineHealthCheckPolicyPtrInput
	MachineUpdatePolicy       MachinePolicyMachineUpdatePolicyPtrInput
	// The name of this resource.
	Name                                          pulumi.StringPtrInput
	PollingRequestMaximumMessageProcessingTimeout pulumi.IntPtrInput
	PollingRequestQueueTimeout                    pulumi.IntPtrInput
	// The space ID associated with this resource.
	SpaceId pulumi.StringPtrInput
}

func (MachinePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*machinePolicyArgs)(nil)).Elem()
}

type MachinePolicyInput interface {
	pulumi.Input

	ToMachinePolicyOutput() MachinePolicyOutput
	ToMachinePolicyOutputWithContext(ctx context.Context) MachinePolicyOutput
}

func (*MachinePolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**MachinePolicy)(nil)).Elem()
}

func (i *MachinePolicy) ToMachinePolicyOutput() MachinePolicyOutput {
	return i.ToMachinePolicyOutputWithContext(context.Background())
}

func (i *MachinePolicy) ToMachinePolicyOutputWithContext(ctx context.Context) MachinePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePolicyOutput)
}

// MachinePolicyArrayInput is an input type that accepts MachinePolicyArray and MachinePolicyArrayOutput values.
// You can construct a concrete instance of `MachinePolicyArrayInput` via:
//
//	MachinePolicyArray{ MachinePolicyArgs{...} }
type MachinePolicyArrayInput interface {
	pulumi.Input

	ToMachinePolicyArrayOutput() MachinePolicyArrayOutput
	ToMachinePolicyArrayOutputWithContext(context.Context) MachinePolicyArrayOutput
}

type MachinePolicyArray []MachinePolicyInput

func (MachinePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MachinePolicy)(nil)).Elem()
}

func (i MachinePolicyArray) ToMachinePolicyArrayOutput() MachinePolicyArrayOutput {
	return i.ToMachinePolicyArrayOutputWithContext(context.Background())
}

func (i MachinePolicyArray) ToMachinePolicyArrayOutputWithContext(ctx context.Context) MachinePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePolicyArrayOutput)
}

// MachinePolicyMapInput is an input type that accepts MachinePolicyMap and MachinePolicyMapOutput values.
// You can construct a concrete instance of `MachinePolicyMapInput` via:
//
//	MachinePolicyMap{ "key": MachinePolicyArgs{...} }
type MachinePolicyMapInput interface {
	pulumi.Input

	ToMachinePolicyMapOutput() MachinePolicyMapOutput
	ToMachinePolicyMapOutputWithContext(context.Context) MachinePolicyMapOutput
}

type MachinePolicyMap map[string]MachinePolicyInput

func (MachinePolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MachinePolicy)(nil)).Elem()
}

func (i MachinePolicyMap) ToMachinePolicyMapOutput() MachinePolicyMapOutput {
	return i.ToMachinePolicyMapOutputWithContext(context.Background())
}

func (i MachinePolicyMap) ToMachinePolicyMapOutputWithContext(ctx context.Context) MachinePolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePolicyMapOutput)
}

type MachinePolicyOutput struct{ *pulumi.OutputState }

func (MachinePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachinePolicy)(nil)).Elem()
}

func (o MachinePolicyOutput) ToMachinePolicyOutput() MachinePolicyOutput {
	return o
}

func (o MachinePolicyOutput) ToMachinePolicyOutputWithContext(ctx context.Context) MachinePolicyOutput {
	return o
}

func (o MachinePolicyOutput) ConnectionConnectTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachinePolicy) pulumi.IntPtrOutput { return v.ConnectionConnectTimeout }).(pulumi.IntPtrOutput)
}

func (o MachinePolicyOutput) ConnectionRetryCountLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachinePolicy) pulumi.IntPtrOutput { return v.ConnectionRetryCountLimit }).(pulumi.IntPtrOutput)
}

func (o MachinePolicyOutput) ConnectionRetrySleepInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachinePolicy) pulumi.IntPtrOutput { return v.ConnectionRetrySleepInterval }).(pulumi.IntPtrOutput)
}

func (o MachinePolicyOutput) ConnectionRetryTimeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachinePolicy) pulumi.IntPtrOutput { return v.ConnectionRetryTimeLimit }).(pulumi.IntPtrOutput)
}

// The description of this machine policy.
func (o MachinePolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o MachinePolicyOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v *MachinePolicy) pulumi.BoolOutput { return v.IsDefault }).(pulumi.BoolOutput)
}

func (o MachinePolicyOutput) MachineCleanupPolicy() MachinePolicyMachineCleanupPolicyOutput {
	return o.ApplyT(func(v *MachinePolicy) MachinePolicyMachineCleanupPolicyOutput { return v.MachineCleanupPolicy }).(MachinePolicyMachineCleanupPolicyOutput)
}

func (o MachinePolicyOutput) MachineConnectivityPolicy() MachinePolicyMachineConnectivityPolicyOutput {
	return o.ApplyT(func(v *MachinePolicy) MachinePolicyMachineConnectivityPolicyOutput {
		return v.MachineConnectivityPolicy
	}).(MachinePolicyMachineConnectivityPolicyOutput)
}

func (o MachinePolicyOutput) MachineHealthCheckPolicy() MachinePolicyMachineHealthCheckPolicyOutput {
	return o.ApplyT(func(v *MachinePolicy) MachinePolicyMachineHealthCheckPolicyOutput { return v.MachineHealthCheckPolicy }).(MachinePolicyMachineHealthCheckPolicyOutput)
}

func (o MachinePolicyOutput) MachineUpdatePolicy() MachinePolicyMachineUpdatePolicyOutput {
	return o.ApplyT(func(v *MachinePolicy) MachinePolicyMachineUpdatePolicyOutput { return v.MachineUpdatePolicy }).(MachinePolicyMachineUpdatePolicyOutput)
}

// The name of this resource.
func (o MachinePolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MachinePolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o MachinePolicyOutput) PollingRequestMaximumMessageProcessingTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachinePolicy) pulumi.IntPtrOutput { return v.PollingRequestMaximumMessageProcessingTimeout }).(pulumi.IntPtrOutput)
}

func (o MachinePolicyOutput) PollingRequestQueueTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachinePolicy) pulumi.IntPtrOutput { return v.PollingRequestQueueTimeout }).(pulumi.IntPtrOutput)
}

// The space ID associated with this resource.
func (o MachinePolicyOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *MachinePolicy) pulumi.StringOutput { return v.SpaceId }).(pulumi.StringOutput)
}

type MachinePolicyArrayOutput struct{ *pulumi.OutputState }

func (MachinePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MachinePolicy)(nil)).Elem()
}

func (o MachinePolicyArrayOutput) ToMachinePolicyArrayOutput() MachinePolicyArrayOutput {
	return o
}

func (o MachinePolicyArrayOutput) ToMachinePolicyArrayOutputWithContext(ctx context.Context) MachinePolicyArrayOutput {
	return o
}

func (o MachinePolicyArrayOutput) Index(i pulumi.IntInput) MachinePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MachinePolicy {
		return vs[0].([]*MachinePolicy)[vs[1].(int)]
	}).(MachinePolicyOutput)
}

type MachinePolicyMapOutput struct{ *pulumi.OutputState }

func (MachinePolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MachinePolicy)(nil)).Elem()
}

func (o MachinePolicyMapOutput) ToMachinePolicyMapOutput() MachinePolicyMapOutput {
	return o
}

func (o MachinePolicyMapOutput) ToMachinePolicyMapOutputWithContext(ctx context.Context) MachinePolicyMapOutput {
	return o
}

func (o MachinePolicyMapOutput) MapIndex(k pulumi.StringInput) MachinePolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MachinePolicy {
		return vs[0].(map[string]*MachinePolicy)[vs[1].(string)]
	}).(MachinePolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePolicyInput)(nil)).Elem(), &MachinePolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePolicyArrayInput)(nil)).Elem(), MachinePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePolicyMapInput)(nil)).Elem(), MachinePolicyMap{})
	pulumi.RegisterOutputType(MachinePolicyOutput{})
	pulumi.RegisterOutputType(MachinePolicyArrayOutput{})
	pulumi.RegisterOutputType(MachinePolicyMapOutput{})
}
