// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package octopusdeploy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about existing worker pools.
func GetWorkerPools(ctx *pulumi.Context, args *GetWorkerPoolsArgs, opts ...pulumi.InvokeOption) (*GetWorkerPoolsResult, error) {
	var rv GetWorkerPoolsResult
	err := ctx.Invoke("octopusdeploy:index/getWorkerPools:getWorkerPools", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkerPools.
type GetWorkerPoolsArgs struct {
	// A filter to search by a list of IDs.
	Ids []string `pulumi:"ids"`
	// A filter to search by name.
	Name *string `pulumi:"name"`
	// A filter to search by the partial match of a name.
	PartialName *string `pulumi:"partialName"`
	// A filter to specify the number of items to skip in the response.
	Skip *int `pulumi:"skip"`
	// A filter to specify the number of items to take (or return) in the response.
	Take *int `pulumi:"take"`
	// A list of worker pools that match the filter(s).
	WorkerPools []GetWorkerPoolsWorkerPool `pulumi:"workerPools"`
}

// A collection of values returned by getWorkerPools.
type GetWorkerPoolsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A filter to search by a list of IDs.
	Ids []string `pulumi:"ids"`
	// A filter to search by name.
	Name *string `pulumi:"name"`
	// A filter to search by the partial match of a name.
	PartialName *string `pulumi:"partialName"`
	// A filter to specify the number of items to skip in the response.
	Skip *int `pulumi:"skip"`
	// A filter to specify the number of items to take (or return) in the response.
	Take *int `pulumi:"take"`
	// A list of worker pools that match the filter(s).
	WorkerPools []GetWorkerPoolsWorkerPool `pulumi:"workerPools"`
}

func GetWorkerPoolsOutput(ctx *pulumi.Context, args GetWorkerPoolsOutputArgs, opts ...pulumi.InvokeOption) GetWorkerPoolsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetWorkerPoolsResult, error) {
			args := v.(GetWorkerPoolsArgs)
			r, err := GetWorkerPools(ctx, &args, opts...)
			var s GetWorkerPoolsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetWorkerPoolsResultOutput)
}

// A collection of arguments for invoking getWorkerPools.
type GetWorkerPoolsOutputArgs struct {
	// A filter to search by a list of IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A filter to search by name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to search by the partial match of a name.
	PartialName pulumi.StringPtrInput `pulumi:"partialName"`
	// A filter to specify the number of items to skip in the response.
	Skip pulumi.IntPtrInput `pulumi:"skip"`
	// A filter to specify the number of items to take (or return) in the response.
	Take pulumi.IntPtrInput `pulumi:"take"`
	// A list of worker pools that match the filter(s).
	WorkerPools GetWorkerPoolsWorkerPoolArrayInput `pulumi:"workerPools"`
}

func (GetWorkerPoolsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkerPoolsArgs)(nil)).Elem()
}

// A collection of values returned by getWorkerPools.
type GetWorkerPoolsResultOutput struct{ *pulumi.OutputState }

func (GetWorkerPoolsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkerPoolsResult)(nil)).Elem()
}

func (o GetWorkerPoolsResultOutput) ToGetWorkerPoolsResultOutput() GetWorkerPoolsResultOutput {
	return o
}

func (o GetWorkerPoolsResultOutput) ToGetWorkerPoolsResultOutputWithContext(ctx context.Context) GetWorkerPoolsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetWorkerPoolsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkerPoolsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A filter to search by a list of IDs.
func (o GetWorkerPoolsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWorkerPoolsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// A filter to search by name.
func (o GetWorkerPoolsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWorkerPoolsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A filter to search by the partial match of a name.
func (o GetWorkerPoolsResultOutput) PartialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWorkerPoolsResult) *string { return v.PartialName }).(pulumi.StringPtrOutput)
}

// A filter to specify the number of items to skip in the response.
func (o GetWorkerPoolsResultOutput) Skip() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetWorkerPoolsResult) *int { return v.Skip }).(pulumi.IntPtrOutput)
}

// A filter to specify the number of items to take (or return) in the response.
func (o GetWorkerPoolsResultOutput) Take() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetWorkerPoolsResult) *int { return v.Take }).(pulumi.IntPtrOutput)
}

// A list of worker pools that match the filter(s).
func (o GetWorkerPoolsResultOutput) WorkerPools() GetWorkerPoolsWorkerPoolArrayOutput {
	return o.ApplyT(func(v GetWorkerPoolsResult) []GetWorkerPoolsWorkerPool { return v.WorkerPools }).(GetWorkerPoolsWorkerPoolArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetWorkerPoolsResultOutput{})
}
