// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package octopusdeploy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource manages polling tentacle deployment targets in Octopus Deploy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := octopusdeploy.NewListeningTentacleDeploymentTarget(ctx, "example", &octopusdeploy.ListeningTentacleDeploymentTargetArgs{
//				Environments: pulumi.StringArray{
//					pulumi.String("Environments-123"),
//					pulumi.String("Environment-321"),
//				},
//				IsDisabled:      pulumi.Bool(true),
//				MachinePolicyId: pulumi.String("MachinePolicy-123"),
//				Roles: pulumi.StringArray{
//					pulumi.String("Development Team"),
//					pulumi.String("System Administrators"),
//				},
//				TenantedDeploymentParticipation: pulumi.String("Untenanted"),
//				TentacleUrl:                     pulumi.String("https://example.com:1234/"),
//				Thumbprint:                      pulumi.String("<thumbprint>"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import octopusdeploy:index/pollingTentacleDeploymentTarget:PollingTentacleDeploymentTarget [options] octopusdeploy_listening_tentacle_deployment_target.<name> <machine-id>
//
// ```
type PollingTentacleDeploymentTarget struct {
	pulumi.CustomResourceState

	CertificateSignatureAlgorithm pulumi.StringPtrOutput                             `pulumi:"certificateSignatureAlgorithm"`
	Endpoints                     PollingTentacleDeploymentTargetEndpointArrayOutput `pulumi:"endpoints"`
	// A list of environment IDs associated with this resource.
	Environments      pulumi.StringArrayOutput `pulumi:"environments"`
	HasLatestCalamari pulumi.BoolOutput        `pulumi:"hasLatestCalamari"`
	// Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.
	HealthStatus    pulumi.StringOutput `pulumi:"healthStatus"`
	IsDisabled      pulumi.BoolOutput   `pulumi:"isDisabled"`
	IsInProcess     pulumi.BoolOutput   `pulumi:"isInProcess"`
	MachinePolicyId pulumi.StringOutput `pulumi:"machinePolicyId"`
	// The name of this resource.
	Name            pulumi.StringOutput      `pulumi:"name"`
	OperatingSystem pulumi.StringOutput      `pulumi:"operatingSystem"`
	Roles           pulumi.StringArrayOutput `pulumi:"roles"`
	ShellName       pulumi.StringOutput      `pulumi:"shellName"`
	ShellVersion    pulumi.StringOutput      `pulumi:"shellVersion"`
	// The space ID associated with this resource.
	SpaceId pulumi.StringOutput `pulumi:"spaceId"`
	// The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.
	Status pulumi.StringOutput `pulumi:"status"`
	// A summary elaborating on the status of this resource.
	StatusSummary pulumi.StringOutput `pulumi:"statusSummary"`
	// A list of tenant tags associated with this resource.
	TenantTags pulumi.StringArrayOutput `pulumi:"tenantTags"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation pulumi.StringOutput `pulumi:"tenantedDeploymentParticipation"`
	// A list of tenant IDs associated with this resource.
	Tenants                pulumi.StringArrayOutput                                        `pulumi:"tenants"`
	TentacleUrl            pulumi.StringOutput                                             `pulumi:"tentacleUrl"`
	TentacleVersionDetails PollingTentacleDeploymentTargetTentacleVersionDetailArrayOutput `pulumi:"tentacleVersionDetails"`
	Thumbprint             pulumi.StringOutput                                             `pulumi:"thumbprint"`
	Uri                    pulumi.StringOutput                                             `pulumi:"uri"`
}

// NewPollingTentacleDeploymentTarget registers a new resource with the given unique name, arguments, and options.
func NewPollingTentacleDeploymentTarget(ctx *pulumi.Context,
	name string, args *PollingTentacleDeploymentTargetArgs, opts ...pulumi.ResourceOption) (*PollingTentacleDeploymentTarget, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Environments == nil {
		return nil, errors.New("invalid value for required argument 'Environments'")
	}
	if args.Roles == nil {
		return nil, errors.New("invalid value for required argument 'Roles'")
	}
	if args.TentacleUrl == nil {
		return nil, errors.New("invalid value for required argument 'TentacleUrl'")
	}
	var resource PollingTentacleDeploymentTarget
	err := ctx.RegisterResource("octopusdeploy:index/pollingTentacleDeploymentTarget:PollingTentacleDeploymentTarget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPollingTentacleDeploymentTarget gets an existing PollingTentacleDeploymentTarget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPollingTentacleDeploymentTarget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PollingTentacleDeploymentTargetState, opts ...pulumi.ResourceOption) (*PollingTentacleDeploymentTarget, error) {
	var resource PollingTentacleDeploymentTarget
	err := ctx.ReadResource("octopusdeploy:index/pollingTentacleDeploymentTarget:PollingTentacleDeploymentTarget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PollingTentacleDeploymentTarget resources.
type pollingTentacleDeploymentTargetState struct {
	CertificateSignatureAlgorithm *string                                   `pulumi:"certificateSignatureAlgorithm"`
	Endpoints                     []PollingTentacleDeploymentTargetEndpoint `pulumi:"endpoints"`
	// A list of environment IDs associated with this resource.
	Environments      []string `pulumi:"environments"`
	HasLatestCalamari *bool    `pulumi:"hasLatestCalamari"`
	// Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.
	HealthStatus    *string `pulumi:"healthStatus"`
	IsDisabled      *bool   `pulumi:"isDisabled"`
	IsInProcess     *bool   `pulumi:"isInProcess"`
	MachinePolicyId *string `pulumi:"machinePolicyId"`
	// The name of this resource.
	Name            *string  `pulumi:"name"`
	OperatingSystem *string  `pulumi:"operatingSystem"`
	Roles           []string `pulumi:"roles"`
	ShellName       *string  `pulumi:"shellName"`
	ShellVersion    *string  `pulumi:"shellVersion"`
	// The space ID associated with this resource.
	SpaceId *string `pulumi:"spaceId"`
	// The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.
	Status *string `pulumi:"status"`
	// A summary elaborating on the status of this resource.
	StatusSummary *string `pulumi:"statusSummary"`
	// A list of tenant tags associated with this resource.
	TenantTags []string `pulumi:"tenantTags"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation *string `pulumi:"tenantedDeploymentParticipation"`
	// A list of tenant IDs associated with this resource.
	Tenants                []string                                               `pulumi:"tenants"`
	TentacleUrl            *string                                                `pulumi:"tentacleUrl"`
	TentacleVersionDetails []PollingTentacleDeploymentTargetTentacleVersionDetail `pulumi:"tentacleVersionDetails"`
	Thumbprint             *string                                                `pulumi:"thumbprint"`
	Uri                    *string                                                `pulumi:"uri"`
}

type PollingTentacleDeploymentTargetState struct {
	CertificateSignatureAlgorithm pulumi.StringPtrInput
	Endpoints                     PollingTentacleDeploymentTargetEndpointArrayInput
	// A list of environment IDs associated with this resource.
	Environments      pulumi.StringArrayInput
	HasLatestCalamari pulumi.BoolPtrInput
	// Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.
	HealthStatus    pulumi.StringPtrInput
	IsDisabled      pulumi.BoolPtrInput
	IsInProcess     pulumi.BoolPtrInput
	MachinePolicyId pulumi.StringPtrInput
	// The name of this resource.
	Name            pulumi.StringPtrInput
	OperatingSystem pulumi.StringPtrInput
	Roles           pulumi.StringArrayInput
	ShellName       pulumi.StringPtrInput
	ShellVersion    pulumi.StringPtrInput
	// The space ID associated with this resource.
	SpaceId pulumi.StringPtrInput
	// The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.
	Status pulumi.StringPtrInput
	// A summary elaborating on the status of this resource.
	StatusSummary pulumi.StringPtrInput
	// A list of tenant tags associated with this resource.
	TenantTags pulumi.StringArrayInput
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation pulumi.StringPtrInput
	// A list of tenant IDs associated with this resource.
	Tenants                pulumi.StringArrayInput
	TentacleUrl            pulumi.StringPtrInput
	TentacleVersionDetails PollingTentacleDeploymentTargetTentacleVersionDetailArrayInput
	Thumbprint             pulumi.StringPtrInput
	Uri                    pulumi.StringPtrInput
}

func (PollingTentacleDeploymentTargetState) ElementType() reflect.Type {
	return reflect.TypeOf((*pollingTentacleDeploymentTargetState)(nil)).Elem()
}

type pollingTentacleDeploymentTargetArgs struct {
	CertificateSignatureAlgorithm *string                                   `pulumi:"certificateSignatureAlgorithm"`
	Endpoints                     []PollingTentacleDeploymentTargetEndpoint `pulumi:"endpoints"`
	// A list of environment IDs associated with this resource.
	Environments []string `pulumi:"environments"`
	// Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.
	HealthStatus    *string `pulumi:"healthStatus"`
	IsDisabled      *bool   `pulumi:"isDisabled"`
	MachinePolicyId *string `pulumi:"machinePolicyId"`
	// The name of this resource.
	Name            *string  `pulumi:"name"`
	OperatingSystem *string  `pulumi:"operatingSystem"`
	Roles           []string `pulumi:"roles"`
	ShellName       *string  `pulumi:"shellName"`
	ShellVersion    *string  `pulumi:"shellVersion"`
	// The space ID associated with this resource.
	SpaceId *string `pulumi:"spaceId"`
	// The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.
	Status *string `pulumi:"status"`
	// A summary elaborating on the status of this resource.
	StatusSummary *string `pulumi:"statusSummary"`
	// A list of tenant tags associated with this resource.
	TenantTags []string `pulumi:"tenantTags"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation *string `pulumi:"tenantedDeploymentParticipation"`
	// A list of tenant IDs associated with this resource.
	Tenants                []string                                               `pulumi:"tenants"`
	TentacleUrl            string                                                 `pulumi:"tentacleUrl"`
	TentacleVersionDetails []PollingTentacleDeploymentTargetTentacleVersionDetail `pulumi:"tentacleVersionDetails"`
	Thumbprint             *string                                                `pulumi:"thumbprint"`
	Uri                    *string                                                `pulumi:"uri"`
}

// The set of arguments for constructing a PollingTentacleDeploymentTarget resource.
type PollingTentacleDeploymentTargetArgs struct {
	CertificateSignatureAlgorithm pulumi.StringPtrInput
	Endpoints                     PollingTentacleDeploymentTargetEndpointArrayInput
	// A list of environment IDs associated with this resource.
	Environments pulumi.StringArrayInput
	// Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.
	HealthStatus    pulumi.StringPtrInput
	IsDisabled      pulumi.BoolPtrInput
	MachinePolicyId pulumi.StringPtrInput
	// The name of this resource.
	Name            pulumi.StringPtrInput
	OperatingSystem pulumi.StringPtrInput
	Roles           pulumi.StringArrayInput
	ShellName       pulumi.StringPtrInput
	ShellVersion    pulumi.StringPtrInput
	// The space ID associated with this resource.
	SpaceId pulumi.StringPtrInput
	// The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.
	Status pulumi.StringPtrInput
	// A summary elaborating on the status of this resource.
	StatusSummary pulumi.StringPtrInput
	// A list of tenant tags associated with this resource.
	TenantTags pulumi.StringArrayInput
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation pulumi.StringPtrInput
	// A list of tenant IDs associated with this resource.
	Tenants                pulumi.StringArrayInput
	TentacleUrl            pulumi.StringInput
	TentacleVersionDetails PollingTentacleDeploymentTargetTentacleVersionDetailArrayInput
	Thumbprint             pulumi.StringPtrInput
	Uri                    pulumi.StringPtrInput
}

func (PollingTentacleDeploymentTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pollingTentacleDeploymentTargetArgs)(nil)).Elem()
}

type PollingTentacleDeploymentTargetInput interface {
	pulumi.Input

	ToPollingTentacleDeploymentTargetOutput() PollingTentacleDeploymentTargetOutput
	ToPollingTentacleDeploymentTargetOutputWithContext(ctx context.Context) PollingTentacleDeploymentTargetOutput
}

func (*PollingTentacleDeploymentTarget) ElementType() reflect.Type {
	return reflect.TypeOf((**PollingTentacleDeploymentTarget)(nil)).Elem()
}

func (i *PollingTentacleDeploymentTarget) ToPollingTentacleDeploymentTargetOutput() PollingTentacleDeploymentTargetOutput {
	return i.ToPollingTentacleDeploymentTargetOutputWithContext(context.Background())
}

func (i *PollingTentacleDeploymentTarget) ToPollingTentacleDeploymentTargetOutputWithContext(ctx context.Context) PollingTentacleDeploymentTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingTentacleDeploymentTargetOutput)
}

// PollingTentacleDeploymentTargetArrayInput is an input type that accepts PollingTentacleDeploymentTargetArray and PollingTentacleDeploymentTargetArrayOutput values.
// You can construct a concrete instance of `PollingTentacleDeploymentTargetArrayInput` via:
//
//	PollingTentacleDeploymentTargetArray{ PollingTentacleDeploymentTargetArgs{...} }
type PollingTentacleDeploymentTargetArrayInput interface {
	pulumi.Input

	ToPollingTentacleDeploymentTargetArrayOutput() PollingTentacleDeploymentTargetArrayOutput
	ToPollingTentacleDeploymentTargetArrayOutputWithContext(context.Context) PollingTentacleDeploymentTargetArrayOutput
}

type PollingTentacleDeploymentTargetArray []PollingTentacleDeploymentTargetInput

func (PollingTentacleDeploymentTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PollingTentacleDeploymentTarget)(nil)).Elem()
}

func (i PollingTentacleDeploymentTargetArray) ToPollingTentacleDeploymentTargetArrayOutput() PollingTentacleDeploymentTargetArrayOutput {
	return i.ToPollingTentacleDeploymentTargetArrayOutputWithContext(context.Background())
}

func (i PollingTentacleDeploymentTargetArray) ToPollingTentacleDeploymentTargetArrayOutputWithContext(ctx context.Context) PollingTentacleDeploymentTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingTentacleDeploymentTargetArrayOutput)
}

// PollingTentacleDeploymentTargetMapInput is an input type that accepts PollingTentacleDeploymentTargetMap and PollingTentacleDeploymentTargetMapOutput values.
// You can construct a concrete instance of `PollingTentacleDeploymentTargetMapInput` via:
//
//	PollingTentacleDeploymentTargetMap{ "key": PollingTentacleDeploymentTargetArgs{...} }
type PollingTentacleDeploymentTargetMapInput interface {
	pulumi.Input

	ToPollingTentacleDeploymentTargetMapOutput() PollingTentacleDeploymentTargetMapOutput
	ToPollingTentacleDeploymentTargetMapOutputWithContext(context.Context) PollingTentacleDeploymentTargetMapOutput
}

type PollingTentacleDeploymentTargetMap map[string]PollingTentacleDeploymentTargetInput

func (PollingTentacleDeploymentTargetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PollingTentacleDeploymentTarget)(nil)).Elem()
}

func (i PollingTentacleDeploymentTargetMap) ToPollingTentacleDeploymentTargetMapOutput() PollingTentacleDeploymentTargetMapOutput {
	return i.ToPollingTentacleDeploymentTargetMapOutputWithContext(context.Background())
}

func (i PollingTentacleDeploymentTargetMap) ToPollingTentacleDeploymentTargetMapOutputWithContext(ctx context.Context) PollingTentacleDeploymentTargetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingTentacleDeploymentTargetMapOutput)
}

type PollingTentacleDeploymentTargetOutput struct{ *pulumi.OutputState }

func (PollingTentacleDeploymentTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PollingTentacleDeploymentTarget)(nil)).Elem()
}

func (o PollingTentacleDeploymentTargetOutput) ToPollingTentacleDeploymentTargetOutput() PollingTentacleDeploymentTargetOutput {
	return o
}

func (o PollingTentacleDeploymentTargetOutput) ToPollingTentacleDeploymentTargetOutputWithContext(ctx context.Context) PollingTentacleDeploymentTargetOutput {
	return o
}

func (o PollingTentacleDeploymentTargetOutput) CertificateSignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.StringPtrOutput {
		return v.CertificateSignatureAlgorithm
	}).(pulumi.StringPtrOutput)
}

func (o PollingTentacleDeploymentTargetOutput) Endpoints() PollingTentacleDeploymentTargetEndpointArrayOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) PollingTentacleDeploymentTargetEndpointArrayOutput {
		return v.Endpoints
	}).(PollingTentacleDeploymentTargetEndpointArrayOutput)
}

// A list of environment IDs associated with this resource.
func (o PollingTentacleDeploymentTargetOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.StringArrayOutput { return v.Environments }).(pulumi.StringArrayOutput)
}

func (o PollingTentacleDeploymentTargetOutput) HasLatestCalamari() pulumi.BoolOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.BoolOutput { return v.HasLatestCalamari }).(pulumi.BoolOutput)
}

// Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.
func (o PollingTentacleDeploymentTargetOutput) HealthStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.StringOutput { return v.HealthStatus }).(pulumi.StringOutput)
}

func (o PollingTentacleDeploymentTargetOutput) IsDisabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.BoolOutput { return v.IsDisabled }).(pulumi.BoolOutput)
}

func (o PollingTentacleDeploymentTargetOutput) IsInProcess() pulumi.BoolOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.BoolOutput { return v.IsInProcess }).(pulumi.BoolOutput)
}

func (o PollingTentacleDeploymentTargetOutput) MachinePolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.StringOutput { return v.MachinePolicyId }).(pulumi.StringOutput)
}

// The name of this resource.
func (o PollingTentacleDeploymentTargetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PollingTentacleDeploymentTargetOutput) OperatingSystem() pulumi.StringOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.StringOutput { return v.OperatingSystem }).(pulumi.StringOutput)
}

func (o PollingTentacleDeploymentTargetOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.StringArrayOutput { return v.Roles }).(pulumi.StringArrayOutput)
}

func (o PollingTentacleDeploymentTargetOutput) ShellName() pulumi.StringOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.StringOutput { return v.ShellName }).(pulumi.StringOutput)
}

func (o PollingTentacleDeploymentTargetOutput) ShellVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.StringOutput { return v.ShellVersion }).(pulumi.StringOutput)
}

// The space ID associated with this resource.
func (o PollingTentacleDeploymentTargetOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.StringOutput { return v.SpaceId }).(pulumi.StringOutput)
}

// The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.
func (o PollingTentacleDeploymentTargetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// A summary elaborating on the status of this resource.
func (o PollingTentacleDeploymentTargetOutput) StatusSummary() pulumi.StringOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.StringOutput { return v.StatusSummary }).(pulumi.StringOutput)
}

// A list of tenant tags associated with this resource.
func (o PollingTentacleDeploymentTargetOutput) TenantTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.StringArrayOutput { return v.TenantTags }).(pulumi.StringArrayOutput)
}

// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
func (o PollingTentacleDeploymentTargetOutput) TenantedDeploymentParticipation() pulumi.StringOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.StringOutput { return v.TenantedDeploymentParticipation }).(pulumi.StringOutput)
}

// A list of tenant IDs associated with this resource.
func (o PollingTentacleDeploymentTargetOutput) Tenants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.StringArrayOutput { return v.Tenants }).(pulumi.StringArrayOutput)
}

func (o PollingTentacleDeploymentTargetOutput) TentacleUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.StringOutput { return v.TentacleUrl }).(pulumi.StringOutput)
}

func (o PollingTentacleDeploymentTargetOutput) TentacleVersionDetails() PollingTentacleDeploymentTargetTentacleVersionDetailArrayOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) PollingTentacleDeploymentTargetTentacleVersionDetailArrayOutput {
		return v.TentacleVersionDetails
	}).(PollingTentacleDeploymentTargetTentacleVersionDetailArrayOutput)
}

func (o PollingTentacleDeploymentTargetOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.StringOutput { return v.Thumbprint }).(pulumi.StringOutput)
}

func (o PollingTentacleDeploymentTargetOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v *PollingTentacleDeploymentTarget) pulumi.StringOutput { return v.Uri }).(pulumi.StringOutput)
}

type PollingTentacleDeploymentTargetArrayOutput struct{ *pulumi.OutputState }

func (PollingTentacleDeploymentTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PollingTentacleDeploymentTarget)(nil)).Elem()
}

func (o PollingTentacleDeploymentTargetArrayOutput) ToPollingTentacleDeploymentTargetArrayOutput() PollingTentacleDeploymentTargetArrayOutput {
	return o
}

func (o PollingTentacleDeploymentTargetArrayOutput) ToPollingTentacleDeploymentTargetArrayOutputWithContext(ctx context.Context) PollingTentacleDeploymentTargetArrayOutput {
	return o
}

func (o PollingTentacleDeploymentTargetArrayOutput) Index(i pulumi.IntInput) PollingTentacleDeploymentTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PollingTentacleDeploymentTarget {
		return vs[0].([]*PollingTentacleDeploymentTarget)[vs[1].(int)]
	}).(PollingTentacleDeploymentTargetOutput)
}

type PollingTentacleDeploymentTargetMapOutput struct{ *pulumi.OutputState }

func (PollingTentacleDeploymentTargetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PollingTentacleDeploymentTarget)(nil)).Elem()
}

func (o PollingTentacleDeploymentTargetMapOutput) ToPollingTentacleDeploymentTargetMapOutput() PollingTentacleDeploymentTargetMapOutput {
	return o
}

func (o PollingTentacleDeploymentTargetMapOutput) ToPollingTentacleDeploymentTargetMapOutputWithContext(ctx context.Context) PollingTentacleDeploymentTargetMapOutput {
	return o
}

func (o PollingTentacleDeploymentTargetMapOutput) MapIndex(k pulumi.StringInput) PollingTentacleDeploymentTargetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PollingTentacleDeploymentTarget {
		return vs[0].(map[string]*PollingTentacleDeploymentTarget)[vs[1].(string)]
	}).(PollingTentacleDeploymentTargetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PollingTentacleDeploymentTargetInput)(nil)).Elem(), &PollingTentacleDeploymentTarget{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingTentacleDeploymentTargetArrayInput)(nil)).Elem(), PollingTentacleDeploymentTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingTentacleDeploymentTargetMapInput)(nil)).Elem(), PollingTentacleDeploymentTargetMap{})
	pulumi.RegisterOutputType(PollingTentacleDeploymentTargetOutput{})
	pulumi.RegisterOutputType(PollingTentacleDeploymentTargetArrayOutput{})
	pulumi.RegisterOutputType(PollingTentacleDeploymentTargetMapOutput{})
}
