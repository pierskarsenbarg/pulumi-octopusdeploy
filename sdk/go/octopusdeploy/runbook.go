// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package octopusdeploy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource manages runbooks in Octopus Deploy.
type Runbook struct {
	pulumi.CustomResourceState

	ConnectivityPolicy RunbookConnectivityPolicyOutput `pulumi:"connectivityPolicy"`
	// Sets the runbook guided failure mode.
	DefaultGuidedFailureMode pulumi.StringOutput `pulumi:"defaultGuidedFailureMode"`
	// The description of this runbook.
	Description pulumi.StringOutput `pulumi:"description"`
	// Determines how the runbook is scoped to environments.
	EnvironmentScope pulumi.StringOutput `pulumi:"environmentScope"`
	// When environmentScope is set to "Specified", this is the list of environments the runbook can be run against.
	Environments pulumi.StringArrayOutput `pulumi:"environments"`
	// Whether to force packages to be re-downloaded or not
	ForcePackageDownload pulumi.BoolOutput `pulumi:"forcePackageDownload"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	MultiTenancyMode pulumi.StringOutput `pulumi:"multiTenancyMode"`
	// The name of the runbook in Octopus Deploy. This name must be unique.
	Name pulumi.StringOutput `pulumi:"name"`
	// The project that this runbook belongs to.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The published snapshot ID.
	PublishedRunbookSnapshotId pulumi.StringOutput `pulumi:"publishedRunbookSnapshotId"`
	// Sets the runbook retention policy
	RetentionPolicy RunbookRetentionPolicyOutput `pulumi:"retentionPolicy"`
	// The runbook process ID.
	RunbookProcessId pulumi.StringOutput `pulumi:"runbookProcessId"`
	// The space ID associated with this runbook.
	SpaceId pulumi.StringOutput `pulumi:"spaceId"`
}

// NewRunbook registers a new resource with the given unique name, arguments, and options.
func NewRunbook(ctx *pulumi.Context,
	name string, args *RunbookArgs, opts ...pulumi.ResourceOption) (*Runbook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	var resource Runbook
	err := ctx.RegisterResource("octopusdeploy:index/runbook:Runbook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRunbook gets an existing Runbook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRunbook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RunbookState, opts ...pulumi.ResourceOption) (*Runbook, error) {
	var resource Runbook
	err := ctx.ReadResource("octopusdeploy:index/runbook:Runbook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Runbook resources.
type runbookState struct {
	ConnectivityPolicy *RunbookConnectivityPolicy `pulumi:"connectivityPolicy"`
	// Sets the runbook guided failure mode.
	DefaultGuidedFailureMode *string `pulumi:"defaultGuidedFailureMode"`
	// The description of this runbook.
	Description *string `pulumi:"description"`
	// Determines how the runbook is scoped to environments.
	EnvironmentScope *string `pulumi:"environmentScope"`
	// When environmentScope is set to "Specified", this is the list of environments the runbook can be run against.
	Environments []string `pulumi:"environments"`
	// Whether to force packages to be re-downloaded or not
	ForcePackageDownload *bool `pulumi:"forcePackageDownload"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	MultiTenancyMode *string `pulumi:"multiTenancyMode"`
	// The name of the runbook in Octopus Deploy. This name must be unique.
	Name *string `pulumi:"name"`
	// The project that this runbook belongs to.
	ProjectId *string `pulumi:"projectId"`
	// The published snapshot ID.
	PublishedRunbookSnapshotId *string `pulumi:"publishedRunbookSnapshotId"`
	// Sets the runbook retention policy
	RetentionPolicy *RunbookRetentionPolicy `pulumi:"retentionPolicy"`
	// The runbook process ID.
	RunbookProcessId *string `pulumi:"runbookProcessId"`
	// The space ID associated with this runbook.
	SpaceId *string `pulumi:"spaceId"`
}

type RunbookState struct {
	ConnectivityPolicy RunbookConnectivityPolicyPtrInput
	// Sets the runbook guided failure mode.
	DefaultGuidedFailureMode pulumi.StringPtrInput
	// The description of this runbook.
	Description pulumi.StringPtrInput
	// Determines how the runbook is scoped to environments.
	EnvironmentScope pulumi.StringPtrInput
	// When environmentScope is set to "Specified", this is the list of environments the runbook can be run against.
	Environments pulumi.StringArrayInput
	// Whether to force packages to be re-downloaded or not
	ForcePackageDownload pulumi.BoolPtrInput
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	MultiTenancyMode pulumi.StringPtrInput
	// The name of the runbook in Octopus Deploy. This name must be unique.
	Name pulumi.StringPtrInput
	// The project that this runbook belongs to.
	ProjectId pulumi.StringPtrInput
	// The published snapshot ID.
	PublishedRunbookSnapshotId pulumi.StringPtrInput
	// Sets the runbook retention policy
	RetentionPolicy RunbookRetentionPolicyPtrInput
	// The runbook process ID.
	RunbookProcessId pulumi.StringPtrInput
	// The space ID associated with this runbook.
	SpaceId pulumi.StringPtrInput
}

func (RunbookState) ElementType() reflect.Type {
	return reflect.TypeOf((*runbookState)(nil)).Elem()
}

type runbookArgs struct {
	ConnectivityPolicy *RunbookConnectivityPolicy `pulumi:"connectivityPolicy"`
	// Sets the runbook guided failure mode.
	DefaultGuidedFailureMode *string `pulumi:"defaultGuidedFailureMode"`
	// The description of this runbook.
	Description *string `pulumi:"description"`
	// Determines how the runbook is scoped to environments.
	EnvironmentScope *string `pulumi:"environmentScope"`
	// When environmentScope is set to "Specified", this is the list of environments the runbook can be run against.
	Environments []string `pulumi:"environments"`
	// Whether to force packages to be re-downloaded or not
	ForcePackageDownload *bool `pulumi:"forcePackageDownload"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	MultiTenancyMode *string `pulumi:"multiTenancyMode"`
	// The name of the runbook in Octopus Deploy. This name must be unique.
	Name *string `pulumi:"name"`
	// The project that this runbook belongs to.
	ProjectId string `pulumi:"projectId"`
	// Sets the runbook retention policy
	RetentionPolicy *RunbookRetentionPolicy `pulumi:"retentionPolicy"`
	// The space ID associated with this runbook.
	SpaceId *string `pulumi:"spaceId"`
}

// The set of arguments for constructing a Runbook resource.
type RunbookArgs struct {
	ConnectivityPolicy RunbookConnectivityPolicyPtrInput
	// Sets the runbook guided failure mode.
	DefaultGuidedFailureMode pulumi.StringPtrInput
	// The description of this runbook.
	Description pulumi.StringPtrInput
	// Determines how the runbook is scoped to environments.
	EnvironmentScope pulumi.StringPtrInput
	// When environmentScope is set to "Specified", this is the list of environments the runbook can be run against.
	Environments pulumi.StringArrayInput
	// Whether to force packages to be re-downloaded or not
	ForcePackageDownload pulumi.BoolPtrInput
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	MultiTenancyMode pulumi.StringPtrInput
	// The name of the runbook in Octopus Deploy. This name must be unique.
	Name pulumi.StringPtrInput
	// The project that this runbook belongs to.
	ProjectId pulumi.StringInput
	// Sets the runbook retention policy
	RetentionPolicy RunbookRetentionPolicyPtrInput
	// The space ID associated with this runbook.
	SpaceId pulumi.StringPtrInput
}

func (RunbookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*runbookArgs)(nil)).Elem()
}

type RunbookInput interface {
	pulumi.Input

	ToRunbookOutput() RunbookOutput
	ToRunbookOutputWithContext(ctx context.Context) RunbookOutput
}

func (*Runbook) ElementType() reflect.Type {
	return reflect.TypeOf((**Runbook)(nil)).Elem()
}

func (i *Runbook) ToRunbookOutput() RunbookOutput {
	return i.ToRunbookOutputWithContext(context.Background())
}

func (i *Runbook) ToRunbookOutputWithContext(ctx context.Context) RunbookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RunbookOutput)
}

// RunbookArrayInput is an input type that accepts RunbookArray and RunbookArrayOutput values.
// You can construct a concrete instance of `RunbookArrayInput` via:
//
//	RunbookArray{ RunbookArgs{...} }
type RunbookArrayInput interface {
	pulumi.Input

	ToRunbookArrayOutput() RunbookArrayOutput
	ToRunbookArrayOutputWithContext(context.Context) RunbookArrayOutput
}

type RunbookArray []RunbookInput

func (RunbookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Runbook)(nil)).Elem()
}

func (i RunbookArray) ToRunbookArrayOutput() RunbookArrayOutput {
	return i.ToRunbookArrayOutputWithContext(context.Background())
}

func (i RunbookArray) ToRunbookArrayOutputWithContext(ctx context.Context) RunbookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RunbookArrayOutput)
}

// RunbookMapInput is an input type that accepts RunbookMap and RunbookMapOutput values.
// You can construct a concrete instance of `RunbookMapInput` via:
//
//	RunbookMap{ "key": RunbookArgs{...} }
type RunbookMapInput interface {
	pulumi.Input

	ToRunbookMapOutput() RunbookMapOutput
	ToRunbookMapOutputWithContext(context.Context) RunbookMapOutput
}

type RunbookMap map[string]RunbookInput

func (RunbookMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Runbook)(nil)).Elem()
}

func (i RunbookMap) ToRunbookMapOutput() RunbookMapOutput {
	return i.ToRunbookMapOutputWithContext(context.Background())
}

func (i RunbookMap) ToRunbookMapOutputWithContext(ctx context.Context) RunbookMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RunbookMapOutput)
}

type RunbookOutput struct{ *pulumi.OutputState }

func (RunbookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Runbook)(nil)).Elem()
}

func (o RunbookOutput) ToRunbookOutput() RunbookOutput {
	return o
}

func (o RunbookOutput) ToRunbookOutputWithContext(ctx context.Context) RunbookOutput {
	return o
}

func (o RunbookOutput) ConnectivityPolicy() RunbookConnectivityPolicyOutput {
	return o.ApplyT(func(v *Runbook) RunbookConnectivityPolicyOutput { return v.ConnectivityPolicy }).(RunbookConnectivityPolicyOutput)
}

// Sets the runbook guided failure mode.
func (o RunbookOutput) DefaultGuidedFailureMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Runbook) pulumi.StringOutput { return v.DefaultGuidedFailureMode }).(pulumi.StringOutput)
}

// The description of this runbook.
func (o RunbookOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Runbook) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Determines how the runbook is scoped to environments.
func (o RunbookOutput) EnvironmentScope() pulumi.StringOutput {
	return o.ApplyT(func(v *Runbook) pulumi.StringOutput { return v.EnvironmentScope }).(pulumi.StringOutput)
}

// When environmentScope is set to "Specified", this is the list of environments the runbook can be run against.
func (o RunbookOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Runbook) pulumi.StringArrayOutput { return v.Environments }).(pulumi.StringArrayOutput)
}

// Whether to force packages to be re-downloaded or not
func (o RunbookOutput) ForcePackageDownload() pulumi.BoolOutput {
	return o.ApplyT(func(v *Runbook) pulumi.BoolOutput { return v.ForcePackageDownload }).(pulumi.BoolOutput)
}

// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
func (o RunbookOutput) MultiTenancyMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Runbook) pulumi.StringOutput { return v.MultiTenancyMode }).(pulumi.StringOutput)
}

// The name of the runbook in Octopus Deploy. This name must be unique.
func (o RunbookOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Runbook) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The project that this runbook belongs to.
func (o RunbookOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Runbook) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The published snapshot ID.
func (o RunbookOutput) PublishedRunbookSnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v *Runbook) pulumi.StringOutput { return v.PublishedRunbookSnapshotId }).(pulumi.StringOutput)
}

// Sets the runbook retention policy
func (o RunbookOutput) RetentionPolicy() RunbookRetentionPolicyOutput {
	return o.ApplyT(func(v *Runbook) RunbookRetentionPolicyOutput { return v.RetentionPolicy }).(RunbookRetentionPolicyOutput)
}

// The runbook process ID.
func (o RunbookOutput) RunbookProcessId() pulumi.StringOutput {
	return o.ApplyT(func(v *Runbook) pulumi.StringOutput { return v.RunbookProcessId }).(pulumi.StringOutput)
}

// The space ID associated with this runbook.
func (o RunbookOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Runbook) pulumi.StringOutput { return v.SpaceId }).(pulumi.StringOutput)
}

type RunbookArrayOutput struct{ *pulumi.OutputState }

func (RunbookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Runbook)(nil)).Elem()
}

func (o RunbookArrayOutput) ToRunbookArrayOutput() RunbookArrayOutput {
	return o
}

func (o RunbookArrayOutput) ToRunbookArrayOutputWithContext(ctx context.Context) RunbookArrayOutput {
	return o
}

func (o RunbookArrayOutput) Index(i pulumi.IntInput) RunbookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Runbook {
		return vs[0].([]*Runbook)[vs[1].(int)]
	}).(RunbookOutput)
}

type RunbookMapOutput struct{ *pulumi.OutputState }

func (RunbookMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Runbook)(nil)).Elem()
}

func (o RunbookMapOutput) ToRunbookMapOutput() RunbookMapOutput {
	return o
}

func (o RunbookMapOutput) ToRunbookMapOutputWithContext(ctx context.Context) RunbookMapOutput {
	return o
}

func (o RunbookMapOutput) MapIndex(k pulumi.StringInput) RunbookOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Runbook {
		return vs[0].(map[string]*Runbook)[vs[1].(string)]
	}).(RunbookOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RunbookInput)(nil)).Elem(), &Runbook{})
	pulumi.RegisterInputType(reflect.TypeOf((*RunbookArrayInput)(nil)).Elem(), RunbookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RunbookMapInput)(nil)).Elem(), RunbookMap{})
	pulumi.RegisterOutputType(RunbookOutput{})
	pulumi.RegisterOutputType(RunbookArrayOutput{})
	pulumi.RegisterOutputType(RunbookMapOutput{})
}
