// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package octopusdeploy

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource manages SSH connection deployment targets in Octopus Deploy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := octopusdeploy.NewSshConnectionDeploymentTarget(ctx, "example", &octopusdeploy.SshConnectionDeploymentTargetArgs{
//				Fingerprint: pulumi.String("[fingerprint]"),
//				Host:        pulumi.String("[host]"),
//				Port:        pulumi.Int(22),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import octopusdeploy:index/sshConnectionDeploymentTarget:SshConnectionDeploymentTarget [options] octopusdeploy_ssh_connection_deployment_target.<name> <account-id>
//
// ```
type SshConnectionDeploymentTarget struct {
	pulumi.CustomResourceState

	AccountId          pulumi.StringOutput                              `pulumi:"accountId"`
	DotNetCorePlatform pulumi.StringPtrOutput                           `pulumi:"dotNetCorePlatform"`
	Endpoints          SshConnectionDeploymentTargetEndpointArrayOutput `pulumi:"endpoints"`
	// A list of environment IDs associated with this resource.
	Environments      pulumi.StringArrayOutput `pulumi:"environments"`
	Fingerprint       pulumi.StringOutput      `pulumi:"fingerprint"`
	HasLatestCalamari pulumi.BoolOutput        `pulumi:"hasLatestCalamari"`
	// Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.
	HealthStatus    pulumi.StringOutput `pulumi:"healthStatus"`
	Host            pulumi.StringOutput `pulumi:"host"`
	IsDisabled      pulumi.BoolOutput   `pulumi:"isDisabled"`
	IsInProcess     pulumi.BoolOutput   `pulumi:"isInProcess"`
	MachinePolicyId pulumi.StringOutput `pulumi:"machinePolicyId"`
	// The name of this resource.
	Name            pulumi.StringOutput      `pulumi:"name"`
	OperatingSystem pulumi.StringOutput      `pulumi:"operatingSystem"`
	Port            pulumi.IntPtrOutput      `pulumi:"port"`
	ProxyId         pulumi.StringPtrOutput   `pulumi:"proxyId"`
	Roles           pulumi.StringArrayOutput `pulumi:"roles"`
	ShellName       pulumi.StringOutput      `pulumi:"shellName"`
	ShellVersion    pulumi.StringOutput      `pulumi:"shellVersion"`
	// The space ID associated with this resource.
	SpaceId pulumi.StringOutput `pulumi:"spaceId"`
	// The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.
	Status pulumi.StringOutput `pulumi:"status"`
	// A summary elaborating on the status of this resource.
	StatusSummary pulumi.StringOutput `pulumi:"statusSummary"`
	// A list of tenant tags associated with this resource.
	TenantTags pulumi.StringArrayOutput `pulumi:"tenantTags"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation pulumi.StringOutput `pulumi:"tenantedDeploymentParticipation"`
	// A list of tenant IDs associated with this resource.
	Tenants    pulumi.StringArrayOutput `pulumi:"tenants"`
	Thumbprint pulumi.StringOutput      `pulumi:"thumbprint"`
	Uri        pulumi.StringOutput      `pulumi:"uri"`
}

// NewSshConnectionDeploymentTarget registers a new resource with the given unique name, arguments, and options.
func NewSshConnectionDeploymentTarget(ctx *pulumi.Context,
	name string, args *SshConnectionDeploymentTargetArgs, opts ...pulumi.ResourceOption) (*SshConnectionDeploymentTarget, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.Environments == nil {
		return nil, errors.New("invalid value for required argument 'Environments'")
	}
	if args.Fingerprint == nil {
		return nil, errors.New("invalid value for required argument 'Fingerprint'")
	}
	if args.Host == nil {
		return nil, errors.New("invalid value for required argument 'Host'")
	}
	if args.Roles == nil {
		return nil, errors.New("invalid value for required argument 'Roles'")
	}
	var resource SshConnectionDeploymentTarget
	err := ctx.RegisterResource("octopusdeploy:index/sshConnectionDeploymentTarget:SshConnectionDeploymentTarget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSshConnectionDeploymentTarget gets an existing SshConnectionDeploymentTarget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSshConnectionDeploymentTarget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SshConnectionDeploymentTargetState, opts ...pulumi.ResourceOption) (*SshConnectionDeploymentTarget, error) {
	var resource SshConnectionDeploymentTarget
	err := ctx.ReadResource("octopusdeploy:index/sshConnectionDeploymentTarget:SshConnectionDeploymentTarget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SshConnectionDeploymentTarget resources.
type sshConnectionDeploymentTargetState struct {
	AccountId          *string                                 `pulumi:"accountId"`
	DotNetCorePlatform *string                                 `pulumi:"dotNetCorePlatform"`
	Endpoints          []SshConnectionDeploymentTargetEndpoint `pulumi:"endpoints"`
	// A list of environment IDs associated with this resource.
	Environments      []string `pulumi:"environments"`
	Fingerprint       *string  `pulumi:"fingerprint"`
	HasLatestCalamari *bool    `pulumi:"hasLatestCalamari"`
	// Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.
	HealthStatus    *string `pulumi:"healthStatus"`
	Host            *string `pulumi:"host"`
	IsDisabled      *bool   `pulumi:"isDisabled"`
	IsInProcess     *bool   `pulumi:"isInProcess"`
	MachinePolicyId *string `pulumi:"machinePolicyId"`
	// The name of this resource.
	Name            *string  `pulumi:"name"`
	OperatingSystem *string  `pulumi:"operatingSystem"`
	Port            *int     `pulumi:"port"`
	ProxyId         *string  `pulumi:"proxyId"`
	Roles           []string `pulumi:"roles"`
	ShellName       *string  `pulumi:"shellName"`
	ShellVersion    *string  `pulumi:"shellVersion"`
	// The space ID associated with this resource.
	SpaceId *string `pulumi:"spaceId"`
	// The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.
	Status *string `pulumi:"status"`
	// A summary elaborating on the status of this resource.
	StatusSummary *string `pulumi:"statusSummary"`
	// A list of tenant tags associated with this resource.
	TenantTags []string `pulumi:"tenantTags"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation *string `pulumi:"tenantedDeploymentParticipation"`
	// A list of tenant IDs associated with this resource.
	Tenants    []string `pulumi:"tenants"`
	Thumbprint *string  `pulumi:"thumbprint"`
	Uri        *string  `pulumi:"uri"`
}

type SshConnectionDeploymentTargetState struct {
	AccountId          pulumi.StringPtrInput
	DotNetCorePlatform pulumi.StringPtrInput
	Endpoints          SshConnectionDeploymentTargetEndpointArrayInput
	// A list of environment IDs associated with this resource.
	Environments      pulumi.StringArrayInput
	Fingerprint       pulumi.StringPtrInput
	HasLatestCalamari pulumi.BoolPtrInput
	// Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.
	HealthStatus    pulumi.StringPtrInput
	Host            pulumi.StringPtrInput
	IsDisabled      pulumi.BoolPtrInput
	IsInProcess     pulumi.BoolPtrInput
	MachinePolicyId pulumi.StringPtrInput
	// The name of this resource.
	Name            pulumi.StringPtrInput
	OperatingSystem pulumi.StringPtrInput
	Port            pulumi.IntPtrInput
	ProxyId         pulumi.StringPtrInput
	Roles           pulumi.StringArrayInput
	ShellName       pulumi.StringPtrInput
	ShellVersion    pulumi.StringPtrInput
	// The space ID associated with this resource.
	SpaceId pulumi.StringPtrInput
	// The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.
	Status pulumi.StringPtrInput
	// A summary elaborating on the status of this resource.
	StatusSummary pulumi.StringPtrInput
	// A list of tenant tags associated with this resource.
	TenantTags pulumi.StringArrayInput
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation pulumi.StringPtrInput
	// A list of tenant IDs associated with this resource.
	Tenants    pulumi.StringArrayInput
	Thumbprint pulumi.StringPtrInput
	Uri        pulumi.StringPtrInput
}

func (SshConnectionDeploymentTargetState) ElementType() reflect.Type {
	return reflect.TypeOf((*sshConnectionDeploymentTargetState)(nil)).Elem()
}

type sshConnectionDeploymentTargetArgs struct {
	AccountId          string                                  `pulumi:"accountId"`
	DotNetCorePlatform *string                                 `pulumi:"dotNetCorePlatform"`
	Endpoints          []SshConnectionDeploymentTargetEndpoint `pulumi:"endpoints"`
	// A list of environment IDs associated with this resource.
	Environments []string `pulumi:"environments"`
	Fingerprint  string   `pulumi:"fingerprint"`
	// Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.
	HealthStatus    *string `pulumi:"healthStatus"`
	Host            string  `pulumi:"host"`
	IsDisabled      *bool   `pulumi:"isDisabled"`
	MachinePolicyId *string `pulumi:"machinePolicyId"`
	// The name of this resource.
	Name            *string  `pulumi:"name"`
	OperatingSystem *string  `pulumi:"operatingSystem"`
	Port            *int     `pulumi:"port"`
	ProxyId         *string  `pulumi:"proxyId"`
	Roles           []string `pulumi:"roles"`
	ShellName       *string  `pulumi:"shellName"`
	ShellVersion    *string  `pulumi:"shellVersion"`
	// The space ID associated with this resource.
	SpaceId *string `pulumi:"spaceId"`
	// The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.
	Status *string `pulumi:"status"`
	// A summary elaborating on the status of this resource.
	StatusSummary *string `pulumi:"statusSummary"`
	// A list of tenant tags associated with this resource.
	TenantTags []string `pulumi:"tenantTags"`
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation *string `pulumi:"tenantedDeploymentParticipation"`
	// A list of tenant IDs associated with this resource.
	Tenants    []string `pulumi:"tenants"`
	Thumbprint *string  `pulumi:"thumbprint"`
	Uri        *string  `pulumi:"uri"`
}

// The set of arguments for constructing a SshConnectionDeploymentTarget resource.
type SshConnectionDeploymentTargetArgs struct {
	AccountId          pulumi.StringInput
	DotNetCorePlatform pulumi.StringPtrInput
	Endpoints          SshConnectionDeploymentTargetEndpointArrayInput
	// A list of environment IDs associated with this resource.
	Environments pulumi.StringArrayInput
	Fingerprint  pulumi.StringInput
	// Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.
	HealthStatus    pulumi.StringPtrInput
	Host            pulumi.StringInput
	IsDisabled      pulumi.BoolPtrInput
	MachinePolicyId pulumi.StringPtrInput
	// The name of this resource.
	Name            pulumi.StringPtrInput
	OperatingSystem pulumi.StringPtrInput
	Port            pulumi.IntPtrInput
	ProxyId         pulumi.StringPtrInput
	Roles           pulumi.StringArrayInput
	ShellName       pulumi.StringPtrInput
	ShellVersion    pulumi.StringPtrInput
	// The space ID associated with this resource.
	SpaceId pulumi.StringPtrInput
	// The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.
	Status pulumi.StringPtrInput
	// A summary elaborating on the status of this resource.
	StatusSummary pulumi.StringPtrInput
	// A list of tenant tags associated with this resource.
	TenantTags pulumi.StringArrayInput
	// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
	TenantedDeploymentParticipation pulumi.StringPtrInput
	// A list of tenant IDs associated with this resource.
	Tenants    pulumi.StringArrayInput
	Thumbprint pulumi.StringPtrInput
	Uri        pulumi.StringPtrInput
}

func (SshConnectionDeploymentTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sshConnectionDeploymentTargetArgs)(nil)).Elem()
}

type SshConnectionDeploymentTargetInput interface {
	pulumi.Input

	ToSshConnectionDeploymentTargetOutput() SshConnectionDeploymentTargetOutput
	ToSshConnectionDeploymentTargetOutputWithContext(ctx context.Context) SshConnectionDeploymentTargetOutput
}

func (*SshConnectionDeploymentTarget) ElementType() reflect.Type {
	return reflect.TypeOf((**SshConnectionDeploymentTarget)(nil)).Elem()
}

func (i *SshConnectionDeploymentTarget) ToSshConnectionDeploymentTargetOutput() SshConnectionDeploymentTargetOutput {
	return i.ToSshConnectionDeploymentTargetOutputWithContext(context.Background())
}

func (i *SshConnectionDeploymentTarget) ToSshConnectionDeploymentTargetOutputWithContext(ctx context.Context) SshConnectionDeploymentTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConnectionDeploymentTargetOutput)
}

// SshConnectionDeploymentTargetArrayInput is an input type that accepts SshConnectionDeploymentTargetArray and SshConnectionDeploymentTargetArrayOutput values.
// You can construct a concrete instance of `SshConnectionDeploymentTargetArrayInput` via:
//
//	SshConnectionDeploymentTargetArray{ SshConnectionDeploymentTargetArgs{...} }
type SshConnectionDeploymentTargetArrayInput interface {
	pulumi.Input

	ToSshConnectionDeploymentTargetArrayOutput() SshConnectionDeploymentTargetArrayOutput
	ToSshConnectionDeploymentTargetArrayOutputWithContext(context.Context) SshConnectionDeploymentTargetArrayOutput
}

type SshConnectionDeploymentTargetArray []SshConnectionDeploymentTargetInput

func (SshConnectionDeploymentTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SshConnectionDeploymentTarget)(nil)).Elem()
}

func (i SshConnectionDeploymentTargetArray) ToSshConnectionDeploymentTargetArrayOutput() SshConnectionDeploymentTargetArrayOutput {
	return i.ToSshConnectionDeploymentTargetArrayOutputWithContext(context.Background())
}

func (i SshConnectionDeploymentTargetArray) ToSshConnectionDeploymentTargetArrayOutputWithContext(ctx context.Context) SshConnectionDeploymentTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConnectionDeploymentTargetArrayOutput)
}

// SshConnectionDeploymentTargetMapInput is an input type that accepts SshConnectionDeploymentTargetMap and SshConnectionDeploymentTargetMapOutput values.
// You can construct a concrete instance of `SshConnectionDeploymentTargetMapInput` via:
//
//	SshConnectionDeploymentTargetMap{ "key": SshConnectionDeploymentTargetArgs{...} }
type SshConnectionDeploymentTargetMapInput interface {
	pulumi.Input

	ToSshConnectionDeploymentTargetMapOutput() SshConnectionDeploymentTargetMapOutput
	ToSshConnectionDeploymentTargetMapOutputWithContext(context.Context) SshConnectionDeploymentTargetMapOutput
}

type SshConnectionDeploymentTargetMap map[string]SshConnectionDeploymentTargetInput

func (SshConnectionDeploymentTargetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SshConnectionDeploymentTarget)(nil)).Elem()
}

func (i SshConnectionDeploymentTargetMap) ToSshConnectionDeploymentTargetMapOutput() SshConnectionDeploymentTargetMapOutput {
	return i.ToSshConnectionDeploymentTargetMapOutputWithContext(context.Background())
}

func (i SshConnectionDeploymentTargetMap) ToSshConnectionDeploymentTargetMapOutputWithContext(ctx context.Context) SshConnectionDeploymentTargetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConnectionDeploymentTargetMapOutput)
}

type SshConnectionDeploymentTargetOutput struct{ *pulumi.OutputState }

func (SshConnectionDeploymentTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SshConnectionDeploymentTarget)(nil)).Elem()
}

func (o SshConnectionDeploymentTargetOutput) ToSshConnectionDeploymentTargetOutput() SshConnectionDeploymentTargetOutput {
	return o
}

func (o SshConnectionDeploymentTargetOutput) ToSshConnectionDeploymentTargetOutputWithContext(ctx context.Context) SshConnectionDeploymentTargetOutput {
	return o
}

func (o SshConnectionDeploymentTargetOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

func (o SshConnectionDeploymentTargetOutput) DotNetCorePlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringPtrOutput { return v.DotNetCorePlatform }).(pulumi.StringPtrOutput)
}

func (o SshConnectionDeploymentTargetOutput) Endpoints() SshConnectionDeploymentTargetEndpointArrayOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) SshConnectionDeploymentTargetEndpointArrayOutput {
		return v.Endpoints
	}).(SshConnectionDeploymentTargetEndpointArrayOutput)
}

// A list of environment IDs associated with this resource.
func (o SshConnectionDeploymentTargetOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringArrayOutput { return v.Environments }).(pulumi.StringArrayOutput)
}

func (o SshConnectionDeploymentTargetOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringOutput { return v.Fingerprint }).(pulumi.StringOutput)
}

func (o SshConnectionDeploymentTargetOutput) HasLatestCalamari() pulumi.BoolOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.BoolOutput { return v.HasLatestCalamari }).(pulumi.BoolOutput)
}

// Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.
func (o SshConnectionDeploymentTargetOutput) HealthStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringOutput { return v.HealthStatus }).(pulumi.StringOutput)
}

func (o SshConnectionDeploymentTargetOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringOutput { return v.Host }).(pulumi.StringOutput)
}

func (o SshConnectionDeploymentTargetOutput) IsDisabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.BoolOutput { return v.IsDisabled }).(pulumi.BoolOutput)
}

func (o SshConnectionDeploymentTargetOutput) IsInProcess() pulumi.BoolOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.BoolOutput { return v.IsInProcess }).(pulumi.BoolOutput)
}

func (o SshConnectionDeploymentTargetOutput) MachinePolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringOutput { return v.MachinePolicyId }).(pulumi.StringOutput)
}

// The name of this resource.
func (o SshConnectionDeploymentTargetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SshConnectionDeploymentTargetOutput) OperatingSystem() pulumi.StringOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringOutput { return v.OperatingSystem }).(pulumi.StringOutput)
}

func (o SshConnectionDeploymentTargetOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.IntPtrOutput { return v.Port }).(pulumi.IntPtrOutput)
}

func (o SshConnectionDeploymentTargetOutput) ProxyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringPtrOutput { return v.ProxyId }).(pulumi.StringPtrOutput)
}

func (o SshConnectionDeploymentTargetOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringArrayOutput { return v.Roles }).(pulumi.StringArrayOutput)
}

func (o SshConnectionDeploymentTargetOutput) ShellName() pulumi.StringOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringOutput { return v.ShellName }).(pulumi.StringOutput)
}

func (o SshConnectionDeploymentTargetOutput) ShellVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringOutput { return v.ShellVersion }).(pulumi.StringOutput)
}

// The space ID associated with this resource.
func (o SshConnectionDeploymentTargetOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringOutput { return v.SpaceId }).(pulumi.StringOutput)
}

// The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.
func (o SshConnectionDeploymentTargetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// A summary elaborating on the status of this resource.
func (o SshConnectionDeploymentTargetOutput) StatusSummary() pulumi.StringOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringOutput { return v.StatusSummary }).(pulumi.StringOutput)
}

// A list of tenant tags associated with this resource.
func (o SshConnectionDeploymentTargetOutput) TenantTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringArrayOutput { return v.TenantTags }).(pulumi.StringArrayOutput)
}

// The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.
func (o SshConnectionDeploymentTargetOutput) TenantedDeploymentParticipation() pulumi.StringOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringOutput { return v.TenantedDeploymentParticipation }).(pulumi.StringOutput)
}

// A list of tenant IDs associated with this resource.
func (o SshConnectionDeploymentTargetOutput) Tenants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringArrayOutput { return v.Tenants }).(pulumi.StringArrayOutput)
}

func (o SshConnectionDeploymentTargetOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringOutput { return v.Thumbprint }).(pulumi.StringOutput)
}

func (o SshConnectionDeploymentTargetOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v *SshConnectionDeploymentTarget) pulumi.StringOutput { return v.Uri }).(pulumi.StringOutput)
}

type SshConnectionDeploymentTargetArrayOutput struct{ *pulumi.OutputState }

func (SshConnectionDeploymentTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SshConnectionDeploymentTarget)(nil)).Elem()
}

func (o SshConnectionDeploymentTargetArrayOutput) ToSshConnectionDeploymentTargetArrayOutput() SshConnectionDeploymentTargetArrayOutput {
	return o
}

func (o SshConnectionDeploymentTargetArrayOutput) ToSshConnectionDeploymentTargetArrayOutputWithContext(ctx context.Context) SshConnectionDeploymentTargetArrayOutput {
	return o
}

func (o SshConnectionDeploymentTargetArrayOutput) Index(i pulumi.IntInput) SshConnectionDeploymentTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SshConnectionDeploymentTarget {
		return vs[0].([]*SshConnectionDeploymentTarget)[vs[1].(int)]
	}).(SshConnectionDeploymentTargetOutput)
}

type SshConnectionDeploymentTargetMapOutput struct{ *pulumi.OutputState }

func (SshConnectionDeploymentTargetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SshConnectionDeploymentTarget)(nil)).Elem()
}

func (o SshConnectionDeploymentTargetMapOutput) ToSshConnectionDeploymentTargetMapOutput() SshConnectionDeploymentTargetMapOutput {
	return o
}

func (o SshConnectionDeploymentTargetMapOutput) ToSshConnectionDeploymentTargetMapOutputWithContext(ctx context.Context) SshConnectionDeploymentTargetMapOutput {
	return o
}

func (o SshConnectionDeploymentTargetMapOutput) MapIndex(k pulumi.StringInput) SshConnectionDeploymentTargetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SshConnectionDeploymentTarget {
		return vs[0].(map[string]*SshConnectionDeploymentTarget)[vs[1].(string)]
	}).(SshConnectionDeploymentTargetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SshConnectionDeploymentTargetInput)(nil)).Elem(), &SshConnectionDeploymentTarget{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshConnectionDeploymentTargetArrayInput)(nil)).Elem(), SshConnectionDeploymentTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshConnectionDeploymentTargetMapInput)(nil)).Elem(), SshConnectionDeploymentTargetMap{})
	pulumi.RegisterOutputType(SshConnectionDeploymentTargetOutput{})
	pulumi.RegisterOutputType(SshConnectionDeploymentTargetArrayOutput{})
	pulumi.RegisterOutputType(SshConnectionDeploymentTargetMapOutput{})
}
