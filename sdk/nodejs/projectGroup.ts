// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource manages project groups in Octopus Deploy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as octopusdeploy from "@pulumi/octopusdeploy";
 *
 * const example = new octopusdeploy.ProjectGroup("example", {description: "The development project group."});
 * ```
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import octopusdeploy:index/projectGroup:ProjectGroup [options] octopusdeploy_project_group.<name> <project_group-id>
 * ```
 */
export class ProjectGroup extends pulumi.CustomResource {
    /**
     * Get an existing ProjectGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectGroupState, opts?: pulumi.CustomResourceOptions): ProjectGroup {
        return new ProjectGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'octopusdeploy:index/projectGroup:ProjectGroup';

    /**
     * Returns true if the given object is an instance of ProjectGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProjectGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProjectGroup.__pulumiType;
    }

    /**
     * The description of this project group.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The name of this resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the retention policy associated with this project group.
     */
    public readonly retentionPolicyId!: pulumi.Output<string>;
    /**
     * The space ID associated with this project group.
     */
    public readonly spaceId!: pulumi.Output<string>;

    /**
     * Create a ProjectGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProjectGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProjectGroupArgs | ProjectGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProjectGroupState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["retentionPolicyId"] = state ? state.retentionPolicyId : undefined;
            resourceInputs["spaceId"] = state ? state.spaceId : undefined;
        } else {
            const args = argsOrState as ProjectGroupArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["retentionPolicyId"] = args ? args.retentionPolicyId : undefined;
            resourceInputs["spaceId"] = args ? args.spaceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProjectGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ProjectGroup resources.
 */
export interface ProjectGroupState {
    /**
     * The description of this project group.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of this resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the retention policy associated with this project group.
     */
    retentionPolicyId?: pulumi.Input<string>;
    /**
     * The space ID associated with this project group.
     */
    spaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProjectGroup resource.
 */
export interface ProjectGroupArgs {
    /**
     * The description of this project group.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of this resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the retention policy associated with this project group.
     */
    retentionPolicyId?: pulumi.Input<string>;
    /**
     * The space ID associated with this project group.
     */
    spaceId?: pulumi.Input<string>;
}
