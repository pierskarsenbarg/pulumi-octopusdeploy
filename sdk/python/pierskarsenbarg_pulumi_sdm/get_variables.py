# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetVariablesResult',
    'AwaitableGetVariablesResult',
    'get_variables',
    'get_variables_output',
]

@pulumi.output_type
class GetVariablesResult:
    """
    A collection of values returned by getVariables.
    """
    def __init__(__self__, id=None, ids=None, variables=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ids and not isinstance(ids, list):
            raise TypeError("Expected argument 'ids' to be a list")
        pulumi.set(__self__, "ids", ids)
        if variables and not isinstance(variables, list):
            raise TypeError("Expected argument 'variables' to be a list")
        pulumi.set(__self__, "variables", variables)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        An auto-generated identifier that includes the timestamp when this data source was last modified.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def ids(self) -> Optional[Sequence[str]]:
        """
        A filter to search by a list of IDs.
        """
        return pulumi.get(self, "ids")

    @property
    @pulumi.getter
    def variables(self) -> Sequence['outputs.GetVariablesVariableResult']:
        """
        A list of variables that match the filter(s).
        """
        return pulumi.get(self, "variables")


class AwaitableGetVariablesResult(GetVariablesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetVariablesResult(
            id=self.id,
            ids=self.ids,
            variables=self.variables)


def get_variables(ids: Optional[Sequence[str]] = None,
                  variables: Optional[Sequence[pulumi.InputType['GetVariablesVariableArgs']]] = None,
                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetVariablesResult:
    """
    Provides information about existing variables.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_octopusdeploy as octopusdeploy

    example = octopusdeploy.get_variables()
    ```


    :param Sequence[str] ids: A filter to search by a list of IDs.
    :param Sequence[pulumi.InputType['GetVariablesVariableArgs']] variables: A list of variables that match the filter(s).
    """
    __args__ = dict()
    __args__['ids'] = ids
    __args__['variables'] = variables
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('octopusdeploy:index/getVariables:getVariables', __args__, opts=opts, typ=GetVariablesResult).value

    return AwaitableGetVariablesResult(
        id=__ret__.id,
        ids=__ret__.ids,
        variables=__ret__.variables)


@_utilities.lift_output_func(get_variables)
def get_variables_output(ids: Optional[pulumi.Input[Optional[Sequence[str]]]] = None,
                         variables: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetVariablesVariableArgs']]]]] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetVariablesResult]:
    """
    Provides information about existing variables.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_octopusdeploy as octopusdeploy

    example = octopusdeploy.get_variables()
    ```


    :param Sequence[str] ids: A filter to search by a list of IDs.
    :param Sequence[pulumi.InputType['GetVariablesVariableArgs']] variables: A list of variables that match the filter(s).
    """
    ...
