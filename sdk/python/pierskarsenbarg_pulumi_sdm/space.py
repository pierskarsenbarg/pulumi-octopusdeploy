# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['SpaceArgs', 'Space']

@pulumi.input_type
class SpaceArgs:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[str]] = None,
                 is_default: Optional[pulumi.Input[bool]] = None,
                 is_task_queue_stopped: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 slug: Optional[pulumi.Input[str]] = None,
                 space_managers_team_members: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 space_managers_teams: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a Space resource.
        :param pulumi.Input[str] description: The description of this space.
        :param pulumi.Input[bool] is_default: Specifies if this space is the default space in Octopus.
        :param pulumi.Input[bool] is_task_queue_stopped: Specifies the status of the task queue for this space.
        :param pulumi.Input[str] name: The name of this resource, no more than 20 characters long
        :param pulumi.Input[str] slug: The unique slug of this space.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] space_managers_team_members: A list of user IDs designated to be managers of this space.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] space_managers_teams: A list of team IDs designated to be managers of this space.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if is_default is not None:
            pulumi.set(__self__, "is_default", is_default)
        if is_task_queue_stopped is not None:
            pulumi.set(__self__, "is_task_queue_stopped", is_task_queue_stopped)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if slug is not None:
            pulumi.set(__self__, "slug", slug)
        if space_managers_team_members is not None:
            pulumi.set(__self__, "space_managers_team_members", space_managers_team_members)
        if space_managers_teams is not None:
            pulumi.set(__self__, "space_managers_teams", space_managers_teams)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of this space.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="isDefault")
    def is_default(self) -> Optional[pulumi.Input[bool]]:
        """
        Specifies if this space is the default space in Octopus.
        """
        return pulumi.get(self, "is_default")

    @is_default.setter
    def is_default(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_default", value)

    @property
    @pulumi.getter(name="isTaskQueueStopped")
    def is_task_queue_stopped(self) -> Optional[pulumi.Input[bool]]:
        """
        Specifies the status of the task queue for this space.
        """
        return pulumi.get(self, "is_task_queue_stopped")

    @is_task_queue_stopped.setter
    def is_task_queue_stopped(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_task_queue_stopped", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of this resource, no more than 20 characters long
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def slug(self) -> Optional[pulumi.Input[str]]:
        """
        The unique slug of this space.
        """
        return pulumi.get(self, "slug")

    @slug.setter
    def slug(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "slug", value)

    @property
    @pulumi.getter(name="spaceManagersTeamMembers")
    def space_managers_team_members(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of user IDs designated to be managers of this space.
        """
        return pulumi.get(self, "space_managers_team_members")

    @space_managers_team_members.setter
    def space_managers_team_members(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "space_managers_team_members", value)

    @property
    @pulumi.getter(name="spaceManagersTeams")
    def space_managers_teams(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of team IDs designated to be managers of this space.
        """
        return pulumi.get(self, "space_managers_teams")

    @space_managers_teams.setter
    def space_managers_teams(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "space_managers_teams", value)


@pulumi.input_type
class _SpaceState:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[str]] = None,
                 is_default: Optional[pulumi.Input[bool]] = None,
                 is_task_queue_stopped: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 slug: Optional[pulumi.Input[str]] = None,
                 space_managers_team_members: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 space_managers_teams: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        Input properties used for looking up and filtering Space resources.
        :param pulumi.Input[str] description: The description of this space.
        :param pulumi.Input[bool] is_default: Specifies if this space is the default space in Octopus.
        :param pulumi.Input[bool] is_task_queue_stopped: Specifies the status of the task queue for this space.
        :param pulumi.Input[str] name: The name of this resource, no more than 20 characters long
        :param pulumi.Input[str] slug: The unique slug of this space.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] space_managers_team_members: A list of user IDs designated to be managers of this space.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] space_managers_teams: A list of team IDs designated to be managers of this space.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if is_default is not None:
            pulumi.set(__self__, "is_default", is_default)
        if is_task_queue_stopped is not None:
            pulumi.set(__self__, "is_task_queue_stopped", is_task_queue_stopped)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if slug is not None:
            pulumi.set(__self__, "slug", slug)
        if space_managers_team_members is not None:
            pulumi.set(__self__, "space_managers_team_members", space_managers_team_members)
        if space_managers_teams is not None:
            pulumi.set(__self__, "space_managers_teams", space_managers_teams)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of this space.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="isDefault")
    def is_default(self) -> Optional[pulumi.Input[bool]]:
        """
        Specifies if this space is the default space in Octopus.
        """
        return pulumi.get(self, "is_default")

    @is_default.setter
    def is_default(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_default", value)

    @property
    @pulumi.getter(name="isTaskQueueStopped")
    def is_task_queue_stopped(self) -> Optional[pulumi.Input[bool]]:
        """
        Specifies the status of the task queue for this space.
        """
        return pulumi.get(self, "is_task_queue_stopped")

    @is_task_queue_stopped.setter
    def is_task_queue_stopped(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_task_queue_stopped", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of this resource, no more than 20 characters long
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def slug(self) -> Optional[pulumi.Input[str]]:
        """
        The unique slug of this space.
        """
        return pulumi.get(self, "slug")

    @slug.setter
    def slug(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "slug", value)

    @property
    @pulumi.getter(name="spaceManagersTeamMembers")
    def space_managers_team_members(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of user IDs designated to be managers of this space.
        """
        return pulumi.get(self, "space_managers_team_members")

    @space_managers_team_members.setter
    def space_managers_team_members(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "space_managers_team_members", value)

    @property
    @pulumi.getter(name="spaceManagersTeams")
    def space_managers_teams(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of team IDs designated to be managers of this space.
        """
        return pulumi.get(self, "space_managers_teams")

    @space_managers_teams.setter
    def space_managers_teams(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "space_managers_teams", value)


class Space(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 is_default: Optional[pulumi.Input[bool]] = None,
                 is_task_queue_stopped: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 slug: Optional[pulumi.Input[str]] = None,
                 space_managers_team_members: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 space_managers_teams: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        """
        This resource manages spaces in Octopus Deploy.

        ## Example Usage

        ```python
        import pulumi
        import pierskarsenbarg_pulumi_sdm as octopusdeploy

        example = octopusdeploy.Space("example",
            description="A space for the development team.",
            is_default=False,
            is_task_queue_stopped=False,
            space_managers_team_members=[
                "Users-123",
                "Users-321",
            ],
            space_managers_teams=["teams-everyone"])
        ```

        ## Import

        ```sh
         $ pulumi import octopusdeploy:index/space:Space [options] octopusdeploy_space.<name> <space-id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of this space.
        :param pulumi.Input[bool] is_default: Specifies if this space is the default space in Octopus.
        :param pulumi.Input[bool] is_task_queue_stopped: Specifies the status of the task queue for this space.
        :param pulumi.Input[str] name: The name of this resource, no more than 20 characters long
        :param pulumi.Input[str] slug: The unique slug of this space.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] space_managers_team_members: A list of user IDs designated to be managers of this space.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] space_managers_teams: A list of team IDs designated to be managers of this space.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[SpaceArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource manages spaces in Octopus Deploy.

        ## Example Usage

        ```python
        import pulumi
        import pierskarsenbarg_pulumi_sdm as octopusdeploy

        example = octopusdeploy.Space("example",
            description="A space for the development team.",
            is_default=False,
            is_task_queue_stopped=False,
            space_managers_team_members=[
                "Users-123",
                "Users-321",
            ],
            space_managers_teams=["teams-everyone"])
        ```

        ## Import

        ```sh
         $ pulumi import octopusdeploy:index/space:Space [options] octopusdeploy_space.<name> <space-id>
        ```

        :param str resource_name: The name of the resource.
        :param SpaceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SpaceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 is_default: Optional[pulumi.Input[bool]] = None,
                 is_task_queue_stopped: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 slug: Optional[pulumi.Input[str]] = None,
                 space_managers_team_members: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 space_managers_teams: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SpaceArgs.__new__(SpaceArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["is_default"] = is_default
            __props__.__dict__["is_task_queue_stopped"] = is_task_queue_stopped
            __props__.__dict__["name"] = name
            __props__.__dict__["slug"] = slug
            __props__.__dict__["space_managers_team_members"] = space_managers_team_members
            __props__.__dict__["space_managers_teams"] = space_managers_teams
        super(Space, __self__).__init__(
            'octopusdeploy:index/space:Space',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            description: Optional[pulumi.Input[str]] = None,
            is_default: Optional[pulumi.Input[bool]] = None,
            is_task_queue_stopped: Optional[pulumi.Input[bool]] = None,
            name: Optional[pulumi.Input[str]] = None,
            slug: Optional[pulumi.Input[str]] = None,
            space_managers_team_members: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            space_managers_teams: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None) -> 'Space':
        """
        Get an existing Space resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of this space.
        :param pulumi.Input[bool] is_default: Specifies if this space is the default space in Octopus.
        :param pulumi.Input[bool] is_task_queue_stopped: Specifies the status of the task queue for this space.
        :param pulumi.Input[str] name: The name of this resource, no more than 20 characters long
        :param pulumi.Input[str] slug: The unique slug of this space.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] space_managers_team_members: A list of user IDs designated to be managers of this space.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] space_managers_teams: A list of team IDs designated to be managers of this space.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SpaceState.__new__(_SpaceState)

        __props__.__dict__["description"] = description
        __props__.__dict__["is_default"] = is_default
        __props__.__dict__["is_task_queue_stopped"] = is_task_queue_stopped
        __props__.__dict__["name"] = name
        __props__.__dict__["slug"] = slug
        __props__.__dict__["space_managers_team_members"] = space_managers_team_members
        __props__.__dict__["space_managers_teams"] = space_managers_teams
        return Space(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        The description of this space.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="isDefault")
    def is_default(self) -> pulumi.Output[Optional[bool]]:
        """
        Specifies if this space is the default space in Octopus.
        """
        return pulumi.get(self, "is_default")

    @property
    @pulumi.getter(name="isTaskQueueStopped")
    def is_task_queue_stopped(self) -> pulumi.Output[Optional[bool]]:
        """
        Specifies the status of the task queue for this space.
        """
        return pulumi.get(self, "is_task_queue_stopped")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name of this resource, no more than 20 characters long
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def slug(self) -> pulumi.Output[str]:
        """
        The unique slug of this space.
        """
        return pulumi.get(self, "slug")

    @property
    @pulumi.getter(name="spaceManagersTeamMembers")
    def space_managers_team_members(self) -> pulumi.Output[Sequence[str]]:
        """
        A list of user IDs designated to be managers of this space.
        """
        return pulumi.get(self, "space_managers_team_members")

    @property
    @pulumi.getter(name="spaceManagersTeams")
    def space_managers_teams(self) -> pulumi.Output[Sequence[str]]:
        """
        A list of team IDs designated to be managers of this space.
        """
        return pulumi.get(self, "space_managers_teams")

