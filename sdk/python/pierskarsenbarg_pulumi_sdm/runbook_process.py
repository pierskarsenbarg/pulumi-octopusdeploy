# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['RunbookProcessArgs', 'RunbookProcess']

@pulumi.input_type
class RunbookProcessArgs:
    def __init__(__self__, *,
                 runbook_id: pulumi.Input[str],
                 last_snapshot_id: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[str]] = None,
                 space_id: Optional[pulumi.Input[str]] = None,
                 steps: Optional[pulumi.Input[Sequence[pulumi.Input['RunbookProcessStepArgs']]]] = None,
                 version: Optional[pulumi.Input[int]] = None):
        """
        The set of arguments for constructing a RunbookProcess resource.
        :param pulumi.Input[str] runbook_id: The runbook ID associated with this runbook process.
        :param pulumi.Input[str] last_snapshot_id: Read only value containing the last snapshot ID.
        :param pulumi.Input[str] project_id: The project ID associated with this runbook process.
        :param pulumi.Input[str] space_id: The space ID associated with this resource.
        :param pulumi.Input[int] version: The version number of this runbook process.
        """
        pulumi.set(__self__, "runbook_id", runbook_id)
        if last_snapshot_id is not None:
            pulumi.set(__self__, "last_snapshot_id", last_snapshot_id)
        if project_id is not None:
            pulumi.set(__self__, "project_id", project_id)
        if space_id is not None:
            pulumi.set(__self__, "space_id", space_id)
        if steps is not None:
            pulumi.set(__self__, "steps", steps)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter(name="runbookId")
    def runbook_id(self) -> pulumi.Input[str]:
        """
        The runbook ID associated with this runbook process.
        """
        return pulumi.get(self, "runbook_id")

    @runbook_id.setter
    def runbook_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "runbook_id", value)

    @property
    @pulumi.getter(name="lastSnapshotId")
    def last_snapshot_id(self) -> Optional[pulumi.Input[str]]:
        """
        Read only value containing the last snapshot ID.
        """
        return pulumi.get(self, "last_snapshot_id")

    @last_snapshot_id.setter
    def last_snapshot_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_snapshot_id", value)

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[pulumi.Input[str]]:
        """
        The project ID associated with this runbook process.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "project_id", value)

    @property
    @pulumi.getter(name="spaceId")
    def space_id(self) -> Optional[pulumi.Input[str]]:
        """
        The space ID associated with this resource.
        """
        return pulumi.get(self, "space_id")

    @space_id.setter
    def space_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "space_id", value)

    @property
    @pulumi.getter
    def steps(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['RunbookProcessStepArgs']]]]:
        return pulumi.get(self, "steps")

    @steps.setter
    def steps(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['RunbookProcessStepArgs']]]]):
        pulumi.set(self, "steps", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[int]]:
        """
        The version number of this runbook process.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class _RunbookProcessState:
    def __init__(__self__, *,
                 last_snapshot_id: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[str]] = None,
                 runbook_id: Optional[pulumi.Input[str]] = None,
                 space_id: Optional[pulumi.Input[str]] = None,
                 steps: Optional[pulumi.Input[Sequence[pulumi.Input['RunbookProcessStepArgs']]]] = None,
                 version: Optional[pulumi.Input[int]] = None):
        """
        Input properties used for looking up and filtering RunbookProcess resources.
        :param pulumi.Input[str] last_snapshot_id: Read only value containing the last snapshot ID.
        :param pulumi.Input[str] project_id: The project ID associated with this runbook process.
        :param pulumi.Input[str] runbook_id: The runbook ID associated with this runbook process.
        :param pulumi.Input[str] space_id: The space ID associated with this resource.
        :param pulumi.Input[int] version: The version number of this runbook process.
        """
        if last_snapshot_id is not None:
            pulumi.set(__self__, "last_snapshot_id", last_snapshot_id)
        if project_id is not None:
            pulumi.set(__self__, "project_id", project_id)
        if runbook_id is not None:
            pulumi.set(__self__, "runbook_id", runbook_id)
        if space_id is not None:
            pulumi.set(__self__, "space_id", space_id)
        if steps is not None:
            pulumi.set(__self__, "steps", steps)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter(name="lastSnapshotId")
    def last_snapshot_id(self) -> Optional[pulumi.Input[str]]:
        """
        Read only value containing the last snapshot ID.
        """
        return pulumi.get(self, "last_snapshot_id")

    @last_snapshot_id.setter
    def last_snapshot_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_snapshot_id", value)

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[pulumi.Input[str]]:
        """
        The project ID associated with this runbook process.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "project_id", value)

    @property
    @pulumi.getter(name="runbookId")
    def runbook_id(self) -> Optional[pulumi.Input[str]]:
        """
        The runbook ID associated with this runbook process.
        """
        return pulumi.get(self, "runbook_id")

    @runbook_id.setter
    def runbook_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "runbook_id", value)

    @property
    @pulumi.getter(name="spaceId")
    def space_id(self) -> Optional[pulumi.Input[str]]:
        """
        The space ID associated with this resource.
        """
        return pulumi.get(self, "space_id")

    @space_id.setter
    def space_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "space_id", value)

    @property
    @pulumi.getter
    def steps(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['RunbookProcessStepArgs']]]]:
        return pulumi.get(self, "steps")

    @steps.setter
    def steps(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['RunbookProcessStepArgs']]]]):
        pulumi.set(self, "steps", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[int]]:
        """
        The version number of this runbook process.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "version", value)


class RunbookProcess(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 last_snapshot_id: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[str]] = None,
                 runbook_id: Optional[pulumi.Input[str]] = None,
                 space_id: Optional[pulumi.Input[str]] = None,
                 steps: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['RunbookProcessStepArgs']]]]] = None,
                 version: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        """
        This resource manages runbook processes in Octopus Deploy.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] last_snapshot_id: Read only value containing the last snapshot ID.
        :param pulumi.Input[str] project_id: The project ID associated with this runbook process.
        :param pulumi.Input[str] runbook_id: The runbook ID associated with this runbook process.
        :param pulumi.Input[str] space_id: The space ID associated with this resource.
        :param pulumi.Input[int] version: The version number of this runbook process.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: RunbookProcessArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource manages runbook processes in Octopus Deploy.

        :param str resource_name: The name of the resource.
        :param RunbookProcessArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RunbookProcessArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 last_snapshot_id: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[str]] = None,
                 runbook_id: Optional[pulumi.Input[str]] = None,
                 space_id: Optional[pulumi.Input[str]] = None,
                 steps: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['RunbookProcessStepArgs']]]]] = None,
                 version: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RunbookProcessArgs.__new__(RunbookProcessArgs)

            __props__.__dict__["last_snapshot_id"] = last_snapshot_id
            __props__.__dict__["project_id"] = project_id
            if runbook_id is None and not opts.urn:
                raise TypeError("Missing required property 'runbook_id'")
            __props__.__dict__["runbook_id"] = runbook_id
            __props__.__dict__["space_id"] = space_id
            __props__.__dict__["steps"] = steps
            __props__.__dict__["version"] = version
        super(RunbookProcess, __self__).__init__(
            'octopusdeploy:index/runbookProcess:RunbookProcess',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            last_snapshot_id: Optional[pulumi.Input[str]] = None,
            project_id: Optional[pulumi.Input[str]] = None,
            runbook_id: Optional[pulumi.Input[str]] = None,
            space_id: Optional[pulumi.Input[str]] = None,
            steps: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['RunbookProcessStepArgs']]]]] = None,
            version: Optional[pulumi.Input[int]] = None) -> 'RunbookProcess':
        """
        Get an existing RunbookProcess resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] last_snapshot_id: Read only value containing the last snapshot ID.
        :param pulumi.Input[str] project_id: The project ID associated with this runbook process.
        :param pulumi.Input[str] runbook_id: The runbook ID associated with this runbook process.
        :param pulumi.Input[str] space_id: The space ID associated with this resource.
        :param pulumi.Input[int] version: The version number of this runbook process.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RunbookProcessState.__new__(_RunbookProcessState)

        __props__.__dict__["last_snapshot_id"] = last_snapshot_id
        __props__.__dict__["project_id"] = project_id
        __props__.__dict__["runbook_id"] = runbook_id
        __props__.__dict__["space_id"] = space_id
        __props__.__dict__["steps"] = steps
        __props__.__dict__["version"] = version
        return RunbookProcess(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="lastSnapshotId")
    def last_snapshot_id(self) -> pulumi.Output[Optional[str]]:
        """
        Read only value containing the last snapshot ID.
        """
        return pulumi.get(self, "last_snapshot_id")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Output[str]:
        """
        The project ID associated with this runbook process.
        """
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter(name="runbookId")
    def runbook_id(self) -> pulumi.Output[str]:
        """
        The runbook ID associated with this runbook process.
        """
        return pulumi.get(self, "runbook_id")

    @property
    @pulumi.getter(name="spaceId")
    def space_id(self) -> pulumi.Output[str]:
        """
        The space ID associated with this resource.
        """
        return pulumi.get(self, "space_id")

    @property
    @pulumi.getter
    def steps(self) -> pulumi.Output[Optional[Sequence['outputs.RunbookProcessStep']]]:
        return pulumi.get(self, "steps")

    @property
    @pulumi.getter
    def version(self) -> pulumi.Output[int]:
        """
        The version number of this runbook process.
        """
        return pulumi.get(self, "version")

