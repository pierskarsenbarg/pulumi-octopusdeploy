{
    "name": "octopusdeploy",
    "displayName": "Octopus Deploy",
    "description": "A Pulumi package for creating and managing octopusdeploy cloud resources.",
    "keywords": [
        "pulumi",
        "octopusdeploy",
        "category/cloud"
    ],
    "homepage": "https://github.com/pierskarenbarg/pulumi-octopusdeploy",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`octopusdeploy` Terraform Provider](https://github.com/OctopusDeploy/terraform-provider-octopusdeploy).",
    "repository": "https://github.com/pierskarenbarg/pulumi-octopusdeploy",
    "publisher": "Piers Karsenbarg",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing octopusdeploy cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/OctopusDeploy/terraform-provider-octopusdeploy)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-octopusdeploy` repo](https://github.com/pierskarenbarg/pulumi-octopusdeploy/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-octopusdeploy` repo](https://github.com/OctopusDeploy/terraform-provider-octopusdeploy/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/OctopusDeploy/terraform-provider-octopusdeploy)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-octopusdeploy` repo](https://github.com/pierskarenbarg/pulumi-octopusdeploy/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-octopusdeploy` repo](https://github.com/OctopusDeploy/terraform-provider-octopusdeploy/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "address": {
                "type": "string",
                "description": "The endpoint of the Octopus REST API\n"
            },
            "apiKey": {
                "type": "string",
                "description": "The API key to use with the Octopus REST API\n"
            },
            "spaceId": {
                "type": "string",
                "description": "The space ID to target\n"
            }
        },
        "defaults": [
            "address",
            "apiKey"
        ]
    },
    "types": {
        "octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpoint:AzureCloudServiceDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpointAuthentication:AzureCloudServiceDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpointContainer:AzureCloudServiceDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpointDestination:AzureCloudServiceDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpointTentacleVersionDetail:AzureCloudServiceDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "communicationStyle"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authentication",
                        "communicationStyle",
                        "containers",
                        "destinations",
                        "id",
                        "tentacleVersionDetails"
                    ]
                }
            }
        },
        "octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpointAuthentication:AzureCloudServiceDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpointContainer:AzureCloudServiceDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpointDestination:AzureCloudServiceDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpointTentacleVersionDetail:AzureCloudServiceDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "upgradeLocked",
                        "upgradeRequired",
                        "upgradeSuggested",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpoint:AzureServiceFabricClusterDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpointAuthentication:AzureServiceFabricClusterDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpointContainer:AzureServiceFabricClusterDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpointDestination:AzureServiceFabricClusterDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpointTentacleVersionDetail:AzureServiceFabricClusterDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "communicationStyle"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authentication",
                        "communicationStyle",
                        "containers",
                        "destinations",
                        "id",
                        "tentacleVersionDetails"
                    ]
                }
            }
        },
        "octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpointAuthentication:AzureServiceFabricClusterDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpointContainer:AzureServiceFabricClusterDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpointDestination:AzureServiceFabricClusterDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpointTentacleVersionDetail:AzureServiceFabricClusterDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "upgradeLocked",
                        "upgradeRequired",
                        "upgradeSuggested",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/AzureWebAppDeploymentTargetEndpoint:AzureWebAppDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/AzureWebAppDeploymentTargetEndpointAuthentication:AzureWebAppDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureWebAppDeploymentTargetEndpointContainer:AzureWebAppDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureWebAppDeploymentTargetEndpointDestination:AzureWebAppDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureWebAppDeploymentTargetEndpointTentacleVersionDetail:AzureWebAppDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "communicationStyle"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authentication",
                        "communicationStyle",
                        "containers",
                        "destinations",
                        "id",
                        "tentacleVersionDetails"
                    ]
                }
            }
        },
        "octopusdeploy:index/AzureWebAppDeploymentTargetEndpointAuthentication:AzureWebAppDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/AzureWebAppDeploymentTargetEndpointContainer:AzureWebAppDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/AzureWebAppDeploymentTargetEndpointDestination:AzureWebAppDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/AzureWebAppDeploymentTargetEndpointTentacleVersionDetail:AzureWebAppDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "upgradeLocked",
                        "upgradeRequired",
                        "upgradeSuggested",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/ChannelRule:ChannelRule": {
            "properties": {
                "actionPackages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ChannelRuleActionPackage:ChannelRuleActionPackage"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "tag": {
                    "type": "string"
                },
                "versionRange": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "actionPackages"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionPackages",
                        "id"
                    ]
                }
            }
        },
        "octopusdeploy:index/ChannelRuleActionPackage:ChannelRuleActionPackage": {
            "properties": {
                "deploymentAction": {
                    "type": "string"
                },
                "packageReference": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStep:DeploymentProcessStep": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepAction:DeploymentProcessStepAction"
                    }
                },
                "applyTerraformTemplateActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateAction:DeploymentProcessStepApplyTerraformTemplateAction"
                    }
                },
                "condition": {
                    "type": "string",
                    "description": "When to run the step, one of 'Success', 'Failure', 'Always' or 'Variable'\n"
                },
                "conditionExpression": {
                    "type": "string",
                    "description": "The expression to evaluate to determine whether to run this step when 'condition' is 'Variable'\n"
                },
                "deployKubernetesSecretActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployKubernetesSecretAction:DeploymentProcessStepDeployKubernetesSecretAction"
                    }
                },
                "deployPackageActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployPackageAction:DeploymentProcessStepDeployPackageAction"
                    }
                },
                "deployWindowsServiceActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceAction:DeploymentProcessStepDeployWindowsServiceAction"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "manualInterventionActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepManualInterventionAction:DeploymentProcessStepManualInterventionAction"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageRequirement": {
                    "type": "string",
                    "description": "Whether to run this step before or after package acquisition (if possible)\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "runKubectlScriptActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunKubectlScriptAction:DeploymentProcessStepRunKubectlScriptAction"
                    }
                },
                "runScriptActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunScriptAction:DeploymentProcessStepRunScriptAction"
                    }
                },
                "startTrigger": {
                    "type": "string",
                    "description": "Whether to run this step after the previous step ('StartAfterPrevious') or at the same time as the previous step ('StartWithPrevious')\n"
                },
                "targetRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The roles that this step run against, or runs on behalf of\n"
                },
                "windowSize": {
                    "type": "string",
                    "description": "The maximum number of targets to deploy to simultaneously\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "conditionExpression",
                        "id",
                        "name",
                        "properties",
                        "targetRoles"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepAction:DeploymentProcessStepAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepActionActionTemplate:DeploymentProcessStepActionActionTemplate"
                },
                "actionType": {
                    "type": "string"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "condition": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepActionContainer:DeploymentProcessStepActionContainer"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepActionPackage:DeploymentProcessStepActionPackage"
                    }
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepActionPrimaryPackage:DeploymentProcessStepActionPrimaryPackage"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "runOnServer": {
                    "type": "boolean"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "workerPoolId": {
                    "type": "string"
                },
                "workerPoolVariable": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "actionType",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "actionType",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepActionActionTemplate:DeploymentProcessStepActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this deployment process.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepActionContainer:DeploymentProcessStepActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepActionPackage:DeploymentProcessStepActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "extractDuringDeployment": {
                    "type": "boolean"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "extractDuringDeployment",
                        "id",
                        "name",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepActionPrimaryPackage:DeploymentProcessStepActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateAction:DeploymentProcessStepApplyTerraformTemplateAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionActionTemplate:DeploymentProcessStepApplyTerraformTemplateActionActionTemplate"
                },
                "advancedOptions": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionAdvancedOptions:DeploymentProcessStepApplyTerraformTemplateActionAdvancedOptions"
                },
                "awsAccount": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionAwsAccount:DeploymentProcessStepApplyTerraformTemplateActionAwsAccount"
                },
                "azureAccount": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionAzureAccount:DeploymentProcessStepApplyTerraformTemplateActionAzureAccount"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "condition": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionContainer:DeploymentProcessStepApplyTerraformTemplateActionContainer"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "googleCloudAccount": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionGoogleCloudAccount:DeploymentProcessStepApplyTerraformTemplateActionGoogleCloudAccount"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "inlineTemplate": {
                    "type": "string"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionPackage:DeploymentProcessStepApplyTerraformTemplateActionPackage"
                    }
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionPrimaryPackage:DeploymentProcessStepApplyTerraformTemplateActionPrimaryPackage"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "runOnServer": {
                    "type": "boolean"
                },
                "template": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionTemplate:DeploymentProcessStepApplyTerraformTemplateActionTemplate"
                },
                "templateParameters": {
                    "type": "string"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "advancedOptions",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "advancedOptions",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionActionTemplate:DeploymentProcessStepApplyTerraformTemplateActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this deployment process.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionAdvancedOptions:DeploymentProcessStepApplyTerraformTemplateActionAdvancedOptions": {
            "properties": {
                "allowAdditionalPluginDownloads": {
                    "type": "boolean"
                },
                "applyParameters": {
                    "type": "string"
                },
                "initParameters": {
                    "type": "string"
                },
                "pluginCacheDirectory": {
                    "type": "string"
                },
                "workspace": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionAwsAccount:DeploymentProcessStepApplyTerraformTemplateActionAwsAccount": {
            "properties": {
                "region": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionAwsAccountRole:DeploymentProcessStepApplyTerraformTemplateActionAwsAccountRole"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "variable": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionAwsAccountRole:DeploymentProcessStepApplyTerraformTemplateActionAwsAccountRole": {
            "properties": {
                "arn": {
                    "type": "string"
                },
                "externalId": {
                    "type": "string"
                },
                "roleSessionName": {
                    "type": "string"
                },
                "sessionDuration": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionAzureAccount:DeploymentProcessStepApplyTerraformTemplateActionAzureAccount": {
            "properties": {
                "variable": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionContainer:DeploymentProcessStepApplyTerraformTemplateActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionGoogleCloudAccount:DeploymentProcessStepApplyTerraformTemplateActionGoogleCloudAccount": {
            "properties": {
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "variable": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionPackage:DeploymentProcessStepApplyTerraformTemplateActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionPrimaryPackage:DeploymentProcessStepApplyTerraformTemplateActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepApplyTerraformTemplateActionTemplate:DeploymentProcessStepApplyTerraformTemplateActionTemplate": {
            "properties": {
                "additionalVariableFiles": {
                    "type": "string"
                },
                "directory": {
                    "type": "string"
                },
                "runAutomaticFileSubstitution": {
                    "type": "boolean"
                },
                "targetFiles": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepDeployKubernetesSecretAction:DeploymentProcessStepDeployKubernetesSecretAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployKubernetesSecretActionActionTemplate:DeploymentProcessStepDeployKubernetesSecretActionActionTemplate"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "condition": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployKubernetesSecretActionContainer:DeploymentProcessStepDeployKubernetesSecretActionContainer"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployKubernetesSecretActionPackage:DeploymentProcessStepDeployKubernetesSecretActionPackage"
                    }
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "runOnServer": {
                    "type": "boolean"
                },
                "secretName": {
                    "type": "string"
                },
                "secretValues": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "secretName",
                "secretValues"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "id",
                        "name",
                        "packages",
                        "properties",
                        "secretName",
                        "secretValues",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployKubernetesSecretActionActionTemplate:DeploymentProcessStepDeployKubernetesSecretActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this deployment process.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployKubernetesSecretActionContainer:DeploymentProcessStepDeployKubernetesSecretActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepDeployKubernetesSecretActionPackage:DeploymentProcessStepDeployKubernetesSecretActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployPackageAction:DeploymentProcessStepDeployPackageAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployPackageActionActionTemplate:DeploymentProcessStepDeployPackageActionActionTemplate"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "condition": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployPackageActionContainer:DeploymentProcessStepDeployPackageActionContainer"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployPackageActionPackage:DeploymentProcessStepDeployPackageActionPackage"
                    }
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployPackageActionPrimaryPackage:DeploymentProcessStepDeployPackageActionPrimaryPackage"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "windowsService": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployPackageActionWindowsService:DeploymentProcessStepDeployPackageActionWindowsService"
                }
            },
            "type": "object",
            "required": [
                "name",
                "primaryPackage"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployPackageActionActionTemplate:DeploymentProcessStepDeployPackageActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this deployment process.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployPackageActionContainer:DeploymentProcessStepDeployPackageActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepDeployPackageActionPackage:DeploymentProcessStepDeployPackageActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployPackageActionPrimaryPackage:DeploymentProcessStepDeployPackageActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployPackageActionWindowsService:DeploymentProcessStepDeployPackageActionWindowsService": {
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "createOrUpdateService": {
                    "type": "boolean"
                },
                "customAccountName": {
                    "type": "string"
                },
                "customAccountPassword": {
                    "type": "string",
                    "secret": true
                },
                "dependencies": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "executablePath": {
                    "type": "string"
                },
                "serviceAccount": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "startMode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "executablePath",
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createOrUpdateService",
                        "customAccountPassword",
                        "executablePath",
                        "serviceName"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceAction:DeploymentProcessStepDeployWindowsServiceAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceActionActionTemplate:DeploymentProcessStepDeployWindowsServiceActionActionTemplate"
                },
                "arguments": {
                    "type": "string"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "condition": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceActionContainer:DeploymentProcessStepDeployWindowsServiceActionContainer"
                    }
                },
                "createOrUpdateService": {
                    "type": "boolean"
                },
                "customAccountName": {
                    "type": "string"
                },
                "customAccountPassword": {
                    "type": "string",
                    "secret": true
                },
                "dependencies": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "executablePath": {
                    "type": "string"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceActionPackage:DeploymentProcessStepDeployWindowsServiceActionPackage"
                    }
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceActionPrimaryPackage:DeploymentProcessStepDeployWindowsServiceActionPrimaryPackage"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "serviceAccount": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "startMode": {
                    "type": "string"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "executablePath",
                "name",
                "primaryPackage",
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "createOrUpdateService",
                        "customAccountPassword",
                        "environments",
                        "excludedEnvironments",
                        "executablePath",
                        "features",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "serviceName",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceActionActionTemplate:DeploymentProcessStepDeployWindowsServiceActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this deployment process.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceActionContainer:DeploymentProcessStepDeployWindowsServiceActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceActionPackage:DeploymentProcessStepDeployWindowsServiceActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepDeployWindowsServiceActionPrimaryPackage:DeploymentProcessStepDeployWindowsServiceActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepManualInterventionAction:DeploymentProcessStepManualInterventionAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepManualInterventionActionActionTemplate:DeploymentProcessStepManualInterventionActionActionTemplate"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "condition": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepManualInterventionActionContainer:DeploymentProcessStepManualInterventionActionContainer"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "instructions": {
                    "type": "string"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepManualInterventionActionPackage:DeploymentProcessStepManualInterventionActionPackage"
                    }
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "responsibleTeams": {
                    "type": "string"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "instructions",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "id",
                        "instructions",
                        "name",
                        "packages",
                        "properties",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepManualInterventionActionActionTemplate:DeploymentProcessStepManualInterventionActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this deployment process.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepManualInterventionActionContainer:DeploymentProcessStepManualInterventionActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepManualInterventionActionPackage:DeploymentProcessStepManualInterventionActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepRunKubectlScriptAction:DeploymentProcessStepRunKubectlScriptAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunKubectlScriptActionActionTemplate:DeploymentProcessStepRunKubectlScriptActionActionTemplate"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "condition": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunKubectlScriptActionContainer:DeploymentProcessStepRunKubectlScriptActionContainer"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunKubectlScriptActionPackage:DeploymentProcessStepRunKubectlScriptActionPackage"
                    }
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunKubectlScriptActionPrimaryPackage:DeploymentProcessStepRunKubectlScriptActionPrimaryPackage"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "runOnServer": {
                    "type": "boolean"
                },
                "scriptFileName": {
                    "type": "string"
                },
                "scriptParameters": {
                    "type": "string"
                },
                "scriptSource": {
                    "type": "string"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "scriptSource",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepRunKubectlScriptActionActionTemplate:DeploymentProcessStepRunKubectlScriptActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this deployment process.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepRunKubectlScriptActionContainer:DeploymentProcessStepRunKubectlScriptActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepRunKubectlScriptActionPackage:DeploymentProcessStepRunKubectlScriptActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "extractDuringDeployment": {
                    "type": "boolean"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "extractDuringDeployment",
                        "id",
                        "name",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepRunKubectlScriptActionPrimaryPackage:DeploymentProcessStepRunKubectlScriptActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepRunScriptAction:DeploymentProcessStepRunScriptAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunScriptActionActionTemplate:DeploymentProcessStepRunScriptActionActionTemplate"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "condition": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunScriptActionContainer:DeploymentProcessStepRunScriptActionContainer"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunScriptActionPackage:DeploymentProcessStepRunScriptActionPackage"
                    }
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/DeploymentProcessStepRunScriptActionPrimaryPackage:DeploymentProcessStepRunScriptActionPrimaryPackage"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "deprecationMessage": "This attribute is deprecated and will be removed in a future release. Please use the attributes that match the properties that are stored to this map."
                },
                "runOnServer": {
                    "type": "boolean"
                },
                "scriptBody": {
                    "type": "string"
                },
                "scriptFileName": {
                    "type": "string"
                },
                "scriptParameters": {
                    "type": "string"
                },
                "scriptSource": {
                    "type": "string"
                },
                "scriptSyntax": {
                    "type": "string"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "variableSubstitutionInFiles": {
                    "type": "string"
                },
                "workerPoolId": {
                    "type": "string"
                },
                "workerPoolVariable": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "scriptSource",
                        "scriptSyntax",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepRunScriptActionActionTemplate:DeploymentProcessStepRunScriptActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this deployment process.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepRunScriptActionContainer:DeploymentProcessStepRunScriptActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/DeploymentProcessStepRunScriptActionPackage:DeploymentProcessStepRunScriptActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "extractDuringDeployment": {
                    "type": "boolean"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "extractDuringDeployment",
                        "id",
                        "name",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/DeploymentProcessStepRunScriptActionPrimaryPackage:DeploymentProcessStepRunScriptActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/EnvironmentJiraExtensionSettings:EnvironmentJiraExtensionSettings": {
            "properties": {
                "environmentType": {
                    "type": "string",
                    "description": "The Jira environment type of this Octopus deployment environment. Valid values are `\"development\"`, `\"production\"`, `\"staging\"`, `\"testing\"`, or `\"unmapped\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "environmentType"
            ]
        },
        "octopusdeploy:index/EnvironmentJiraServiceManagementExtensionSettings:EnvironmentJiraServiceManagementExtensionSettings": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether or not this extension is enabled for this project.\n"
                }
            },
            "type": "object",
            "required": [
                "isEnabled"
            ]
        },
        "octopusdeploy:index/EnvironmentServicenowExtensionSettings:EnvironmentServicenowExtensionSettings": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether or not this extension is enabled for this project.\n"
                }
            },
            "type": "object",
            "required": [
                "isEnabled"
            ]
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetAuthentication:KubernetesClusterDeploymentTargetAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetAwsAccountAuthentication:KubernetesClusterDeploymentTargetAwsAccountAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "clusterName"
            ]
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication:KubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "clusterName",
                "clusterResourceGroup"
            ]
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetCertificateAuthentication:KubernetesClusterDeploymentTargetCertificateAuthentication": {
            "properties": {
                "clientCertificate": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetContainer:KubernetesClusterDeploymentTargetContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetEndpoint:KubernetesClusterDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetEndpointAuthentication:KubernetesClusterDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetEndpointContainer:KubernetesClusterDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetEndpointDestination:KubernetesClusterDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetEndpointTentacleVersionDetail:KubernetesClusterDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "communicationStyle"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authentication",
                        "communicationStyle",
                        "containers",
                        "destinations",
                        "id",
                        "tentacleVersionDetails"
                    ]
                }
            }
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetEndpointAuthentication:KubernetesClusterDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetEndpointContainer:KubernetesClusterDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetEndpointDestination:KubernetesClusterDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetEndpointTentacleVersionDetail:KubernetesClusterDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "upgradeLocked",
                        "upgradeRequired",
                        "upgradeSuggested",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/KubernetesClusterDeploymentTargetGcpAccountAuthentication:KubernetesClusterDeploymentTargetGcpAccountAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "clusterName",
                "project"
            ]
        },
        "octopusdeploy:index/LibraryVariableSetTemplate:LibraryVariableSetTemplate": {
            "properties": {
                "defaultValue": {
                    "type": "string",
                    "description": "A default value for the parameter, if applicable. This can be a hard-coded value or a variable reference.\n"
                },
                "displaySettings": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "The display settings for the parameter.\n"
                },
                "helpText": {
                    "type": "string",
                    "description": "The help presented alongside the parameter input.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label shown beside the parameter when presented in the deployment process. Example: `Server name`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the variable set by the parameter. The name can contain letters, digits, dashes and periods. Example: `ServerName`.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name"
                    ]
                }
            }
        },
        "octopusdeploy:index/LifecyclePhase:LifecyclePhase": {
            "properties": {
                "automaticDeploymentTargets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs in this phase that a release is automatically deployed to when it is eligible for this phase\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isOptionalPhase": {
                    "type": "boolean",
                    "description": "If false a release must be deployed to this phase before it can be deployed to the next phase.\n"
                },
                "minimumEnvironmentsBeforePromotion": {
                    "type": "integer",
                    "description": "The number of units required before a release can enter the next phase. If 0, all environments are required.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "optionalDeploymentTargets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment IDs in this phase that a release can be deployed to, but is not automatically deployed to\n"
                },
                "releaseRetentionPolicy": {
                    "$ref": "#/types/octopusdeploy:index/LifecyclePhaseReleaseRetentionPolicy:LifecyclePhaseReleaseRetentionPolicy"
                },
                "tentacleRetentionPolicy": {
                    "$ref": "#/types/octopusdeploy:index/LifecyclePhaseTentacleRetentionPolicy:LifecyclePhaseTentacleRetentionPolicy"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name"
                    ]
                }
            }
        },
        "octopusdeploy:index/LifecyclePhaseReleaseRetentionPolicy:LifecyclePhaseReleaseRetentionPolicy": {
            "properties": {
                "quantityToKeep": {
                    "type": "integer",
                    "description": "The number of days/releases to keep. The default value is `30`. If `0` then all are kept.\n"
                },
                "shouldKeepForever": {
                    "type": "boolean",
                    "description": "Indicates if items should never be deleted. The default value is `false`.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of quantity to keep. Valid units are `Days` or `Items`. The default value is `Days`.\n"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/LifecyclePhaseTentacleRetentionPolicy:LifecyclePhaseTentacleRetentionPolicy": {
            "properties": {
                "quantityToKeep": {
                    "type": "integer",
                    "description": "The number of days/releases to keep. The default value is `30`. If `0` then all are kept.\n"
                },
                "shouldKeepForever": {
                    "type": "boolean",
                    "description": "Indicates if items should never be deleted. The default value is `false`.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of quantity to keep. Valid units are `Days` or `Items`. The default value is `Days`.\n"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/LifecycleReleaseRetentionPolicy:LifecycleReleaseRetentionPolicy": {
            "properties": {
                "quantityToKeep": {
                    "type": "integer",
                    "description": "The number of days/releases to keep. The default value is `30`. If `0` then all are kept.\n"
                },
                "shouldKeepForever": {
                    "type": "boolean",
                    "description": "Indicates if items should never be deleted. The default value is `false`.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of quantity to keep. Valid units are `Days` or `Items`. The default value is `Days`.\n"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/LifecycleTentacleRetentionPolicy:LifecycleTentacleRetentionPolicy": {
            "properties": {
                "quantityToKeep": {
                    "type": "integer",
                    "description": "The number of days/releases to keep. The default value is `30`. If `0` then all are kept.\n"
                },
                "shouldKeepForever": {
                    "type": "boolean",
                    "description": "Indicates if items should never be deleted. The default value is `false`.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of quantity to keep. Valid units are `Days` or `Items`. The default value is `Days`.\n"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/ListeningTentacleDeploymentTargetTentacleVersionDetail:ListeningTentacleDeploymentTargetTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "upgradeLocked",
                        "upgradeRequired",
                        "upgradeSuggested",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/MachinePolicyMachineCleanupPolicy:MachinePolicyMachineCleanupPolicy": {
            "properties": {
                "deleteMachinesBehavior": {
                    "type": "string"
                },
                "deleteMachinesElapsedTimespan": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deleteMachinesElapsedTimespan"
                    ]
                }
            }
        },
        "octopusdeploy:index/MachinePolicyMachineConnectivityPolicy:MachinePolicyMachineConnectivityPolicy": {
            "properties": {
                "machineConnectivityBehavior": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/MachinePolicyMachineHealthCheckPolicy:MachinePolicyMachineHealthCheckPolicy": {
            "properties": {
                "bashHealthCheckPolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineHealthCheckPolicyBashHealthCheckPolicy:MachinePolicyMachineHealthCheckPolicyBashHealthCheckPolicy"
                },
                "healthCheckCron": {
                    "type": "string"
                },
                "healthCheckCronTimezone": {
                    "type": "string"
                },
                "healthCheckInterval": {
                    "type": "integer"
                },
                "healthCheckType": {
                    "type": "string"
                },
                "powershellHealthCheckPolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineHealthCheckPolicyPowershellHealthCheckPolicy:MachinePolicyMachineHealthCheckPolicyPowershellHealthCheckPolicy"
                }
            },
            "type": "object",
            "required": [
                "bashHealthCheckPolicy",
                "powershellHealthCheckPolicy"
            ]
        },
        "octopusdeploy:index/MachinePolicyMachineHealthCheckPolicyBashHealthCheckPolicy:MachinePolicyMachineHealthCheckPolicyBashHealthCheckPolicy": {
            "properties": {
                "runType": {
                    "type": "string"
                },
                "scriptBody": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/MachinePolicyMachineHealthCheckPolicyPowershellHealthCheckPolicy:MachinePolicyMachineHealthCheckPolicyPowershellHealthCheckPolicy": {
            "properties": {
                "runType": {
                    "type": "string"
                },
                "scriptBody": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/MachinePolicyMachineUpdatePolicy:MachinePolicyMachineUpdatePolicy": {
            "properties": {
                "calamariUpdateBehavior": {
                    "type": "string"
                },
                "tentacleUpdateAccountId": {
                    "type": "string"
                },
                "tentacleUpdateBehavior": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/OfflinePackageDropDeploymentTargetDestination:OfflinePackageDropDeploymentTargetDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpoint:OfflinePackageDropDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpointAuthentication:OfflinePackageDropDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpointContainer:OfflinePackageDropDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpointDestination:OfflinePackageDropDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpointTentacleVersionDetail:OfflinePackageDropDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "communicationStyle"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authentication",
                        "communicationStyle",
                        "containers",
                        "destinations",
                        "id",
                        "tentacleVersionDetails"
                    ]
                }
            }
        },
        "octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpointAuthentication:OfflinePackageDropDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpointContainer:OfflinePackageDropDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpointDestination:OfflinePackageDropDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpointTentacleVersionDetail:OfflinePackageDropDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "upgradeLocked",
                        "upgradeRequired",
                        "upgradeSuggested",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/PollingTentacleDeploymentTargetEndpoint:PollingTentacleDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetEndpointAuthentication:PollingTentacleDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetEndpointContainer:PollingTentacleDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetEndpointDestination:PollingTentacleDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetEndpointTentacleVersionDetail:PollingTentacleDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "communicationStyle"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authentication",
                        "communicationStyle",
                        "containers",
                        "destinations",
                        "id",
                        "tentacleVersionDetails"
                    ]
                }
            }
        },
        "octopusdeploy:index/PollingTentacleDeploymentTargetEndpointAuthentication:PollingTentacleDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/PollingTentacleDeploymentTargetEndpointContainer:PollingTentacleDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/PollingTentacleDeploymentTargetEndpointDestination:PollingTentacleDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/PollingTentacleDeploymentTargetEndpointTentacleVersionDetail:PollingTentacleDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "upgradeLocked",
                        "upgradeRequired",
                        "upgradeSuggested",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/PollingTentacleDeploymentTargetTentacleVersionDetail:PollingTentacleDeploymentTargetTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "upgradeLocked",
                        "upgradeRequired",
                        "upgradeSuggested",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/ProjectConnectivityPolicy:ProjectConnectivityPolicy": {
            "properties": {
                "allowDeploymentsToNoTargets": {
                    "type": "boolean"
                },
                "excludeUnhealthyTargets": {
                    "type": "boolean"
                },
                "skipMachineBehavior": {
                    "type": "string"
                },
                "targetRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowDeploymentsToNoTargets",
                        "excludeUnhealthyTargets",
                        "targetRoles"
                    ]
                }
            }
        },
        "octopusdeploy:index/ProjectGitAnonymousPersistenceSettings:ProjectGitAnonymousPersistenceSettings": {
            "properties": {
                "basePath": {
                    "type": "string",
                    "description": "The base path associated with these version control settings.\n"
                },
                "defaultBranch": {
                    "type": "string",
                    "description": "The default branch associated with these version control settings.\n"
                },
                "protectedBranches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of protected branch patterns.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL associated with these version control settings.\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "octopusdeploy:index/ProjectGitLibraryPersistenceSettings:ProjectGitLibraryPersistenceSettings": {
            "properties": {
                "basePath": {
                    "type": "string",
                    "description": "The base path associated with these version control settings.\n"
                },
                "defaultBranch": {
                    "type": "string",
                    "description": "The default branch associated with these version control settings.\n"
                },
                "gitCredentialId": {
                    "type": "string"
                },
                "protectedBranches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of protected branch patterns.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL associated with these version control settings.\n"
                }
            },
            "type": "object",
            "required": [
                "gitCredentialId",
                "url"
            ]
        },
        "octopusdeploy:index/ProjectGitUsernamePasswordPersistenceSettings:ProjectGitUsernamePasswordPersistenceSettings": {
            "properties": {
                "basePath": {
                    "type": "string",
                    "description": "The base path associated with these version control settings.\n"
                },
                "defaultBranch": {
                    "type": "string",
                    "description": "The default branch associated with these version control settings.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the Git credential.\n",
                    "secret": true
                },
                "protectedBranches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of protected branch patterns.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL associated with these version control settings.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username for the Git credential.\n"
                }
            },
            "type": "object",
            "required": [
                "password",
                "url",
                "username"
            ]
        },
        "octopusdeploy:index/ProjectJiraServiceManagementExtensionSettings:ProjectJiraServiceManagementExtensionSettings": {
            "properties": {
                "connectionId": {
                    "type": "string",
                    "description": "The connection identifier associated with the extension settings.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether or not this extension is enabled for this project.\n"
                },
                "serviceDeskProjectName": {
                    "type": "string",
                    "description": "The project name associated with this extension.\n"
                }
            },
            "type": "object",
            "required": [
                "connectionId",
                "isEnabled",
                "serviceDeskProjectName"
            ]
        },
        "octopusdeploy:index/ProjectReleaseCreationStrategy:ProjectReleaseCreationStrategy": {
            "properties": {
                "channelId": {
                    "type": "string"
                },
                "releaseCreationPackage": {
                    "$ref": "#/types/octopusdeploy:index/ProjectReleaseCreationStrategyReleaseCreationPackage:ProjectReleaseCreationStrategyReleaseCreationPackage"
                },
                "releaseCreationPackageStepId": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "releaseCreationPackage"
                    ]
                }
            }
        },
        "octopusdeploy:index/ProjectReleaseCreationStrategyReleaseCreationPackage:ProjectReleaseCreationStrategyReleaseCreationPackage": {
            "properties": {
                "deploymentAction": {
                    "type": "string"
                },
                "packageReference": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/ProjectServicenowExtensionSettings:ProjectServicenowExtensionSettings": {
            "properties": {
                "connectionId": {
                    "type": "string",
                    "description": "The connection identifier associated with the extension settings.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether or not this extension is enabled for this project.\n"
                },
                "isStateAutomaticallyTransitioned": {
                    "type": "boolean",
                    "description": "Specifies whether or not this extension will automatically transition the state of a deployment for this project.\n"
                },
                "standardChangeTemplateName": {
                    "type": "string",
                    "description": "The name of the standard change template associated with this extension.\n"
                }
            },
            "type": "object",
            "required": [
                "connectionId",
                "isEnabled",
                "isStateAutomaticallyTransitioned",
                "standardChangeTemplateName"
            ]
        },
        "octopusdeploy:index/ProjectTemplate:ProjectTemplate": {
            "properties": {
                "defaultValue": {
                    "type": "string",
                    "description": "A default value for the parameter, if applicable. This can be a hard-coded value or a variable reference.\n"
                },
                "displaySettings": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "The display settings for the parameter.\n"
                },
                "helpText": {
                    "type": "string",
                    "description": "The help presented alongside the parameter input.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label shown beside the parameter when presented in the deployment process. Example: `Server name`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the variable set by the parameter. The name can contain letters, digits, dashes and periods. Example: `ServerName`.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name"
                    ]
                }
            }
        },
        "octopusdeploy:index/ProjectVersioningStrategy:ProjectVersioningStrategy": {
            "properties": {
                "donorPackage": {
                    "$ref": "#/types/octopusdeploy:index/ProjectVersioningStrategyDonorPackage:ProjectVersioningStrategyDonorPackage"
                },
                "donorPackageStepId": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "donorPackage",
                        "donorPackageStepId",
                        "template"
                    ]
                }
            }
        },
        "octopusdeploy:index/ProjectVersioningStrategyDonorPackage:ProjectVersioningStrategyDonorPackage": {
            "properties": {
                "deploymentAction": {
                    "type": "string"
                },
                "packageReference": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookConnectivityPolicy:RunbookConnectivityPolicy": {
            "properties": {
                "allowDeploymentsToNoTargets": {
                    "type": "boolean"
                },
                "excludeUnhealthyTargets": {
                    "type": "boolean"
                },
                "skipMachineBehavior": {
                    "type": "string"
                },
                "targetRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowDeploymentsToNoTargets",
                        "excludeUnhealthyTargets",
                        "targetRoles"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStep:RunbookProcessStep": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepAction:RunbookProcessStepAction"
                    }
                },
                "applyTerraformTemplateActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateAction:RunbookProcessStepApplyTerraformTemplateAction"
                    }
                },
                "condition": {
                    "type": "string",
                    "description": "When to run the step, one of 'Success', 'Failure', 'Always' or 'Variable'\n"
                },
                "conditionExpression": {
                    "type": "string",
                    "description": "The expression to evaluate to determine whether to run this step when 'condition' is 'Variable'\n"
                },
                "deployKubernetesSecretActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployKubernetesSecretAction:RunbookProcessStepDeployKubernetesSecretAction"
                    }
                },
                "deployPackageActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployPackageAction:RunbookProcessStepDeployPackageAction"
                    }
                },
                "deployWindowsServiceActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployWindowsServiceAction:RunbookProcessStepDeployWindowsServiceAction"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "manualInterventionActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepManualInterventionAction:RunbookProcessStepManualInterventionAction"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "packageRequirement": {
                    "type": "string",
                    "description": "Whether to run this step before or after package acquisition (if possible)\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "runKubectlScriptActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunKubectlScriptAction:RunbookProcessStepRunKubectlScriptAction"
                    }
                },
                "runScriptActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunScriptAction:RunbookProcessStepRunScriptAction"
                    }
                },
                "startTrigger": {
                    "type": "string",
                    "description": "Whether to run this step after the previous step ('StartAfterPrevious') or at the same time as the previous step ('StartWithPrevious')\n"
                },
                "targetRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The roles that this step run against, or runs on behalf of\n"
                },
                "windowSize": {
                    "type": "string",
                    "description": "The maximum number of targets to deploy to simultaneously\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "conditionExpression",
                        "id",
                        "name",
                        "properties",
                        "targetRoles"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepAction:RunbookProcessStepAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepActionActionTemplate:RunbookProcessStepActionActionTemplate"
                },
                "actionType": {
                    "type": "string"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "condition": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepActionContainer:RunbookProcessStepActionContainer"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepActionPackage:RunbookProcessStepActionPackage"
                    }
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepActionPrimaryPackage:RunbookProcessStepActionPrimaryPackage"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "runOnServer": {
                    "type": "boolean"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "workerPoolId": {
                    "type": "string"
                },
                "workerPoolVariable": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "actionType",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "actionType",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepActionActionTemplate:RunbookProcessStepActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this runbook process.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepActionContainer:RunbookProcessStepActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepActionPackage:RunbookProcessStepActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "extractDuringDeployment": {
                    "type": "boolean"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "extractDuringDeployment",
                        "id",
                        "name",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepActionPrimaryPackage:RunbookProcessStepActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateAction:RunbookProcessStepApplyTerraformTemplateAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionActionTemplate:RunbookProcessStepApplyTerraformTemplateActionActionTemplate"
                },
                "advancedOptions": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionAdvancedOptions:RunbookProcessStepApplyTerraformTemplateActionAdvancedOptions"
                },
                "awsAccount": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionAwsAccount:RunbookProcessStepApplyTerraformTemplateActionAwsAccount"
                },
                "azureAccount": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionAzureAccount:RunbookProcessStepApplyTerraformTemplateActionAzureAccount"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "condition": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionContainer:RunbookProcessStepApplyTerraformTemplateActionContainer"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "googleCloudAccount": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionGoogleCloudAccount:RunbookProcessStepApplyTerraformTemplateActionGoogleCloudAccount"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "inlineTemplate": {
                    "type": "string"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionPackage:RunbookProcessStepApplyTerraformTemplateActionPackage"
                    }
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionPrimaryPackage:RunbookProcessStepApplyTerraformTemplateActionPrimaryPackage"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "runOnServer": {
                    "type": "boolean"
                },
                "template": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionTemplate:RunbookProcessStepApplyTerraformTemplateActionTemplate"
                },
                "templateParameters": {
                    "type": "string"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "advancedOptions",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "advancedOptions",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionActionTemplate:RunbookProcessStepApplyTerraformTemplateActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this runbook process.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionAdvancedOptions:RunbookProcessStepApplyTerraformTemplateActionAdvancedOptions": {
            "properties": {
                "allowAdditionalPluginDownloads": {
                    "type": "boolean"
                },
                "applyParameters": {
                    "type": "string"
                },
                "initParameters": {
                    "type": "string"
                },
                "pluginCacheDirectory": {
                    "type": "string"
                },
                "workspace": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionAwsAccount:RunbookProcessStepApplyTerraformTemplateActionAwsAccount": {
            "properties": {
                "region": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionAwsAccountRole:RunbookProcessStepApplyTerraformTemplateActionAwsAccountRole"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "variable": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionAwsAccountRole:RunbookProcessStepApplyTerraformTemplateActionAwsAccountRole": {
            "properties": {
                "arn": {
                    "type": "string"
                },
                "externalId": {
                    "type": "string"
                },
                "roleSessionName": {
                    "type": "string"
                },
                "sessionDuration": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionAzureAccount:RunbookProcessStepApplyTerraformTemplateActionAzureAccount": {
            "properties": {
                "variable": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionContainer:RunbookProcessStepApplyTerraformTemplateActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionGoogleCloudAccount:RunbookProcessStepApplyTerraformTemplateActionGoogleCloudAccount": {
            "properties": {
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "variable": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionPackage:RunbookProcessStepApplyTerraformTemplateActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionPrimaryPackage:RunbookProcessStepApplyTerraformTemplateActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepApplyTerraformTemplateActionTemplate:RunbookProcessStepApplyTerraformTemplateActionTemplate": {
            "properties": {
                "additionalVariableFiles": {
                    "type": "string"
                },
                "directory": {
                    "type": "string"
                },
                "runAutomaticFileSubstitution": {
                    "type": "boolean"
                },
                "targetFiles": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepDeployKubernetesSecretAction:RunbookProcessStepDeployKubernetesSecretAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployKubernetesSecretActionActionTemplate:RunbookProcessStepDeployKubernetesSecretActionActionTemplate"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "condition": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployKubernetesSecretActionContainer:RunbookProcessStepDeployKubernetesSecretActionContainer"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployKubernetesSecretActionPackage:RunbookProcessStepDeployKubernetesSecretActionPackage"
                    }
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "runOnServer": {
                    "type": "boolean"
                },
                "secretName": {
                    "type": "string"
                },
                "secretValues": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "secretName",
                "secretValues"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "id",
                        "name",
                        "packages",
                        "properties",
                        "secretName",
                        "secretValues",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployKubernetesSecretActionActionTemplate:RunbookProcessStepDeployKubernetesSecretActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this runbook process.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployKubernetesSecretActionContainer:RunbookProcessStepDeployKubernetesSecretActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepDeployKubernetesSecretActionPackage:RunbookProcessStepDeployKubernetesSecretActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployPackageAction:RunbookProcessStepDeployPackageAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployPackageActionActionTemplate:RunbookProcessStepDeployPackageActionActionTemplate"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "condition": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployPackageActionContainer:RunbookProcessStepDeployPackageActionContainer"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployPackageActionPackage:RunbookProcessStepDeployPackageActionPackage"
                    }
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployPackageActionPrimaryPackage:RunbookProcessStepDeployPackageActionPrimaryPackage"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "windowsService": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployPackageActionWindowsService:RunbookProcessStepDeployPackageActionWindowsService"
                }
            },
            "type": "object",
            "required": [
                "name",
                "primaryPackage"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployPackageActionActionTemplate:RunbookProcessStepDeployPackageActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this runbook process.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployPackageActionContainer:RunbookProcessStepDeployPackageActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepDeployPackageActionPackage:RunbookProcessStepDeployPackageActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployPackageActionPrimaryPackage:RunbookProcessStepDeployPackageActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployPackageActionWindowsService:RunbookProcessStepDeployPackageActionWindowsService": {
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "createOrUpdateService": {
                    "type": "boolean"
                },
                "customAccountName": {
                    "type": "string"
                },
                "customAccountPassword": {
                    "type": "string",
                    "secret": true
                },
                "dependencies": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "executablePath": {
                    "type": "string"
                },
                "serviceAccount": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "startMode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "executablePath",
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createOrUpdateService",
                        "customAccountPassword",
                        "executablePath",
                        "serviceName"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployWindowsServiceAction:RunbookProcessStepDeployWindowsServiceAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployWindowsServiceActionActionTemplate:RunbookProcessStepDeployWindowsServiceActionActionTemplate"
                },
                "arguments": {
                    "type": "string"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "condition": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployWindowsServiceActionContainer:RunbookProcessStepDeployWindowsServiceActionContainer"
                    }
                },
                "createOrUpdateService": {
                    "type": "boolean"
                },
                "customAccountName": {
                    "type": "string"
                },
                "customAccountPassword": {
                    "type": "string",
                    "secret": true
                },
                "dependencies": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "executablePath": {
                    "type": "string"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployWindowsServiceActionPackage:RunbookProcessStepDeployWindowsServiceActionPackage"
                    }
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepDeployWindowsServiceActionPrimaryPackage:RunbookProcessStepDeployWindowsServiceActionPrimaryPackage"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "serviceAccount": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "startMode": {
                    "type": "string"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "executablePath",
                "name",
                "primaryPackage",
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "createOrUpdateService",
                        "customAccountPassword",
                        "environments",
                        "excludedEnvironments",
                        "executablePath",
                        "features",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "serviceName",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployWindowsServiceActionActionTemplate:RunbookProcessStepDeployWindowsServiceActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this runbook process.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployWindowsServiceActionContainer:RunbookProcessStepDeployWindowsServiceActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepDeployWindowsServiceActionPackage:RunbookProcessStepDeployWindowsServiceActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepDeployWindowsServiceActionPrimaryPackage:RunbookProcessStepDeployWindowsServiceActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepManualInterventionAction:RunbookProcessStepManualInterventionAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepManualInterventionActionActionTemplate:RunbookProcessStepManualInterventionActionActionTemplate"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "condition": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepManualInterventionActionContainer:RunbookProcessStepManualInterventionActionContainer"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "instructions": {
                    "type": "string"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepManualInterventionActionPackage:RunbookProcessStepManualInterventionActionPackage"
                    }
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "responsibleTeams": {
                    "type": "string"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "instructions",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "id",
                        "instructions",
                        "name",
                        "packages",
                        "properties",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepManualInterventionActionActionTemplate:RunbookProcessStepManualInterventionActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this runbook process.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepManualInterventionActionContainer:RunbookProcessStepManualInterventionActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepManualInterventionActionPackage:RunbookProcessStepManualInterventionActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepRunKubectlScriptAction:RunbookProcessStepRunKubectlScriptAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunKubectlScriptActionActionTemplate:RunbookProcessStepRunKubectlScriptActionActionTemplate"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "condition": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunKubectlScriptActionContainer:RunbookProcessStepRunKubectlScriptActionContainer"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunKubectlScriptActionPackage:RunbookProcessStepRunKubectlScriptActionPackage"
                    }
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunKubectlScriptActionPrimaryPackage:RunbookProcessStepRunKubectlScriptActionPrimaryPackage"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "runOnServer": {
                    "type": "boolean"
                },
                "scriptFileName": {
                    "type": "string"
                },
                "scriptParameters": {
                    "type": "string"
                },
                "scriptSource": {
                    "type": "string"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "scriptSource",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepRunKubectlScriptActionActionTemplate:RunbookProcessStepRunKubectlScriptActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this runbook process.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepRunKubectlScriptActionContainer:RunbookProcessStepRunKubectlScriptActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepRunKubectlScriptActionPackage:RunbookProcessStepRunKubectlScriptActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "extractDuringDeployment": {
                    "type": "boolean"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "extractDuringDeployment",
                        "id",
                        "name",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepRunKubectlScriptActionPrimaryPackage:RunbookProcessStepRunKubectlScriptActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepRunScriptAction:RunbookProcessStepRunScriptAction": {
            "properties": {
                "actionTemplate": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunScriptActionActionTemplate:RunbookProcessStepRunScriptActionActionTemplate"
                },
                "canBeUsedForProjectVersioning": {
                    "type": "boolean"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "condition": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunScriptActionContainer:RunbookProcessStepRunScriptActionContainer"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedEnvironments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunScriptActionPackage:RunbookProcessStepRunScriptActionPackage"
                    }
                },
                "primaryPackage": {
                    "$ref": "#/types/octopusdeploy:index/RunbookProcessStepRunScriptActionPrimaryPackage:RunbookProcessStepRunScriptActionPrimaryPackage"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "deprecationMessage": "This attribute is deprecated and will be removed in a future release. Please use the attributes that match the properties that are stored to this map."
                },
                "runOnServer": {
                    "type": "boolean"
                },
                "scriptBody": {
                    "type": "string"
                },
                "scriptFileName": {
                    "type": "string"
                },
                "scriptParameters": {
                    "type": "string"
                },
                "scriptSource": {
                    "type": "string"
                },
                "scriptSyntax": {
                    "type": "string"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "variableSubstitutionInFiles": {
                    "type": "string"
                },
                "workerPoolId": {
                    "type": "string"
                },
                "workerPoolVariable": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actionTemplate",
                        "canBeUsedForProjectVersioning",
                        "channels",
                        "condition",
                        "containers",
                        "environments",
                        "excludedEnvironments",
                        "features",
                        "id",
                        "name",
                        "packages",
                        "primaryPackage",
                        "properties",
                        "scriptSource",
                        "scriptSyntax",
                        "tenantTags"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepRunScriptActionActionTemplate:RunbookProcessStepRunScriptActionActionTemplate": {
            "properties": {
                "communityActionTemplateId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this runbook process.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "communityActionTemplateId",
                        "id",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepRunScriptActionContainer:RunbookProcessStepRunScriptActionContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/RunbookProcessStepRunScriptActionPackage:RunbookProcessStepRunScriptActionPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "extractDuringDeployment": {
                    "type": "boolean"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "extractDuringDeployment",
                        "id",
                        "name",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookProcessStepRunScriptActionPrimaryPackage:RunbookProcessStepRunScriptActionPrimaryPackage": {
            "properties": {
                "acquisitionLocation": {
                    "type": "string"
                },
                "feedId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "packageId": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "packageId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "packageId",
                        "properties"
                    ]
                }
            }
        },
        "octopusdeploy:index/RunbookRetentionPolicy:RunbookRetentionPolicy": {
            "properties": {
                "quantityToKeep": {
                    "type": "integer",
                    "description": "How many runs to keep per environment.\n"
                },
                "shouldKeepForever": {
                    "type": "boolean",
                    "description": "Indicates if items should never be deleted. The default value is `false`.\n"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/ScriptModuleScript:ScriptModuleScript": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "The body of this script module.\n"
                },
                "syntax": {
                    "type": "string",
                    "description": "The syntax of the script. Valid types are `Bash`, `CSharp`, `FSharp`, `PowerShell`, or `Python`.\n"
                }
            },
            "type": "object",
            "required": [
                "body",
                "syntax"
            ]
        },
        "octopusdeploy:index/SshConnectionDeploymentTargetEndpoint:SshConnectionDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/SshConnectionDeploymentTargetEndpointAuthentication:SshConnectionDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/SshConnectionDeploymentTargetEndpointContainer:SshConnectionDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/SshConnectionDeploymentTargetEndpointDestination:SshConnectionDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/SshConnectionDeploymentTargetEndpointTentacleVersionDetail:SshConnectionDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "communicationStyle"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authentication",
                        "communicationStyle",
                        "containers",
                        "destinations",
                        "id",
                        "tentacleVersionDetails"
                    ]
                }
            }
        },
        "octopusdeploy:index/SshConnectionDeploymentTargetEndpointAuthentication:SshConnectionDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/SshConnectionDeploymentTargetEndpointContainer:SshConnectionDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/SshConnectionDeploymentTargetEndpointDestination:SshConnectionDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/SshConnectionDeploymentTargetEndpointTentacleVersionDetail:SshConnectionDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "upgradeLocked",
                        "upgradeRequired",
                        "upgradeSuggested",
                        "version"
                    ]
                }
            }
        },
        "octopusdeploy:index/TeamExternalSecurityGroup:TeamExternalSecurityGroup": {
            "properties": {
                "displayIdAndName": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayIdAndName",
                        "displayName",
                        "id"
                    ]
                }
            }
        },
        "octopusdeploy:index/TeamUserRole:TeamUserRole": {
            "properties": {
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "projectGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "projectIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space associated with this team.\n"
                },
                "teamId": {
                    "type": "string"
                },
                "tenantIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userRoleId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "spaceId",
                "userRoleId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "spaceId",
                        "teamId",
                        "userRoleId"
                    ]
                }
            }
        },
        "octopusdeploy:index/TenantProjectEnvironment:TenantProjectEnvironment": {
            "properties": {
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this tenant through a project.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID associated with this tenant.\n"
                }
            },
            "type": "object",
            "required": [
                "environments",
                "projectId"
            ]
        },
        "octopusdeploy:index/UserIdentity:UserIdentity": {
            "properties": {
                "claims": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/UserIdentityClaim:UserIdentityClaim"
                    }
                },
                "provider": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/UserIdentityClaim:UserIdentityClaim": {
            "properties": {
                "isIdentifyingClaim": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "isIdentifyingClaim",
                "name",
                "value"
            ]
        },
        "octopusdeploy:index/VariablePrompt:VariablePrompt": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this variable prompt option.\n"
                },
                "displaySettings": {
                    "$ref": "#/types/octopusdeploy:index/VariablePromptDisplaySettings:VariablePromptDisplaySettings"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/VariablePromptDisplaySettings:VariablePromptDisplaySettings": {
            "properties": {
                "controlType": {
                    "type": "string"
                },
                "selectOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/VariablePromptDisplaySettingsSelectOption:VariablePromptDisplaySettingsSelectOption"
                    }
                }
            },
            "type": "object",
            "required": [
                "controlType"
            ]
        },
        "octopusdeploy:index/VariablePromptDisplaySettingsSelectOption:VariablePromptDisplaySettingsSelectOption": {
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "value"
            ]
        },
        "octopusdeploy:index/VariableScope:VariableScope": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of actions that are scoped to this variable value.\n"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of channels that are scoped to this variable value.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environments that are scoped to this variable value.\n"
                },
                "machines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of machines that are scoped to this variable value.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of roles that are scoped to this variable value.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags that are scoped to this variable value.\n"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getAccountsAccount:getAccountsAccount": {
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "accountType": {
                    "type": "string",
                    "description": "A filter to search by a list of account types.  Valid account types are `AmazonWebServicesAccount`, `AmazonWebServicesRoleAccount`, `AzureServicePrincipal`, `AzureSubscription`, `None`, `SshKeyPair`, `Token`, or `UsernamePassword`.\n"
                },
                "activeDirectoryEndpointBaseUri": {
                    "type": "string"
                },
                "applicationId": {
                    "type": "string"
                },
                "authenticationEndpoint": {
                    "type": "string"
                },
                "azureEnvironment": {
                    "type": "string"
                },
                "certificateData": {
                    "type": "string",
                    "secret": true
                },
                "certificateThumbprint": {
                    "type": "string",
                    "secret": true
                },
                "clientSecret": {
                    "type": "string",
                    "secret": true
                },
                "description": {
                    "type": "string"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "privateKeyFile": {
                    "type": "string",
                    "secret": true
                },
                "privateKeyPassphrase": {
                    "type": "string",
                    "secret": true
                },
                "resourceManagerEndpoint": {
                    "type": "string"
                },
                "secretKey": {
                    "type": "string",
                    "secret": true
                },
                "serviceManagementEndpointBaseUri": {
                    "type": "string"
                },
                "serviceManagementEndpointSuffix": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string"
                },
                "subscriptionId": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tenantedDeploymentParticipation": {
                    "type": "string"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "token": {
                    "type": "string",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "accountType",
                "activeDirectoryEndpointBaseUri",
                "applicationId",
                "authenticationEndpoint",
                "azureEnvironment",
                "certificateData",
                "certificateThumbprint",
                "clientSecret",
                "description",
                "environments",
                "id",
                "name",
                "password",
                "privateKeyFile",
                "privateKeyPassphrase",
                "resourceManagerEndpoint",
                "secretKey",
                "serviceManagementEndpointBaseUri",
                "serviceManagementEndpointSuffix",
                "spaceId",
                "subscriptionId",
                "tenantId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "token",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTarget:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTarget": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpoint:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "A filter to search by the disabled status of a resource.\n"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A filter to search by a list of role IDs.\n"
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "slot": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "cloudServiceName",
                "defaultWorkerPoolId",
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "slot",
                "spaceId",
                "status",
                "statusSummary",
                "storageAccountName",
                "swapIfPossible",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri",
                "useCurrentInstanceCount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpoint:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointAuthentication:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointContainer:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointDestination:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointTentacleVersionDetail:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "communicationStyle",
                "containers",
                "destinations",
                "id",
                "tentacleVersionDetails"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "communicationStyle"
                    ]
                }
            }
        },
        "octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointAuthentication:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointContainer:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointDestination:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointTentacleVersionDetail:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTarget:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTarget": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialPassword": {
                    "type": "string",
                    "secret": true
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpoint:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "A filter to search by the disabled status of a resource.\n"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A filter to search by a list of role IDs.\n"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                },
                "uri": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "aadClientCredentialSecret",
                "aadCredentialType",
                "aadUserCredentialPassword",
                "aadUserCredentialUsername",
                "certificateStoreLocation",
                "certificateStoreName",
                "clientCertificateVariable",
                "connectionEndpoint",
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "securityMode",
                "serverCertificateThumbprint",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpoint:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointAuthentication:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointContainer:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointDestination:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointTentacleVersionDetail:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "communicationStyle",
                "containers",
                "destinations",
                "id",
                "tentacleVersionDetails"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "communicationStyle"
                    ]
                }
            }
        },
        "octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointAuthentication:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointContainer:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointDestination:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointTentacleVersionDetail:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTarget:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTarget": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpoint:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "A filter to search by the disabled status of a resource.\n"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A filter to search by a list of role IDs.\n"
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                },
                "uri": {
                    "type": "string"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "resourceGroupName",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri",
                "webAppName",
                "webAppSlotName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpoint:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointAuthentication:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointContainer:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointDestination:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointTentacleVersionDetail:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "communicationStyle",
                "containers",
                "destinations",
                "id",
                "tentacleVersionDetails"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "communicationStyle"
                    ]
                }
            }
        },
        "octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointAuthentication:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointContainer:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointDestination:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointTentacleVersionDetail:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getCertificatesCertificate:getCertificatesCertificate": {
            "properties": {
                "archived": {
                    "type": "string",
                    "description": "A filter to search for resources that have been archived.\n"
                },
                "certificateData": {
                    "type": "string",
                    "description": "The encoded data of the certificate.\n",
                    "secret": true
                },
                "certificateDataFormat": {
                    "type": "string",
                    "description": "Specifies the archive file format used for storing cryptography objects in the certificate. Valid formats are `Der`, `Pem`, `Pkcs12`, or `Unknown`.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasPrivateKey": {
                    "type": "boolean",
                    "description": "Indicates if the certificate has a private key.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isExpired": {
                    "type": "boolean",
                    "description": "Indicates if the certificate has expired.\n"
                },
                "issuerCommonName": {
                    "type": "string"
                },
                "issuerDistinguishedName": {
                    "type": "string"
                },
                "issuerOrganization": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notAfter": {
                    "type": "string"
                },
                "notBefore": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "replacedBy": {
                    "type": "string"
                },
                "selfSigned": {
                    "type": "boolean"
                },
                "serialNumber": {
                    "type": "string"
                },
                "signatureAlgorithmName": {
                    "type": "string"
                },
                "subjectAlternativeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subjectCommonName": {
                    "type": "string"
                },
                "subjectDistinguishedName": {
                    "type": "string"
                },
                "subjectOrganization": {
                    "type": "string"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "archived",
                "certificateData",
                "certificateDataFormat",
                "environments",
                "hasPrivateKey",
                "id",
                "isExpired",
                "issuerCommonName",
                "issuerDistinguishedName",
                "issuerOrganization",
                "name",
                "notAfter",
                "notBefore",
                "notes",
                "password",
                "replacedBy",
                "selfSigned",
                "serialNumber",
                "signatureAlgorithmName",
                "subjectAlternativeNames",
                "subjectCommonName",
                "subjectDistinguishedName",
                "subjectOrganization",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getChannelsChannel:getChannelsChannel": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this channel.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Indicates if this is the default channel for the associated project.\n"
                },
                "lifecycleId": {
                    "type": "string",
                    "description": "The lifecycle ID associated with this channel.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID associated with this channel.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getChannelsChannelRule:getChannelsChannelRule"
                    },
                    "description": "A list of rules associated with this channel.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "isDefault",
                "lifecycleId",
                "name",
                "projectId",
                "rules",
                "spaceId",
                "tenantTags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getChannelsChannelRule:getChannelsChannelRule": {
            "properties": {
                "actionPackages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getChannelsChannelRuleActionPackage:getChannelsChannelRuleActionPackage"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "tag": {
                    "type": "string"
                },
                "versionRange": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "actionPackages",
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "actionPackages"
                    ]
                }
            }
        },
        "octopusdeploy:index/getChannelsChannelRuleActionPackage:getChannelsChannelRuleActionPackage": {
            "properties": {
                "deploymentAction": {
                    "type": "string"
                },
                "packageReference": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getCloudRegionDeploymentTargetsCloudRegionDeploymentTarget:getCloudRegionDeploymentTargetsCloudRegionDeploymentTarget": {
            "properties": {
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "A filter to search by the disabled status of a resource.\n"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A filter to search by a list of role IDs.\n"
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                },
                "uri": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "defaultWorkerPoolId",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getDeploymentTargetsDeploymentTarget:getDeploymentTargetsDeploymentTarget": {
            "properties": {
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpoint:getDeploymentTargetsDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "A filter to search by the disabled status of a resource.\n"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A filter to search by a list of role IDs.\n"
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                },
                "uri": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpoint:getDeploymentTargetsDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpointAuthentication:getDeploymentTargetsDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpointContainer:getDeploymentTargetsDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpointDestination:getDeploymentTargetsDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpointTentacleVersionDetail:getDeploymentTargetsDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "communicationStyle",
                "containers",
                "destinations",
                "id",
                "tentacleVersionDetails"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "communicationStyle"
                    ]
                }
            }
        },
        "octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpointAuthentication:getDeploymentTargetsDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpointContainer:getDeploymentTargetsDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpointDestination:getDeploymentTargetsDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getDeploymentTargetsDeploymentTargetEndpointTentacleVersionDetail:getDeploymentTargetsDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getEnvironmentsEnvironment:getEnvironmentsEnvironment": {
            "properties": {
                "allowDynamicInfrastructure": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this environment.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "jiraExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getEnvironmentsEnvironmentJiraExtensionSetting:getEnvironmentsEnvironmentJiraExtensionSetting"
                    },
                    "description": "Provides extension settings for the Jira integration for this environment.\n"
                },
                "jiraServiceManagementExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getEnvironmentsEnvironmentJiraServiceManagementExtensionSetting:getEnvironmentsEnvironmentJiraServiceManagementExtensionSetting"
                    },
                    "description": "Provides extension settings for the Jira Service Management (JSM) integration for this environment.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "servicenowExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getEnvironmentsEnvironmentServicenowExtensionSetting:getEnvironmentsEnvironmentServicenowExtensionSetting"
                    },
                    "description": "Provides extension settings for the ServiceNow integration for this environment.\n"
                },
                "slug": {
                    "type": "string"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The order number to sort an environment.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this environment.\n"
                },
                "useGuidedFailure": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "allowDynamicInfrastructure",
                "description",
                "id",
                "jiraExtensionSettings",
                "jiraServiceManagementExtensionSettings",
                "name",
                "servicenowExtensionSettings",
                "slug",
                "sortOrder",
                "spaceId",
                "useGuidedFailure"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getEnvironmentsEnvironmentJiraExtensionSetting:getEnvironmentsEnvironmentJiraExtensionSetting": {
            "properties": {
                "environmentType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "environmentType"
            ]
        },
        "octopusdeploy:index/getEnvironmentsEnvironmentJiraServiceManagementExtensionSetting:getEnvironmentsEnvironmentJiraServiceManagementExtensionSetting": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "isEnabled"
            ]
        },
        "octopusdeploy:index/getEnvironmentsEnvironmentServicenowExtensionSetting:getEnvironmentsEnvironmentServicenowExtensionSetting": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "isEnabled"
            ]
        },
        "octopusdeploy:index/getFeedsFeed:getFeedsFeed": {
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "apiVersion": {
                    "type": "string"
                },
                "deleteUnreleasedPackagesAfterDays": {
                    "type": "integer"
                },
                "downloadAttempts": {
                    "type": "integer",
                    "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                },
                "downloadRetryBackoffSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                },
                "feedType": {
                    "type": "string",
                    "description": "A filter to search by feed type. Valid feed types are `AwsElasticContainerRegistry`, `BuiltIn`, `Docker`, `GitHub`, `Helm`, `Maven`, `NuGet`, or `OctopusProject`.\n"
                },
                "feedUri": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isEnhancedMode": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "A short, memorable, unique name for this feed. Example: ACME Builds.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "region": {
                    "type": "string"
                },
                "registryPath": {
                    "type": "string"
                },
                "secretKey": {
                    "type": "string",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "apiVersion",
                "deleteUnreleasedPackagesAfterDays",
                "downloadAttempts",
                "downloadRetryBackoffSeconds",
                "feedType",
                "feedUri",
                "id",
                "isEnhancedMode",
                "name",
                "packageAcquisitionLocationOptions",
                "password",
                "region",
                "registryPath",
                "secretKey",
                "spaceId",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getGitCredentialsGitCredential:getGitCredentialsGitCredential": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this Git credential.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Git credential. This name must be unique.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the Git credential.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username for the Git credential.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "password",
                "spaceId",
                "type",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTarget:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTarget": {
            "properties": {
                "authentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAuthentication"
                    }
                },
                "awsAccountAuthentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAwsAccountAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAwsAccountAuthentication"
                    }
                },
                "azureServicePrincipalAuthentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication"
                    }
                },
                "certificateAuthentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetCertificateAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetCertificateAuthentication"
                    }
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetContainer:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpoint:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "gcpAccountAuthentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetGcpAccountAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetGcpAccountAuthentication"
                    }
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "A filter to search by the disabled status of a resource.\n"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "proxyId": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A filter to search by a list of role IDs.\n"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                },
                "uri": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentications",
                "awsAccountAuthentications",
                "azureServicePrincipalAuthentications",
                "certificateAuthentications",
                "clusterCertificate",
                "clusterUrl",
                "containers",
                "defaultWorkerPoolId",
                "endpoints",
                "environments",
                "gcpAccountAuthentications",
                "hasLatestCalamari",
                "healthStatus",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "namespace",
                "operatingSystem",
                "proxyId",
                "roles",
                "runningInContainer",
                "shellName",
                "shellVersion",
                "skipTlsVerification",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAwsAccountAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAwsAccountAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "clusterName"
            ]
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "clusterName",
                "clusterResourceGroup"
            ]
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetCertificateAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetCertificateAuthentication": {
            "properties": {
                "clientCertificate": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetContainer:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpoint:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointContainer:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointDestination:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointTentacleVersionDetail:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "communicationStyle",
                "containers",
                "destinations",
                "id",
                "tentacleVersionDetails"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "communicationStyle"
                    ]
                }
            }
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointContainer:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointDestination:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointTentacleVersionDetail:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetGcpAccountAuthentication:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTargetGcpAccountAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "clusterName",
                "project"
            ]
        },
        "octopusdeploy:index/getLibraryVariableSetsLibraryVariableSet:getLibraryVariableSetsLibraryVariableSet": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this library variable set.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getLibraryVariableSetsLibraryVariableSetTemplate:getLibraryVariableSetsLibraryVariableSetTemplate"
                    }
                },
                "variableSetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "spaceId",
                "templates",
                "variableSetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getLibraryVariableSetsLibraryVariableSetTemplate:getLibraryVariableSetsLibraryVariableSetTemplate": {
            "properties": {
                "defaultValue": {
                    "type": "string"
                },
                "displaySettings": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "helpText": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "name"
                    ]
                }
            }
        },
        "octopusdeploy:index/getLifecyclesLifecycle:getLifecyclesLifecycle": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this lifecycle.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "phases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getLifecyclesLifecyclePhase:getLifecyclesLifecyclePhase"
                    }
                },
                "releaseRetentionPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getLifecyclesLifecycleReleaseRetentionPolicy:getLifecyclesLifecycleReleaseRetentionPolicy"
                    }
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tentacleRetentionPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getLifecyclesLifecycleTentacleRetentionPolicy:getLifecyclesLifecycleTentacleRetentionPolicy"
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "phases",
                "releaseRetentionPolicies",
                "spaceId",
                "tentacleRetentionPolicies"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getLifecyclesLifecyclePhase:getLifecyclesLifecyclePhase": {
            "properties": {
                "automaticDeploymentTargets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "isOptionalPhase": {
                    "type": "boolean"
                },
                "minimumEnvironmentsBeforePromotion": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "optionalDeploymentTargets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "releaseRetentionPolicy": {
                    "$ref": "#/types/octopusdeploy:index/getLifecyclesLifecyclePhaseReleaseRetentionPolicy:getLifecyclesLifecyclePhaseReleaseRetentionPolicy"
                },
                "tentacleRetentionPolicy": {
                    "$ref": "#/types/octopusdeploy:index/getLifecyclesLifecyclePhaseTentacleRetentionPolicy:getLifecyclesLifecyclePhaseTentacleRetentionPolicy"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "name"
                    ]
                }
            }
        },
        "octopusdeploy:index/getLifecyclesLifecyclePhaseReleaseRetentionPolicy:getLifecyclesLifecyclePhaseReleaseRetentionPolicy": {
            "properties": {
                "quantityToKeep": {
                    "type": "integer"
                },
                "shouldKeepForever": {
                    "type": "boolean"
                },
                "unit": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getLifecyclesLifecyclePhaseTentacleRetentionPolicy:getLifecyclesLifecyclePhaseTentacleRetentionPolicy": {
            "properties": {
                "quantityToKeep": {
                    "type": "integer"
                },
                "shouldKeepForever": {
                    "type": "boolean"
                },
                "unit": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getLifecyclesLifecycleReleaseRetentionPolicy:getLifecyclesLifecycleReleaseRetentionPolicy": {
            "properties": {
                "quantityToKeep": {
                    "type": "integer"
                },
                "shouldKeepForever": {
                    "type": "boolean"
                },
                "unit": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getLifecyclesLifecycleTentacleRetentionPolicy:getLifecyclesLifecycleTentacleRetentionPolicy": {
            "properties": {
                "quantityToKeep": {
                    "type": "integer"
                },
                "shouldKeepForever": {
                    "type": "boolean"
                },
                "unit": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getListeningTentacleDeploymentTargetsListeningTentacleDeploymentTarget:getListeningTentacleDeploymentTargetsListeningTentacleDeploymentTarget": {
            "properties": {
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this listening tentacle.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Represents the disabled status of this deployment target.\n"
                },
                "isInProcess": {
                    "type": "boolean",
                    "description": "Represents the in-process status of this deployment target.\n"
                },
                "machinePolicyId": {
                    "type": "string",
                    "description": "The machine policy ID that is associated with this deployment target.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string",
                    "description": "The operating system that is associated with this deployment target.\n"
                },
                "proxyId": {
                    "type": "string",
                    "description": "The proxy ID that is associated with this deployment target.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role IDs that are associated with this deployment target.\n"
                },
                "shellName": {
                    "type": "string",
                    "description": "The shell name associated with this deployment target.\n"
                },
                "shellVersion": {
                    "type": "string",
                    "description": "The shell version associated with this deployment target.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "tentacleUrl": {
                    "type": "string",
                    "description": "The tenant URL of this deployment target.\n"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getListeningTentacleDeploymentTargetsListeningTentacleDeploymentTargetTentacleVersionDetail:getListeningTentacleDeploymentTargetsListeningTentacleDeploymentTargetTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of this deployment target.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "The URI of this deployment target.\n"
                }
            },
            "type": "object",
            "required": [
                "certificateSignatureAlgorithm",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "proxyId",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "tentacleUrl",
                "tentacleVersionDetails",
                "thumbprint",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getListeningTentacleDeploymentTargetsListeningTentacleDeploymentTargetTentacleVersionDetail:getListeningTentacleDeploymentTargetsListeningTentacleDeploymentTargetTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getMachinePoliciesMachinePolicy:getMachinePoliciesMachinePolicy": {
            "properties": {
                "connectionConnectTimeout": {
                    "type": "integer"
                },
                "connectionRetryCountLimit": {
                    "type": "integer"
                },
                "connectionRetrySleepInterval": {
                    "type": "integer"
                },
                "connectionRetryTimeLimit": {
                    "type": "integer"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this machine policy.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "machineCleanupPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getMachinePoliciesMachinePolicyMachineCleanupPolicy:getMachinePoliciesMachinePolicyMachineCleanupPolicy"
                    }
                },
                "machineConnectivityPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getMachinePoliciesMachinePolicyMachineConnectivityPolicy:getMachinePoliciesMachinePolicyMachineConnectivityPolicy"
                    }
                },
                "machineHealthCheckPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getMachinePoliciesMachinePolicyMachineHealthCheckPolicy:getMachinePoliciesMachinePolicyMachineHealthCheckPolicy"
                    }
                },
                "machineUpdatePolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getMachinePoliciesMachinePolicyMachineUpdatePolicy:getMachinePoliciesMachinePolicyMachineUpdatePolicy"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "pollingRequestMaximumMessageProcessingTimeout": {
                    "type": "integer"
                },
                "pollingRequestQueueTimeout": {
                    "type": "integer"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                }
            },
            "type": "object",
            "required": [
                "connectionConnectTimeout",
                "connectionRetryCountLimit",
                "connectionRetrySleepInterval",
                "connectionRetryTimeLimit",
                "description",
                "id",
                "isDefault",
                "machineCleanupPolicies",
                "machineConnectivityPolicies",
                "machineHealthCheckPolicies",
                "machineUpdatePolicies",
                "name",
                "pollingRequestMaximumMessageProcessingTimeout",
                "pollingRequestQueueTimeout",
                "spaceId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getMachinePoliciesMachinePolicyMachineCleanupPolicy:getMachinePoliciesMachinePolicyMachineCleanupPolicy": {
            "properties": {
                "deleteMachinesBehavior": {
                    "type": "string"
                },
                "deleteMachinesElapsedTimespan": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "deleteMachinesElapsedTimespan"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getMachinePoliciesMachinePolicyMachineConnectivityPolicy:getMachinePoliciesMachinePolicyMachineConnectivityPolicy": {
            "properties": {
                "machineConnectivityBehavior": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getMachinePoliciesMachinePolicyMachineHealthCheckPolicy:getMachinePoliciesMachinePolicyMachineHealthCheckPolicy": {
            "properties": {
                "bashHealthCheckPolicy": {
                    "$ref": "#/types/octopusdeploy:index/getMachinePoliciesMachinePolicyMachineHealthCheckPolicyBashHealthCheckPolicy:getMachinePoliciesMachinePolicyMachineHealthCheckPolicyBashHealthCheckPolicy"
                },
                "healthCheckCron": {
                    "type": "string"
                },
                "healthCheckCronTimezone": {
                    "type": "string"
                },
                "healthCheckInterval": {
                    "type": "integer"
                },
                "healthCheckType": {
                    "type": "string"
                },
                "powershellHealthCheckPolicy": {
                    "$ref": "#/types/octopusdeploy:index/getMachinePoliciesMachinePolicyMachineHealthCheckPolicyPowershellHealthCheckPolicy:getMachinePoliciesMachinePolicyMachineHealthCheckPolicyPowershellHealthCheckPolicy"
                }
            },
            "type": "object",
            "required": [
                "bashHealthCheckPolicy",
                "powershellHealthCheckPolicy"
            ]
        },
        "octopusdeploy:index/getMachinePoliciesMachinePolicyMachineHealthCheckPolicyBashHealthCheckPolicy:getMachinePoliciesMachinePolicyMachineHealthCheckPolicyBashHealthCheckPolicy": {
            "properties": {
                "runType": {
                    "type": "string"
                },
                "scriptBody": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getMachinePoliciesMachinePolicyMachineHealthCheckPolicyPowershellHealthCheckPolicy:getMachinePoliciesMachinePolicyMachineHealthCheckPolicyPowershellHealthCheckPolicy": {
            "properties": {
                "runType": {
                    "type": "string"
                },
                "scriptBody": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getMachinePoliciesMachinePolicyMachineUpdatePolicy:getMachinePoliciesMachinePolicyMachineUpdatePolicy": {
            "properties": {
                "calamariUpdateBehavior": {
                    "type": "string"
                },
                "tentacleUpdateAccountId": {
                    "type": "string"
                },
                "tentacleUpdateBehavior": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTarget:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTarget": {
            "properties": {
                "applicationsDirectory": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetDestination:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetDestination"
                    }
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpoint:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "A filter to search by the disabled status of a resource.\n"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A filter to search by a list of role IDs.\n"
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                },
                "uri": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "applicationsDirectory",
                "destinations",
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri",
                "workingDirectory"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetDestination:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpoint:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointAuthentication:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointContainer:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointDestination:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointTentacleVersionDetail:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "communicationStyle",
                "containers",
                "destinations",
                "id",
                "tentacleVersionDetails"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "communicationStyle"
                    ]
                }
            }
        },
        "octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointAuthentication:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointContainer:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointDestination:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointTentacleVersionDetail:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTarget:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTarget": {
            "properties": {
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpoint:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "A filter to search by the disabled status of a resource.\n"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A filter to search by a list of role IDs.\n"
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "tentacleUrl": {
                    "type": "string"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetTentacleVersionDetail:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                },
                "uri": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "certificateSignatureAlgorithm",
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "tentacleUrl",
                "tentacleVersionDetails",
                "thumbprint",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpoint:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointAuthentication:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointContainer:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointDestination:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointTentacleVersionDetail:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "communicationStyle",
                "containers",
                "destinations",
                "id",
                "tentacleVersionDetails"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "communicationStyle"
                    ]
                }
            }
        },
        "octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointAuthentication:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointContainer:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointDestination:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointTentacleVersionDetail:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetTentacleVersionDetail:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTargetTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectGroupsProjectGroup:getProjectGroupsProjectGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this project group.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "retentionPolicyId": {
                    "type": "string",
                    "description": "The ID of the retention policy associated with this project group.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this project group.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "retentionPolicyId",
                "spaceId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectsProject:getProjectsProject": {
            "properties": {
                "allowDeploymentsToNoTargets": {
                    "type": "boolean",
                    "deprecationMessage": "This value is only valid for an associated connectivity policy and should not be specified here."
                },
                "autoCreateRelease": {
                    "type": "boolean"
                },
                "autoDeployReleaseOverrides": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "clonedFromProjectId": {
                    "type": "string",
                    "description": "A filter to search for cloned resources by a project ID.\n"
                },
                "connectivityPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectConnectivityPolicy:getProjectsProjectConnectivityPolicy"
                    }
                },
                "defaultGuidedFailureMode": {
                    "type": "string"
                },
                "defaultToSkipIfAlreadyInstalled": {
                    "type": "boolean"
                },
                "deploymentChangesTemplate": {
                    "type": "string"
                },
                "deploymentProcessId": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this project.\n"
                },
                "discreteChannelRelease": {
                    "type": "boolean",
                    "description": "Treats releases of different channels to the same environment as a separate deployment dimension\n"
                },
                "gitAnonymousPersistenceSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectGitAnonymousPersistenceSetting:getProjectsProjectGitAnonymousPersistenceSetting"
                    },
                    "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                },
                "gitLibraryPersistenceSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectGitLibraryPersistenceSetting:getProjectsProjectGitLibraryPersistenceSetting"
                    },
                    "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                },
                "gitUsernamePasswordPersistenceSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectGitUsernamePasswordPersistenceSetting:getProjectsProjectGitUsernamePasswordPersistenceSetting"
                    },
                    "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "includedLibraryVariableSets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isDiscreteChannelRelease": {
                    "type": "boolean",
                    "description": "Treats releases of different channels to the same environment as a separate deployment dimension\n"
                },
                "isVersionControlled": {
                    "type": "boolean"
                },
                "jiraServiceManagementExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectJiraServiceManagementExtensionSetting:getProjectsProjectJiraServiceManagementExtensionSetting"
                    },
                    "description": "Provides extension settings for the Jira Service Management (JSM) integration for this project.\n"
                },
                "lifecycleId": {
                    "type": "string",
                    "description": "The lifecycle ID associated with this project.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the project in Octopus Deploy. This name must be unique.\n"
                },
                "projectGroupId": {
                    "type": "string",
                    "description": "The project group ID associated with this project.\n"
                },
                "releaseCreationStrategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectReleaseCreationStrategy:getProjectsProjectReleaseCreationStrategy"
                    }
                },
                "releaseNotesTemplate": {
                    "type": "string"
                },
                "servicenowExtensionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectServicenowExtensionSetting:getProjectsProjectServicenowExtensionSetting"
                    },
                    "description": "Provides extension settings for the ServiceNow integration for this project.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable, unique identifier, used to identify a project.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this project.\n"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectTemplate:getProjectsProjectTemplate"
                    }
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "variableSetId": {
                    "type": "string"
                },
                "versioningStrategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getProjectsProjectVersioningStrategy:getProjectsProjectVersioningStrategy"
                    }
                }
            },
            "type": "object",
            "required": [
                "allowDeploymentsToNoTargets",
                "autoCreateRelease",
                "autoDeployReleaseOverrides",
                "clonedFromProjectId",
                "connectivityPolicies",
                "defaultGuidedFailureMode",
                "defaultToSkipIfAlreadyInstalled",
                "deploymentChangesTemplate",
                "deploymentProcessId",
                "description",
                "discreteChannelRelease",
                "gitAnonymousPersistenceSettings",
                "gitLibraryPersistenceSettings",
                "gitUsernamePasswordPersistenceSettings",
                "id",
                "includedLibraryVariableSets",
                "isDisabled",
                "isDiscreteChannelRelease",
                "isVersionControlled",
                "jiraServiceManagementExtensionSettings",
                "lifecycleId",
                "name",
                "projectGroupId",
                "releaseCreationStrategies",
                "releaseNotesTemplate",
                "servicenowExtensionSettings",
                "slug",
                "spaceId",
                "templates",
                "tenantedDeploymentParticipation",
                "variableSetId",
                "versioningStrategies"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectsProjectConnectivityPolicy:getProjectsProjectConnectivityPolicy": {
            "properties": {
                "allowDeploymentsToNoTargets": {
                    "type": "boolean"
                },
                "excludeUnhealthyTargets": {
                    "type": "boolean"
                },
                "skipMachineBehavior": {
                    "type": "string"
                },
                "targetRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "allowDeploymentsToNoTargets",
                "excludeUnhealthyTargets",
                "targetRoles"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectsProjectGitAnonymousPersistenceSetting:getProjectsProjectGitAnonymousPersistenceSetting": {
            "properties": {
                "basePath": {
                    "type": "string"
                },
                "defaultBranch": {
                    "type": "string"
                },
                "protectedBranches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "octopusdeploy:index/getProjectsProjectGitLibraryPersistenceSetting:getProjectsProjectGitLibraryPersistenceSetting": {
            "properties": {
                "basePath": {
                    "type": "string"
                },
                "defaultBranch": {
                    "type": "string"
                },
                "gitCredentialId": {
                    "type": "string"
                },
                "protectedBranches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "gitCredentialId",
                "url"
            ]
        },
        "octopusdeploy:index/getProjectsProjectGitUsernamePasswordPersistenceSetting:getProjectsProjectGitUsernamePasswordPersistenceSetting": {
            "properties": {
                "basePath": {
                    "type": "string"
                },
                "defaultBranch": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "protectedBranches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "password",
                "url",
                "username"
            ]
        },
        "octopusdeploy:index/getProjectsProjectJiraServiceManagementExtensionSetting:getProjectsProjectJiraServiceManagementExtensionSetting": {
            "properties": {
                "connectionId": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "serviceDeskProjectName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "connectionId",
                "isEnabled",
                "serviceDeskProjectName"
            ]
        },
        "octopusdeploy:index/getProjectsProjectReleaseCreationStrategy:getProjectsProjectReleaseCreationStrategy": {
            "properties": {
                "channelId": {
                    "type": "string"
                },
                "releaseCreationPackage": {
                    "$ref": "#/types/octopusdeploy:index/getProjectsProjectReleaseCreationStrategyReleaseCreationPackage:getProjectsProjectReleaseCreationStrategyReleaseCreationPackage"
                },
                "releaseCreationPackageStepId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "releaseCreationPackage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectsProjectReleaseCreationStrategyReleaseCreationPackage:getProjectsProjectReleaseCreationStrategyReleaseCreationPackage": {
            "properties": {
                "deploymentAction": {
                    "type": "string"
                },
                "packageReference": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getProjectsProjectServicenowExtensionSetting:getProjectsProjectServicenowExtensionSetting": {
            "properties": {
                "connectionId": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "isStateAutomaticallyTransitioned": {
                    "type": "boolean"
                },
                "standardChangeTemplateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "connectionId",
                "isEnabled",
                "isStateAutomaticallyTransitioned",
                "standardChangeTemplateName"
            ]
        },
        "octopusdeploy:index/getProjectsProjectTemplate:getProjectsProjectTemplate": {
            "properties": {
                "defaultValue": {
                    "type": "string"
                },
                "displaySettings": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "helpText": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A filter to search by name.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "name"
                    ]
                }
            }
        },
        "octopusdeploy:index/getProjectsProjectVersioningStrategy:getProjectsProjectVersioningStrategy": {
            "properties": {
                "donorPackage": {
                    "$ref": "#/types/octopusdeploy:index/getProjectsProjectVersioningStrategyDonorPackage:getProjectsProjectVersioningStrategyDonorPackage"
                },
                "donorPackageStepId": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "donorPackage",
                "donorPackageStepId",
                "template"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getProjectsProjectVersioningStrategyDonorPackage:getProjectsProjectVersioningStrategyDonorPackage": {
            "properties": {
                "deploymentAction": {
                    "type": "string"
                },
                "packageReference": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getScriptModulesScriptModule:getScriptModulesScriptModule": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this script module.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "scripts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getScriptModulesScriptModuleScript:getScriptModulesScriptModuleScript"
                    },
                    "description": "The script associated with this script module.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "variableSetId": {
                    "type": "string",
                    "description": "The variable set ID for this script module.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "scripts",
                "spaceId",
                "variableSetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getScriptModulesScriptModuleScript:getScriptModulesScriptModuleScript": {
            "properties": {
                "body": {
                    "type": "string"
                },
                "syntax": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "body",
                "syntax"
            ]
        },
        "octopusdeploy:index/getSpacesSpace:getSpacesSpace": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this space.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Specifies if this space is the default space in Octopus.\n"
                },
                "isTaskQueueStopped": {
                    "type": "boolean",
                    "description": "Specifies the status of the task queue for this space.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource, no more than 20 characters long\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The unique slug of this space.\n"
                },
                "spaceManagersTeamMembers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of user IDs designated to be managers of this space.\n"
                },
                "spaceManagersTeams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of team IDs designated to be managers of this space.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "isDefault",
                "isTaskQueueStopped",
                "name",
                "slug",
                "spaceManagersTeamMembers",
                "spaceManagersTeams"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTarget:getSshConnectionDeploymentTargetsSshConnectionDeploymentTarget": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpoint:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "fingerprint": {
                    "type": "string"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "A filter to search by the disabled status of a resource.\n"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A filter to search by a list of role IDs.\n"
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                },
                "uri": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "dotNetCorePlatform",
                "endpoints",
                "environments",
                "fingerprint",
                "hasLatestCalamari",
                "healthStatus",
                "host",
                "id",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "port",
                "proxyId",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpoint:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpoint": {
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "applicationsDirectory": {
                    "type": "string"
                },
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointAuthentication:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointAuthentication"
                },
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "communicationStyle": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointContainer:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointDestination:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointDestination"
                    }
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "slot": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointTentacleVersionDetail:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "communicationStyle",
                "containers",
                "destinations",
                "id",
                "tentacleVersionDetails"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "communicationStyle"
                    ]
                }
            }
        },
        "octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointAuthentication:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointAuthentication": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "adminLogin": {
                    "type": "string"
                },
                "assumeRole": {
                    "type": "boolean"
                },
                "assumeRoleExternalId": {
                    "type": "string"
                },
                "assumeRoleSessionDuration": {
                    "type": "integer"
                },
                "assumedRoleArn": {
                    "type": "string"
                },
                "assumedRoleSession": {
                    "type": "string"
                },
                "authenticationType": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterResourceGroup": {
                    "type": "string"
                },
                "impersonateServiceAccount": {
                    "type": "boolean"
                },
                "project": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceAccountEmails": {
                    "type": "string"
                },
                "useInstanceRole": {
                    "type": "boolean"
                },
                "useVmServiceAccount": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointContainer:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointContainer": {
            "properties": {
                "feedId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointDestination:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointDestination": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "dropFolderPath": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointTentacleVersionDetail:getSshConnectionDeploymentTargetsSshConnectionDeploymentTargetEndpointTentacleVersionDetail": {
            "properties": {
                "upgradeLocked": {
                    "type": "boolean"
                },
                "upgradeRequired": {
                    "type": "boolean"
                },
                "upgradeSuggested": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "upgradeLocked",
                "upgradeRequired",
                "upgradeSuggested",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getTagSetsTagSet:getTagSetsTagSet": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this tag set.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The sort order associated with this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "sortOrder",
                "spaceId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getTeamsTeam:getTeamsTeam": {
            "properties": {
                "canBeDeleted": {
                    "type": "boolean"
                },
                "canBeRenamed": {
                    "type": "boolean"
                },
                "canChangeMembers": {
                    "type": "boolean"
                },
                "canChangeRoles": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The user-friendly description of this team.\n"
                },
                "externalSecurityGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getTeamsTeamExternalSecurityGroup:getTeamsTeamExternalSecurityGroup"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this team.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space associated with this team.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of user IDs designated to be members of this team.\n"
                }
            },
            "type": "object",
            "required": [
                "canBeDeleted",
                "canBeRenamed",
                "canChangeMembers",
                "canChangeRoles",
                "description",
                "externalSecurityGroups",
                "id",
                "name",
                "spaceId",
                "users"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getTeamsTeamExternalSecurityGroup:getTeamsTeamExternalSecurityGroup": {
            "properties": {
                "displayIdAndName": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                }
            },
            "type": "object",
            "required": [
                "displayIdAndName",
                "displayName",
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getTenantsTenant:getTenantsTenant": {
            "properties": {
                "clonedFromTenantId": {
                    "type": "string",
                    "description": "The ID of the tenant from which this tenant was cloned.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this tenant.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getTenantsTenantProjectEnvironment:getTenantsTenantProjectEnvironment"
                    }
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                }
            },
            "type": "object",
            "required": [
                "clonedFromTenantId",
                "description",
                "id",
                "name",
                "projectEnvironments",
                "spaceId",
                "tenantTags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getTenantsTenantProjectEnvironment:getTenantsTenantProjectEnvironment": {
            "properties": {
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "projectId": {
                    "type": "string",
                    "description": "A filter to search by a project ID.\n"
                }
            },
            "type": "object",
            "required": [
                "environments",
                "projectId"
            ]
        },
        "octopusdeploy:index/getUserRolesUserRole:getUserRolesUserRole": {
            "properties": {
                "canBeDeleted": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this user role.\n"
                },
                "grantedSpacePermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grantedSystemPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spacePermissionDescriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "supportedRestrictions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "systemPermissionDescriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "canBeDeleted",
                "description",
                "grantedSpacePermissions",
                "grantedSystemPermissions",
                "id",
                "name",
                "spacePermissionDescriptions",
                "supportedRestrictions",
                "systemPermissionDescriptions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getUsersUser:getUsersUser": {
            "properties": {
                "canPasswordBeEdited": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource.\n"
                },
                "emailAddress": {
                    "type": "string",
                    "description": "The email address of this resource.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getUsersUserIdentity:getUsersUserIdentity"
                    }
                },
                "isActive": {
                    "type": "boolean"
                },
                "isRequestor": {
                    "type": "boolean"
                },
                "isService": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "canPasswordBeEdited",
                "displayName",
                "emailAddress",
                "id",
                "identities",
                "isActive",
                "isRequestor",
                "isService",
                "password",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getUsersUserIdentity:getUsersUserIdentity": {
            "properties": {
                "claims": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getUsersUserIdentityClaim:getUsersUserIdentityClaim"
                    }
                },
                "provider": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getUsersUserIdentityClaim:getUsersUserIdentityClaim": {
            "properties": {
                "isIdentifyingClaim": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "isIdentifyingClaim",
                "name",
                "value"
            ]
        },
        "octopusdeploy:index/getVariablesVariable:getVariablesVariable": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this variable.\n"
                },
                "encryptedValue": {
                    "type": "string"
                },
                "isEditable": {
                    "type": "boolean",
                    "description": "Indicates whether or not this variable is considered editable.\n"
                },
                "isSensitive": {
                    "type": "boolean",
                    "description": "Indicates whether or not this resource is considered sensitive and should be kept secret.\n"
                },
                "keyFingerprint": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "ownerId": {
                    "type": "string"
                },
                "pgpKey": {
                    "type": "string",
                    "secret": true
                },
                "projectId": {
                    "type": "string",
                    "deprecationMessage": "This attribute is deprecated; please use owner_id instead."
                },
                "prompts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getVariablesVariablePrompt:getVariablesVariablePrompt"
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getVariablesVariableScope:getVariablesVariableScope"
                    }
                },
                "sensitiveValue": {
                    "type": "string",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "The type of variable represented by this resource. Valid types are `AmazonWebServicesAccount`, `AzureAccount`, `GoogleCloudAccount`, `Certificate`, `Sensitive`, `String`, or `WorkerPool`.\n"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "encryptedValue",
                "isEditable",
                "isSensitive",
                "keyFingerprint",
                "name",
                "ownerId",
                "pgpKey",
                "projectId",
                "prompts",
                "scopes",
                "sensitiveValue",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "octopusdeploy:index/getVariablesVariablePrompt:getVariablesVariablePrompt": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "displaySettings": {
                    "$ref": "#/types/octopusdeploy:index/getVariablesVariablePromptDisplaySettings:getVariablesVariablePromptDisplaySettings"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getVariablesVariablePromptDisplaySettings:getVariablesVariablePromptDisplaySettings": {
            "properties": {
                "controlType": {
                    "type": "string"
                },
                "selectOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/getVariablesVariablePromptDisplaySettingsSelectOption:getVariablesVariablePromptDisplaySettingsSelectOption"
                    }
                }
            },
            "type": "object",
            "required": [
                "controlType"
            ]
        },
        "octopusdeploy:index/getVariablesVariablePromptDisplaySettingsSelectOption:getVariablesVariablePromptDisplaySettingsSelectOption": {
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "value"
            ]
        },
        "octopusdeploy:index/getVariablesVariableScope:getVariablesVariableScope": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "machines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "octopusdeploy:index/getWorkerPoolsWorkerPool:getWorkerPoolsWorkerPool": {
            "properties": {
                "canAddWorkers": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this worker pool.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID for this resource.\n"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The order number to sort a dynamic worker pool.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "workerPoolType": {
                    "type": "string"
                },
                "workerType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "canAddWorkers",
                "description",
                "id",
                "isDefault",
                "name",
                "sortOrder",
                "spaceId",
                "workerPoolType",
                "workerType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the octopusdeploy package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "address": {
                "type": "string",
                "description": "The endpoint of the Octopus REST API\n"
            },
            "apiKey": {
                "type": "string",
                "description": "The API key to use with the Octopus REST API\n"
            },
            "spaceId": {
                "type": "string",
                "description": "The space ID to target\n"
            }
        },
        "required": [
            "address",
            "apiKey"
        ],
        "inputProperties": {
            "address": {
                "type": "string",
                "description": "The endpoint of the Octopus REST API\n"
            },
            "apiKey": {
                "type": "string",
                "description": "The API key to use with the Octopus REST API\n"
            },
            "spaceId": {
                "type": "string",
                "description": "The space ID to target\n"
            }
        },
        "requiredInputs": [
            "address",
            "apiKey"
        ]
    },
    "resources": {
        "octopusdeploy:index/awsAccount:AwsAccount": {
            "description": "This resource manages AWS accounts in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.AwsAccount(\"example\", {\n    accessKey: \"access-key\",\n    secretKey: \"###########\",\n});\n// required; get from secure environment/store\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.AwsAccount(\"example\",\n    access_key=\"access-key\",\n    secret_key=\"###########\")\n# required; get from secure environment/store\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.AwsAccount(\"example\", new()\n    {\n        AccessKey = \"access-key\",\n        SecretKey = \"###########\",\n    });\n\n    // required; get from secure environment/store\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewAwsAccount(ctx, \"example\", \u0026octopusdeploy.AwsAccountArgs{\n\t\t\tAccessKey: pulumi.String(\"access-key\"),\n\t\t\tSecretKey: pulumi.String(\"###########\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.AwsAccount;\nimport com.pulumi.octopusdeploy.AwsAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AwsAccount(\"example\", AwsAccountArgs.builder()        \n            .accessKey(\"access-key\")\n            .secretKey(\"###########\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:AwsAccount\n    properties:\n      accessKey: access-key\n      secretKey: '###########'\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/awsAccount:AwsAccount [options] octopusdeploy_aws_account.\u003cname\u003e \u003caccount-id\u003e\n```\n\n ",
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "The access key associated with this AWS account.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A user-friendly description of this AWS account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this AWS account.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The secret key associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "required": [
                "accessKey",
                "environments",
                "name",
                "secretKey",
                "spaceId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants"
            ],
            "inputProperties": {
                "accessKey": {
                    "type": "string",
                    "description": "The access key associated with this AWS account.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A user-friendly description of this AWS account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this AWS account.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The secret key associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "requiredInputs": [
                "accessKey",
                "secretKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AwsAccount resources.\n",
                "properties": {
                    "accessKey": {
                        "type": "string",
                        "description": "The access key associated with this AWS account.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A user-friendly description of this AWS account.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this AWS account.\n"
                    },
                    "secretKey": {
                        "type": "string",
                        "description": "The secret key associated with this resource.\n",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/awsElasticContainerRegistry:AwsElasticContainerRegistry": {
            "description": "This resource manages an AWS Elastic Container Registry in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.AwsElasticContainerRegistry(\"example\", {\n    accessKey: \"access-key\",\n    region: \"us-east-1\",\n    secretKey: \"secret-key\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.AwsElasticContainerRegistry(\"example\",\n    access_key=\"access-key\",\n    region=\"us-east-1\",\n    secret_key=\"secret-key\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.AwsElasticContainerRegistry(\"example\", new()\n    {\n        AccessKey = \"access-key\",\n        Region = \"us-east-1\",\n        SecretKey = \"secret-key\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewAwsElasticContainerRegistry(ctx, \"example\", \u0026octopusdeploy.AwsElasticContainerRegistryArgs{\n\t\t\tAccessKey: pulumi.String(\"access-key\"),\n\t\t\tRegion:    pulumi.String(\"us-east-1\"),\n\t\t\tSecretKey: pulumi.String(\"secret-key\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.AwsElasticContainerRegistry;\nimport com.pulumi.octopusdeploy.AwsElasticContainerRegistryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AwsElasticContainerRegistry(\"example\", AwsElasticContainerRegistryArgs.builder()        \n            .accessKey(\"access-key\")\n            .region(\"us-east-1\")\n            .secretKey(\"secret-key\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:AwsElasticContainerRegistry\n    properties:\n      accessKey: access-key\n      region: us-east-1\n      secretKey: secret-key\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/awsElasticContainerRegistry:AwsElasticContainerRegistry [options] octopusdeploy_aws_elastic_container_registry.\u003cname\u003e \u003cfeed-id\u003e\n```\n\n ",
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "The AWS access key to use when authenticating against Amazon Web Services.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A short, memorable, unique name for this feed. Example: ACME Builds.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The AWS region where the registry resides.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The AWS secret key to use when authenticating against Amazon Web Services.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this feed.\n"
                }
            },
            "required": [
                "accessKey",
                "name",
                "packageAcquisitionLocationOptions",
                "region",
                "secretKey",
                "spaceId"
            ],
            "inputProperties": {
                "accessKey": {
                    "type": "string",
                    "description": "The AWS access key to use when authenticating against Amazon Web Services.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A short, memorable, unique name for this feed. Example: ACME Builds.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The AWS region where the registry resides.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The AWS secret key to use when authenticating against Amazon Web Services.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this feed.\n"
                }
            },
            "requiredInputs": [
                "accessKey",
                "region",
                "secretKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AwsElasticContainerRegistry resources.\n",
                "properties": {
                    "accessKey": {
                        "type": "string",
                        "description": "The AWS access key to use when authenticating against Amazon Web Services.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A short, memorable, unique name for this feed. Example: ACME Builds.\n"
                    },
                    "packageAcquisitionLocationOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "region": {
                        "type": "string",
                        "description": "The AWS region where the registry resides.\n"
                    },
                    "secretKey": {
                        "type": "string",
                        "description": "The AWS secret key to use when authenticating against Amazon Web Services.\n",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this feed.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/azureCloudServiceDeploymentTarget:AzureCloudServiceDeploymentTarget": {
            "description": "This resource manages Azure cloud service deployment targets in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.AzureCloudServiceDeploymentTarget(\"example\", {\n    accountId: \"Accounts-123\",\n    cloudServiceName: \"[cloud_service_name]\",\n    environments: [\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    roles: [\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    storageAccountName: \"[storage_account_name]\",\n    tenantedDeploymentParticipation: \"Untenanted\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.AzureCloudServiceDeploymentTarget(\"example\",\n    account_id=\"Accounts-123\",\n    cloud_service_name=\"[cloud_service_name]\",\n    environments=[\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    roles=[\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    storage_account_name=\"[storage_account_name]\",\n    tenanted_deployment_participation=\"Untenanted\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.AzureCloudServiceDeploymentTarget(\"example\", new()\n    {\n        AccountId = \"Accounts-123\",\n        CloudServiceName = \"[cloud_service_name]\",\n        Environments = new[]\n        {\n            \"Environments-123\",\n            \"Environment-321\",\n        },\n        Roles = new[]\n        {\n            \"Development Team\",\n            \"System Administrators\",\n        },\n        StorageAccountName = \"[storage_account_name]\",\n        TenantedDeploymentParticipation = \"Untenanted\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewAzureCloudServiceDeploymentTarget(ctx, \"example\", \u0026octopusdeploy.AzureCloudServiceDeploymentTargetArgs{\n\t\t\tAccountId:        pulumi.String(\"Accounts-123\"),\n\t\t\tCloudServiceName: pulumi.String(\"[cloud_service_name]\"),\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Environments-123\"),\n\t\t\t\tpulumi.String(\"Environment-321\"),\n\t\t\t},\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Development Team\"),\n\t\t\t\tpulumi.String(\"System Administrators\"),\n\t\t\t},\n\t\t\tStorageAccountName:              pulumi.String(\"[storage_account_name]\"),\n\t\t\tTenantedDeploymentParticipation: pulumi.String(\"Untenanted\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.AzureCloudServiceDeploymentTarget;\nimport com.pulumi.octopusdeploy.AzureCloudServiceDeploymentTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AzureCloudServiceDeploymentTarget(\"example\", AzureCloudServiceDeploymentTargetArgs.builder()        \n            .accountId(\"Accounts-123\")\n            .cloudServiceName(\"[cloud_service_name]\")\n            .environments(            \n                \"Environments-123\",\n                \"Environment-321\")\n            .roles(            \n                \"Development Team\",\n                \"System Administrators\")\n            .storageAccountName(\"[storage_account_name]\")\n            .tenantedDeploymentParticipation(\"Untenanted\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:AzureCloudServiceDeploymentTarget\n    properties:\n      accountId: Accounts-123\n      cloudServiceName: '[cloud_service_name]'\n      environments:\n        - Environments-123\n        - Environment-321\n      roles:\n        - Development Team\n        - System Administrators\n      storageAccountName: '[storage_account_name]'\n      tenantedDeploymentParticipation: Untenanted\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/azureCloudServiceDeploymentTarget:AzureCloudServiceDeploymentTarget [options] octopusdeploy_azure_cloud_service_deployment_target.\u003cname\u003e \u003cmachine-id\u003e\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpoint:AzureCloudServiceDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "slot": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                }
            },
            "required": [
                "accountId",
                "cloudServiceName",
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "storageAccountName",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string"
                },
                "cloudServiceName": {
                    "type": "string"
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpoint:AzureCloudServiceDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "slot": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "swapIfPossible": {
                    "type": "boolean"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "useCurrentInstanceCount": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "accountId",
                "cloudServiceName",
                "environments",
                "roles",
                "storageAccountName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzureCloudServiceDeploymentTarget resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "cloudServiceName": {
                        "type": "string"
                    },
                    "defaultWorkerPoolId": {
                        "type": "string"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/AzureCloudServiceDeploymentTargetEndpoint:AzureCloudServiceDeploymentTargetEndpoint"
                        }
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "hasLatestCalamari": {
                        "type": "boolean"
                    },
                    "healthStatus": {
                        "type": "string",
                        "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isInProcess": {
                        "type": "boolean"
                    },
                    "machinePolicyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellName": {
                        "type": "string"
                    },
                    "shellVersion": {
                        "type": "string"
                    },
                    "slot": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                    },
                    "statusSummary": {
                        "type": "string",
                        "description": "A summary elaborating on the status of this resource.\n"
                    },
                    "storageAccountName": {
                        "type": "string"
                    },
                    "swapIfPossible": {
                        "type": "boolean"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "thumbprint": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    },
                    "useCurrentInstanceCount": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/azureServiceFabricClusterDeploymentTarget:AzureServiceFabricClusterDeploymentTarget": {
            "description": "This resource manages Azure service fabric cluster deployment targets in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.AzureServiceFabricClusterDeploymentTarget;\nimport com.pulumi.octopusdeploy.AzureServiceFabricClusterDeploymentTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AzureServiceFabricClusterDeploymentTarget(\"example\", AzureServiceFabricClusterDeploymentTargetArgs.builder()        \n            .accountId(\"Accounts-123\")\n            .connectionEndpoint(\"[connection-endpoint]\")\n            .environments(            \n                \"Environments-123\",\n                \"Environment-321\")\n            .roles(            \n                \"Development Team\",\n                \"System Administrators\")\n            .storageAccountName(\"[storage_account_name]\")\n            .tenantedDeploymentParticipation(\"Untenanted\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:AzureServiceFabricClusterDeploymentTarget\n    properties:\n      accountId: Accounts-123\n      connectionEndpoint: '[connection-endpoint]'\n      environments:\n        - Environments-123\n        - Environment-321\n      roles:\n        - Development Team\n        - System Administrators\n      storageAccountName: '[storage_account_name]'\n      tenantedDeploymentParticipation: Untenanted\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/azureServiceFabricClusterDeploymentTarget:AzureServiceFabricClusterDeploymentTarget [options] octopusdeploy_azure_service_fabric_cluster_deployment_target.\u003cname\u003e \u003cmachine-id\u003e\n```\n\n ",
            "properties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialPassword": {
                    "type": "string",
                    "secret": true
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpoint:AzureServiceFabricClusterDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "required": [
                "aadClientCredentialSecret",
                "aadCredentialType",
                "aadUserCredentialUsername",
                "certificateStoreLocation",
                "certificateStoreName",
                "clientCertificateVariable",
                "connectionEndpoint",
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "securityMode",
                "serverCertificateThumbprint",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "inputProperties": {
                "aadClientCredentialSecret": {
                    "type": "string"
                },
                "aadCredentialType": {
                    "type": "string"
                },
                "aadUserCredentialPassword": {
                    "type": "string",
                    "secret": true
                },
                "aadUserCredentialUsername": {
                    "type": "string"
                },
                "certificateStoreLocation": {
                    "type": "string"
                },
                "certificateStoreName": {
                    "type": "string"
                },
                "clientCertificateVariable": {
                    "type": "string"
                },
                "connectionEndpoint": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpoint:AzureServiceFabricClusterDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "securityMode": {
                    "type": "string"
                },
                "serverCertificateThumbprint": {
                    "type": "string"
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "connectionEndpoint",
                "environments",
                "roles"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzureServiceFabricClusterDeploymentTarget resources.\n",
                "properties": {
                    "aadClientCredentialSecret": {
                        "type": "string"
                    },
                    "aadCredentialType": {
                        "type": "string"
                    },
                    "aadUserCredentialPassword": {
                        "type": "string",
                        "secret": true
                    },
                    "aadUserCredentialUsername": {
                        "type": "string"
                    },
                    "certificateStoreLocation": {
                        "type": "string"
                    },
                    "certificateStoreName": {
                        "type": "string"
                    },
                    "clientCertificateVariable": {
                        "type": "string"
                    },
                    "connectionEndpoint": {
                        "type": "string"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/AzureServiceFabricClusterDeploymentTargetEndpoint:AzureServiceFabricClusterDeploymentTargetEndpoint"
                        }
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "hasLatestCalamari": {
                        "type": "boolean"
                    },
                    "healthStatus": {
                        "type": "string",
                        "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isInProcess": {
                        "type": "boolean"
                    },
                    "machinePolicyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "securityMode": {
                        "type": "string"
                    },
                    "serverCertificateThumbprint": {
                        "type": "string"
                    },
                    "shellName": {
                        "type": "string"
                    },
                    "shellVersion": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                    },
                    "statusSummary": {
                        "type": "string",
                        "description": "A summary elaborating on the status of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "thumbprint": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/azureServicePrincipal:AzureServicePrincipal": {
            "description": "This resource manages Azure service principal accounts in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.AzureServicePrincipal(\"example\", {\n    applicationId: \"00000000-0000-0000-0000-000000000000\",\n    password: \"###########\",\n    subscriptionId: \"00000000-0000-0000-0000-000000000000\",\n    tenantId: \"00000000-0000-0000-0000-000000000000\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.AzureServicePrincipal(\"example\",\n    application_id=\"00000000-0000-0000-0000-000000000000\",\n    password=\"###########\",\n    subscription_id=\"00000000-0000-0000-0000-000000000000\",\n    tenant_id=\"00000000-0000-0000-0000-000000000000\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.AzureServicePrincipal(\"example\", new()\n    {\n        ApplicationId = \"00000000-0000-0000-0000-000000000000\",\n        Password = \"###########\",\n        SubscriptionId = \"00000000-0000-0000-0000-000000000000\",\n        TenantId = \"00000000-0000-0000-0000-000000000000\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewAzureServicePrincipal(ctx, \"example\", \u0026octopusdeploy.AzureServicePrincipalArgs{\n\t\t\tApplicationId:  pulumi.String(\"00000000-0000-0000-0000-000000000000\"),\n\t\t\tPassword:       pulumi.String(\"###########\"),\n\t\t\tSubscriptionId: pulumi.String(\"00000000-0000-0000-0000-000000000000\"),\n\t\t\tTenantId:       pulumi.String(\"00000000-0000-0000-0000-000000000000\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.AzureServicePrincipal;\nimport com.pulumi.octopusdeploy.AzureServicePrincipalArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AzureServicePrincipal(\"example\", AzureServicePrincipalArgs.builder()        \n            .applicationId(\"00000000-0000-0000-0000-000000000000\")\n            .password(\"###########\")\n            .subscriptionId(\"00000000-0000-0000-0000-000000000000\")\n            .tenantId(\"00000000-0000-0000-0000-000000000000\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:AzureServicePrincipal\n    properties:\n      applicationId: 00000000-0000-0000-0000-000000000000\n      password: '###########'\n      # required; get from secure environment/store\n      subscriptionId: 00000000-0000-0000-0000-000000000000\n      tenantId: 00000000-0000-0000-0000-000000000000\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/azureServicePrincipal:AzureServicePrincipal [options] octopusdeploy_azure_service_principal.\u003cname\u003e \u003caccount-id\u003e\n```\n\n ",
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The application ID of this resource.\n"
                },
                "authenticationEndpoint": {
                    "type": "string",
                    "description": "The authentication endpoint URI for this resource.\n"
                },
                "azureEnvironment": {
                    "type": "string",
                    "description": "The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this Azure service principal account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "resourceManagerEndpoint": {
                    "type": "string",
                    "description": "The resource manager endpoint URI for this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "subscriptionId": {
                    "type": "string",
                    "description": "The subscription ID of this resource.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The tenant ID of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "required": [
                "applicationId",
                "azureEnvironment",
                "environments",
                "name",
                "password",
                "spaceId",
                "subscriptionId",
                "tenantId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "The application ID of this resource.\n"
                },
                "authenticationEndpoint": {
                    "type": "string",
                    "description": "The authentication endpoint URI for this resource.\n"
                },
                "azureEnvironment": {
                    "type": "string",
                    "description": "The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this Azure service principal account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "resourceManagerEndpoint": {
                    "type": "string",
                    "description": "The resource manager endpoint URI for this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "subscriptionId": {
                    "type": "string",
                    "description": "The subscription ID of this resource.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The tenant ID of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "requiredInputs": [
                "applicationId",
                "password",
                "subscriptionId",
                "tenantId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzureServicePrincipal resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The application ID of this resource.\n"
                    },
                    "authenticationEndpoint": {
                        "type": "string",
                        "description": "The authentication endpoint URI for this resource.\n"
                    },
                    "azureEnvironment": {
                        "type": "string",
                        "description": "The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this Azure service principal account.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password associated with this resource.\n",
                        "secret": true
                    },
                    "resourceManagerEndpoint": {
                        "type": "string",
                        "description": "The resource manager endpoint URI for this resource.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "subscriptionId": {
                        "type": "string",
                        "description": "The subscription ID of this resource.\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "The tenant ID of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/azureSubscriptionAccount:AzureSubscriptionAccount": {
            "description": "This resource manages Azure subscription accounts in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.AzureSubscriptionAccount(\"example\", {subscriptionId: \"00000000-0000-0000-0000-000000000000\"});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.AzureSubscriptionAccount(\"example\", subscription_id=\"00000000-0000-0000-0000-000000000000\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.AzureSubscriptionAccount(\"example\", new()\n    {\n        SubscriptionId = \"00000000-0000-0000-0000-000000000000\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewAzureSubscriptionAccount(ctx, \"example\", \u0026octopusdeploy.AzureSubscriptionAccountArgs{\n\t\t\tSubscriptionId: pulumi.String(\"00000000-0000-0000-0000-000000000000\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.AzureSubscriptionAccount;\nimport com.pulumi.octopusdeploy.AzureSubscriptionAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AzureSubscriptionAccount(\"example\", AzureSubscriptionAccountArgs.builder()        \n            .subscriptionId(\"00000000-0000-0000-0000-000000000000\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:AzureSubscriptionAccount\n    properties:\n      subscriptionId: 00000000-0000-0000-0000-000000000000\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/azureSubscriptionAccount:AzureSubscriptionAccount [options] octopusdeploy_azure_subscription_account.\u003cname\u003e \u003caccount-id\u003e\n```\n\n ",
            "properties": {
                "azureEnvironment": {
                    "type": "string",
                    "description": "The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.\n"
                },
                "certificate": {
                    "type": "string",
                    "secret": true
                },
                "certificateThumbprint": {
                    "type": "string",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of this Azure subscription account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "managementEndpoint": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "storageEndpointSuffix": {
                    "type": "string",
                    "description": "The storage endpoint suffix associated with this Azure subscription account.\n"
                },
                "subscriptionId": {
                    "type": "string",
                    "description": "The subscription ID of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "required": [
                "azureEnvironment",
                "certificate",
                "certificateThumbprint",
                "environments",
                "managementEndpoint",
                "name",
                "spaceId",
                "storageEndpointSuffix",
                "subscriptionId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants"
            ],
            "inputProperties": {
                "azureEnvironment": {
                    "type": "string",
                    "description": "The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.\n"
                },
                "certificate": {
                    "type": "string",
                    "secret": true
                },
                "certificateThumbprint": {
                    "type": "string",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of this Azure subscription account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "managementEndpoint": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "storageEndpointSuffix": {
                    "type": "string",
                    "description": "The storage endpoint suffix associated with this Azure subscription account.\n"
                },
                "subscriptionId": {
                    "type": "string",
                    "description": "The subscription ID of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "requiredInputs": [
                "managementEndpoint",
                "storageEndpointSuffix",
                "subscriptionId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzureSubscriptionAccount resources.\n",
                "properties": {
                    "azureEnvironment": {
                        "type": "string",
                        "description": "The Azure environment associated with this resource. Valid Azure environments are `AzureCloud`, `AzureChinaCloud`, `AzureGermanCloud`, or `AzureUSGovernment`.\n"
                    },
                    "certificate": {
                        "type": "string",
                        "secret": true
                    },
                    "certificateThumbprint": {
                        "type": "string",
                        "secret": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this Azure subscription account.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "managementEndpoint": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "storageEndpointSuffix": {
                        "type": "string",
                        "description": "The storage endpoint suffix associated with this Azure subscription account.\n"
                    },
                    "subscriptionId": {
                        "type": "string",
                        "description": "The subscription ID of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/azureWebAppDeploymentTarget:AzureWebAppDeploymentTarget": {
            "description": "This resource manages Azure web app deployment targets in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.AzureWebAppDeploymentTarget(\"example\", {\n    accountId: \"Accounts-123\",\n    environments: [\"Environments-123\"],\n    resourceGroupName: \"resource-group-name\",\n    roles: [\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenantedDeploymentParticipation: \"Untenanted\",\n    webAppName: \"web-app-name\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.AzureWebAppDeploymentTarget(\"example\",\n    account_id=\"Accounts-123\",\n    environments=[\"Environments-123\"],\n    resource_group_name=\"resource-group-name\",\n    roles=[\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenanted_deployment_participation=\"Untenanted\",\n    web_app_name=\"web-app-name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.AzureWebAppDeploymentTarget(\"example\", new()\n    {\n        AccountId = \"Accounts-123\",\n        Environments = new[]\n        {\n            \"Environments-123\",\n        },\n        ResourceGroupName = \"resource-group-name\",\n        Roles = new[]\n        {\n            \"Development Team\",\n            \"System Administrators\",\n        },\n        TenantedDeploymentParticipation = \"Untenanted\",\n        WebAppName = \"web-app-name\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewAzureWebAppDeploymentTarget(ctx, \"example\", \u0026octopusdeploy.AzureWebAppDeploymentTargetArgs{\n\t\t\tAccountId: pulumi.String(\"Accounts-123\"),\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Environments-123\"),\n\t\t\t},\n\t\t\tResourceGroupName: pulumi.String(\"resource-group-name\"),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Development Team\"),\n\t\t\t\tpulumi.String(\"System Administrators\"),\n\t\t\t},\n\t\t\tTenantedDeploymentParticipation: pulumi.String(\"Untenanted\"),\n\t\t\tWebAppName:                      pulumi.String(\"web-app-name\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.AzureWebAppDeploymentTarget;\nimport com.pulumi.octopusdeploy.AzureWebAppDeploymentTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AzureWebAppDeploymentTarget(\"example\", AzureWebAppDeploymentTargetArgs.builder()        \n            .accountId(\"Accounts-123\")\n            .environments(\"Environments-123\")\n            .resourceGroupName(\"resource-group-name\")\n            .roles(            \n                \"Development Team\",\n                \"System Administrators\")\n            .tenantedDeploymentParticipation(\"Untenanted\")\n            .webAppName(\"web-app-name\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:AzureWebAppDeploymentTarget\n    properties:\n      accountId: Accounts-123\n      environments:\n        - Environments-123\n      resourceGroupName: resource-group-name\n      roles:\n        - Development Team\n        - System Administrators\n      tenantedDeploymentParticipation: Untenanted\n      webAppName: web-app-name\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/azureWebAppDeploymentTarget:AzureWebAppDeploymentTarget [options] octopusdeploy_azure_web_app_deployment_target.\u003cname\u003e \u003cmachine-id\u003e\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureWebAppDeploymentTargetEndpoint:AzureWebAppDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                }
            },
            "required": [
                "accountId",
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "resourceGroupName",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri",
                "webAppName"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/AzureWebAppDeploymentTargetEndpoint:AzureWebAppDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "webAppName": {
                    "type": "string"
                },
                "webAppSlotName": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "accountId",
                "environments",
                "resourceGroupName",
                "roles",
                "webAppName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzureWebAppDeploymentTarget resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/AzureWebAppDeploymentTargetEndpoint:AzureWebAppDeploymentTargetEndpoint"
                        }
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "hasLatestCalamari": {
                        "type": "boolean"
                    },
                    "healthStatus": {
                        "type": "string",
                        "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isInProcess": {
                        "type": "boolean"
                    },
                    "machinePolicyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "resourceGroupName": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellName": {
                        "type": "string"
                    },
                    "shellVersion": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                    },
                    "statusSummary": {
                        "type": "string",
                        "description": "A summary elaborating on the status of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "thumbprint": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    },
                    "webAppName": {
                        "type": "string"
                    },
                    "webAppSlotName": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/certificate:Certificate": {
            "description": "This resource manages certificates in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.Certificate(\"example\", {\n    certificateData: \"a-base-64-encoded-string-representing-the-certificate-data\",\n    password: \"###########\",\n});\n// required; get from secure environment/store\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.Certificate(\"example\",\n    certificate_data=\"a-base-64-encoded-string-representing-the-certificate-data\",\n    password=\"###########\")\n# required; get from secure environment/store\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.Certificate(\"example\", new()\n    {\n        CertificateData = \"a-base-64-encoded-string-representing-the-certificate-data\",\n        Password = \"###########\",\n    });\n\n    // required; get from secure environment/store\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewCertificate(ctx, \"example\", \u0026octopusdeploy.CertificateArgs{\n\t\t\tCertificateData: pulumi.String(\"a-base-64-encoded-string-representing-the-certificate-data\"),\n\t\t\tPassword:        pulumi.String(\"###########\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.Certificate;\nimport com.pulumi.octopusdeploy.CertificateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Certificate(\"example\", CertificateArgs.builder()        \n            .certificateData(\"a-base-64-encoded-string-representing-the-certificate-data\")\n            .password(\"###########\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:Certificate\n    properties:\n      certificateData: a-base-64-encoded-string-representing-the-certificate-data\n      password: '###########'\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/certificate:Certificate [options] octopusdeploy_certificate.\u003cname\u003e \u003ccertificate-id\u003e\n```\n\n ",
            "properties": {
                "archived": {
                    "type": "string"
                },
                "certificateData": {
                    "type": "string",
                    "description": "The encoded data of the certificate.\n",
                    "secret": true
                },
                "certificateDataFormat": {
                    "type": "string",
                    "description": "Specifies the archive file format used for storing cryptography objects in the certificate. Valid formats are `Der`, `Pem`, `Pkcs12`, or `Unknown`.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasPrivateKey": {
                    "type": "boolean",
                    "description": "Indicates if the certificate has a private key.\n"
                },
                "isExpired": {
                    "type": "boolean",
                    "description": "Indicates if the certificate has expired.\n"
                },
                "issuerCommonName": {
                    "type": "string"
                },
                "issuerDistinguishedName": {
                    "type": "string"
                },
                "issuerOrganization": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notAfter": {
                    "type": "string"
                },
                "notBefore": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "replacedBy": {
                    "type": "string"
                },
                "selfSigned": {
                    "type": "boolean"
                },
                "serialNumber": {
                    "type": "string"
                },
                "signatureAlgorithmName": {
                    "type": "string"
                },
                "subjectAlternativeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subjectCommonName": {
                    "type": "string"
                },
                "subjectDistinguishedName": {
                    "type": "string"
                },
                "subjectOrganization": {
                    "type": "string"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "archived",
                "certificateData",
                "certificateDataFormat",
                "environments",
                "hasPrivateKey",
                "isExpired",
                "issuerCommonName",
                "issuerDistinguishedName",
                "issuerOrganization",
                "name",
                "notAfter",
                "notBefore",
                "notes",
                "password",
                "replacedBy",
                "selfSigned",
                "serialNumber",
                "signatureAlgorithmName",
                "subjectAlternativeNames",
                "subjectCommonName",
                "subjectDistinguishedName",
                "subjectOrganization",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "version"
            ],
            "inputProperties": {
                "archived": {
                    "type": "string"
                },
                "certificateData": {
                    "type": "string",
                    "description": "The encoded data of the certificate.\n",
                    "secret": true
                },
                "certificateDataFormat": {
                    "type": "string",
                    "description": "Specifies the archive file format used for storing cryptography objects in the certificate. Valid formats are `Der`, `Pem`, `Pkcs12`, or `Unknown`.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasPrivateKey": {
                    "type": "boolean",
                    "description": "Indicates if the certificate has a private key.\n"
                },
                "isExpired": {
                    "type": "boolean",
                    "description": "Indicates if the certificate has expired.\n"
                },
                "issuerCommonName": {
                    "type": "string"
                },
                "issuerDistinguishedName": {
                    "type": "string"
                },
                "issuerOrganization": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "notAfter": {
                    "type": "string"
                },
                "notBefore": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "replacedBy": {
                    "type": "string"
                },
                "selfSigned": {
                    "type": "boolean"
                },
                "serialNumber": {
                    "type": "string"
                },
                "signatureAlgorithmName": {
                    "type": "string"
                },
                "subjectAlternativeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subjectCommonName": {
                    "type": "string"
                },
                "subjectDistinguishedName": {
                    "type": "string"
                },
                "subjectOrganization": {
                    "type": "string"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "certificateData",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Certificate resources.\n",
                "properties": {
                    "archived": {
                        "type": "string"
                    },
                    "certificateData": {
                        "type": "string",
                        "description": "The encoded data of the certificate.\n",
                        "secret": true
                    },
                    "certificateDataFormat": {
                        "type": "string",
                        "description": "Specifies the archive file format used for storing cryptography objects in the certificate. Valid formats are `Der`, `Pem`, `Pkcs12`, or `Unknown`.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "hasPrivateKey": {
                        "type": "boolean",
                        "description": "Indicates if the certificate has a private key.\n"
                    },
                    "isExpired": {
                        "type": "boolean",
                        "description": "Indicates if the certificate has expired.\n"
                    },
                    "issuerCommonName": {
                        "type": "string"
                    },
                    "issuerDistinguishedName": {
                        "type": "string"
                    },
                    "issuerOrganization": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "notAfter": {
                        "type": "string"
                    },
                    "notBefore": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password associated with this resource.\n",
                        "secret": true
                    },
                    "replacedBy": {
                        "type": "string"
                    },
                    "selfSigned": {
                        "type": "boolean"
                    },
                    "serialNumber": {
                        "type": "string"
                    },
                    "signatureAlgorithmName": {
                        "type": "string"
                    },
                    "subjectAlternativeNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "subjectCommonName": {
                        "type": "string"
                    },
                    "subjectDistinguishedName": {
                        "type": "string"
                    },
                    "subjectOrganization": {
                        "type": "string"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "thumbprint": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/channel:Channel": {
            "description": "This resource manages channels in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.Channel(\"example\", {projectId: \"Projects-123\"});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.Channel(\"example\", project_id=\"Projects-123\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.Channel(\"example\", new()\n    {\n        ProjectId = \"Projects-123\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewChannel(ctx, \"example\", \u0026octopusdeploy.ChannelArgs{\n\t\t\tProjectId: pulumi.String(\"Projects-123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.Channel;\nimport com.pulumi.octopusdeploy.ChannelArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Channel(\"example\", ChannelArgs.builder()        \n            .projectId(\"Projects-123\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:Channel\n    properties:\n      projectId: Projects-123\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/channel:Channel [options] octopusdeploy_channel.\u003cname\u003e \u003cchannel-id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this channel.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Indicates if this is the default channel for the associated project.\n"
                },
                "lifecycleId": {
                    "type": "string",
                    "description": "The lifecycle ID associated with this channel.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID associated with this channel.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ChannelRule:ChannelRule"
                    },
                    "description": "A list of rules associated with this channel.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                }
            },
            "required": [
                "name",
                "projectId",
                "spaceId",
                "tenantTags"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this channel.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Indicates if this is the default channel for the associated project.\n"
                },
                "lifecycleId": {
                    "type": "string",
                    "description": "The lifecycle ID associated with this channel.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID associated with this channel.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ChannelRule:ChannelRule"
                    },
                    "description": "A list of rules associated with this channel.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                }
            },
            "requiredInputs": [
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Channel resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this channel.\n"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Indicates if this is the default channel for the associated project.\n"
                    },
                    "lifecycleId": {
                        "type": "string",
                        "description": "The lifecycle ID associated with this channel.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project ID associated with this channel.\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/ChannelRule:ChannelRule"
                        },
                        "description": "A list of rules associated with this channel.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/cloudRegionDeploymentTarget:CloudRegionDeploymentTarget": {
            "description": "This resource manages cloud region deployment targets in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.CloudRegionDeploymentTarget(\"example\", {\n    defaultWorkerPoolId: \"WorkerPools-123\",\n    environments: [\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    roles: [\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.CloudRegionDeploymentTarget(\"example\",\n    default_worker_pool_id=\"WorkerPools-123\",\n    environments=[\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    roles=[\n        \"Development Team\",\n        \"System Administrators\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.CloudRegionDeploymentTarget(\"example\", new()\n    {\n        DefaultWorkerPoolId = \"WorkerPools-123\",\n        Environments = new[]\n        {\n            \"Environments-123\",\n            \"Environment-321\",\n        },\n        Roles = new[]\n        {\n            \"Development Team\",\n            \"System Administrators\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewCloudRegionDeploymentTarget(ctx, \"example\", \u0026octopusdeploy.CloudRegionDeploymentTargetArgs{\n\t\t\tDefaultWorkerPoolId: pulumi.String(\"WorkerPools-123\"),\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Environments-123\"),\n\t\t\t\tpulumi.String(\"Environment-321\"),\n\t\t\t},\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Development Team\"),\n\t\t\t\tpulumi.String(\"System Administrators\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.CloudRegionDeploymentTarget;\nimport com.pulumi.octopusdeploy.CloudRegionDeploymentTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new CloudRegionDeploymentTarget(\"example\", CloudRegionDeploymentTargetArgs.builder()        \n            .defaultWorkerPoolId(\"WorkerPools-123\")\n            .environments(            \n                \"Environments-123\",\n                \"Environment-321\")\n            .roles(            \n                \"Development Team\",\n                \"System Administrators\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:CloudRegionDeploymentTarget\n    properties:\n      defaultWorkerPoolId: WorkerPools-123\n      environments:\n        - Environments-123\n        - Environment-321\n      roles:\n        - Development Team\n        - System Administrators\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/cloudRegionDeploymentTarget:CloudRegionDeploymentTarget [options] octopusdeploy_cloud_region_deployment_target.\u003cname\u003e \u003cmachine-id\u003e\n```\n\n ",
            "properties": {
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "required": [
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "inputProperties": {
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "environments",
                "roles"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudRegionDeploymentTarget resources.\n",
                "properties": {
                    "defaultWorkerPoolId": {
                        "type": "string"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "hasLatestCalamari": {
                        "type": "boolean"
                    },
                    "healthStatus": {
                        "type": "string",
                        "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isInProcess": {
                        "type": "boolean"
                    },
                    "machinePolicyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellName": {
                        "type": "string"
                    },
                    "shellVersion": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                    },
                    "statusSummary": {
                        "type": "string",
                        "description": "A summary elaborating on the status of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "thumbprint": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/deploymentProcess:DeploymentProcess": {
            "description": "This resource manages deployment processes in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\n// basic deployment process with 2 run a script steps\nconst example = new octopusdeploy.DeploymentProcess(\"example\", {\n    projectId: \"Projects-123\",\n    steps: [\n        {\n            condition: \"Success\",\n            name: \"Hello world (using PowerShell)\",\n            packageRequirement: \"LetOctopusDecide\",\n            runScriptActions: [{\n                canBeUsedForProjectVersioning: false,\n                condition: \"Success\",\n                isDisabled: false,\n                isRequired: true,\n                name: \"Hello world (using PowerShell)\",\n                runOnServer: true,\n                scriptBody: `  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n`,\n            }],\n            startTrigger: \"StartAfterPrevious\",\n        },\n        {\n            condition: \"Success\",\n            name: \"Hello world (using Bash)\",\n            packageRequirement: \"LetOctopusDecide\",\n            runScriptActions: [{\n                canBeUsedForProjectVersioning: false,\n                condition: \"Success\",\n                isDisabled: false,\n                isRequired: true,\n                name: \"Hello world (using Bash)\",\n                runOnServer: true,\n                scriptBody: `  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n`,\n            }],\n            startTrigger: \"StartWithPrevious\",\n        },\n    ],\n});\n// basic deployment process with 2 run a script steps as child steps\nconst childStepExample = new octopusdeploy.DeploymentProcess(\"childStepExample\", {\n    projectId: \"Projects-123\",\n    steps: [{\n        condition: \"Success\",\n        name: \"Hello world (using PowerShell)\",\n        packageRequirement: \"LetOctopusDecide\",\n        runScriptActions: [\n            {\n                canBeUsedForProjectVersioning: false,\n                condition: \"Success\",\n                isDisabled: false,\n                isRequired: true,\n                name: \"Hello world (using PowerShell)\",\n                scriptBody: `  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n`,\n            },\n            {\n                canBeUsedForProjectVersioning: false,\n                condition: \"Success\",\n                isDisabled: false,\n                isRequired: true,\n                name: \"Hello world (using Bash)\",\n                scriptBody: `  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n`,\n            },\n        ],\n        startTrigger: \"StartAfterPrevious\",\n        targetRoles: [\"hello-world\"],\n    }],\n});\n// rolling deployment process with a step with 2 run a script steps as child steps deploying to 2 targets in parallel\nconst childStepRollingDeploymentExample = new octopusdeploy.DeploymentProcess(\"childStepRollingDeploymentExample\", {\n    projectId: \"Projects-123\",\n    steps: [{\n        condition: \"Success\",\n        name: \"Hello world (using PowerShell)\",\n        packageRequirement: \"LetOctopusDecide\",\n        runScriptActions: [\n            {\n                canBeUsedForProjectVersioning: false,\n                condition: \"Success\",\n                isDisabled: false,\n                isRequired: true,\n                name: \"Hello world (using PowerShell)\",\n                scriptBody: `  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n`,\n            },\n            {\n                canBeUsedForProjectVersioning: false,\n                condition: \"Success\",\n                isDisabled: false,\n                isRequired: true,\n                name: \"Hello world (using Bash)\",\n                scriptBody: `  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n`,\n            },\n        ],\n        startTrigger: \"StartAfterPrevious\",\n        targetRoles: [\"hello-world\"],\n        windowSize: \"2\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\n# basic deployment process with 2 run a script steps\nexample = octopusdeploy.DeploymentProcess(\"example\",\n    project_id=\"Projects-123\",\n    steps=[\n        octopusdeploy.DeploymentProcessStepArgs(\n            condition=\"Success\",\n            name=\"Hello world (using PowerShell)\",\n            package_requirement=\"LetOctopusDecide\",\n            run_script_actions=[octopusdeploy.DeploymentProcessStepRunScriptActionArgs(\n                can_be_used_for_project_versioning=False,\n                condition=\"Success\",\n                is_disabled=False,\n                is_required=True,\n                name=\"Hello world (using PowerShell)\",\n                run_on_server=True,\n                script_body=\"\"\"  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\"\"\",\n            )],\n            start_trigger=\"StartAfterPrevious\",\n        ),\n        octopusdeploy.DeploymentProcessStepArgs(\n            condition=\"Success\",\n            name=\"Hello world (using Bash)\",\n            package_requirement=\"LetOctopusDecide\",\n            run_script_actions=[octopusdeploy.DeploymentProcessStepRunScriptActionArgs(\n                can_be_used_for_project_versioning=False,\n                condition=\"Success\",\n                is_disabled=False,\n                is_required=True,\n                name=\"Hello world (using Bash)\",\n                run_on_server=True,\n                script_body=\"\"\"  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\"\"\",\n            )],\n            start_trigger=\"StartWithPrevious\",\n        ),\n    ])\n# basic deployment process with 2 run a script steps as child steps\nchild_step_example = octopusdeploy.DeploymentProcess(\"childStepExample\",\n    project_id=\"Projects-123\",\n    steps=[octopusdeploy.DeploymentProcessStepArgs(\n        condition=\"Success\",\n        name=\"Hello world (using PowerShell)\",\n        package_requirement=\"LetOctopusDecide\",\n        run_script_actions=[\n            octopusdeploy.DeploymentProcessStepRunScriptActionArgs(\n                can_be_used_for_project_versioning=False,\n                condition=\"Success\",\n                is_disabled=False,\n                is_required=True,\n                name=\"Hello world (using PowerShell)\",\n                script_body=\"\"\"  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\"\"\",\n            ),\n            octopusdeploy.DeploymentProcessStepRunScriptActionArgs(\n                can_be_used_for_project_versioning=False,\n                condition=\"Success\",\n                is_disabled=False,\n                is_required=True,\n                name=\"Hello world (using Bash)\",\n                script_body=\"\"\"  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\"\"\",\n            ),\n        ],\n        start_trigger=\"StartAfterPrevious\",\n        target_roles=[\"hello-world\"],\n    )])\n# rolling deployment process with a step with 2 run a script steps as child steps deploying to 2 targets in parallel\nchild_step_rolling_deployment_example = octopusdeploy.DeploymentProcess(\"childStepRollingDeploymentExample\",\n    project_id=\"Projects-123\",\n    steps=[octopusdeploy.DeploymentProcessStepArgs(\n        condition=\"Success\",\n        name=\"Hello world (using PowerShell)\",\n        package_requirement=\"LetOctopusDecide\",\n        run_script_actions=[\n            octopusdeploy.DeploymentProcessStepRunScriptActionArgs(\n                can_be_used_for_project_versioning=False,\n                condition=\"Success\",\n                is_disabled=False,\n                is_required=True,\n                name=\"Hello world (using PowerShell)\",\n                script_body=\"\"\"  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\"\"\",\n            ),\n            octopusdeploy.DeploymentProcessStepRunScriptActionArgs(\n                can_be_used_for_project_versioning=False,\n                condition=\"Success\",\n                is_disabled=False,\n                is_required=True,\n                name=\"Hello world (using Bash)\",\n                script_body=\"\"\"  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\"\"\",\n            ),\n        ],\n        start_trigger=\"StartAfterPrevious\",\n        target_roles=[\"hello-world\"],\n        window_size=\"2\",\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // basic deployment process with 2 run a script steps\n    var example = new Octopusdeploy.DeploymentProcess(\"example\", new()\n    {\n        ProjectId = \"Projects-123\",\n        Steps = new[]\n        {\n            new Octopusdeploy.Inputs.DeploymentProcessStepArgs\n            {\n                Condition = \"Success\",\n                Name = \"Hello world (using PowerShell)\",\n                PackageRequirement = \"LetOctopusDecide\",\n                RunScriptActions = new[]\n                {\n                    new Octopusdeploy.Inputs.DeploymentProcessStepRunScriptActionArgs\n                    {\n                        CanBeUsedForProjectVersioning = false,\n                        Condition = \"Success\",\n                        IsDisabled = false,\n                        IsRequired = true,\n                        Name = \"Hello world (using PowerShell)\",\n                        RunOnServer = true,\n                        ScriptBody = @\"  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\",\n                    },\n                },\n                StartTrigger = \"StartAfterPrevious\",\n            },\n            new Octopusdeploy.Inputs.DeploymentProcessStepArgs\n            {\n                Condition = \"Success\",\n                Name = \"Hello world (using Bash)\",\n                PackageRequirement = \"LetOctopusDecide\",\n                RunScriptActions = new[]\n                {\n                    new Octopusdeploy.Inputs.DeploymentProcessStepRunScriptActionArgs\n                    {\n                        CanBeUsedForProjectVersioning = false,\n                        Condition = \"Success\",\n                        IsDisabled = false,\n                        IsRequired = true,\n                        Name = \"Hello world (using Bash)\",\n                        RunOnServer = true,\n                        ScriptBody = @\"  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\",\n                    },\n                },\n                StartTrigger = \"StartWithPrevious\",\n            },\n        },\n    });\n\n    // basic deployment process with 2 run a script steps as child steps\n    var childStepExample = new Octopusdeploy.DeploymentProcess(\"childStepExample\", new()\n    {\n        ProjectId = \"Projects-123\",\n        Steps = new[]\n        {\n            new Octopusdeploy.Inputs.DeploymentProcessStepArgs\n            {\n                Condition = \"Success\",\n                Name = \"Hello world (using PowerShell)\",\n                PackageRequirement = \"LetOctopusDecide\",\n                RunScriptActions = new[]\n                {\n                    new Octopusdeploy.Inputs.DeploymentProcessStepRunScriptActionArgs\n                    {\n                        CanBeUsedForProjectVersioning = false,\n                        Condition = \"Success\",\n                        IsDisabled = false,\n                        IsRequired = true,\n                        Name = \"Hello world (using PowerShell)\",\n                        ScriptBody = @\"  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\",\n                    },\n                    new Octopusdeploy.Inputs.DeploymentProcessStepRunScriptActionArgs\n                    {\n                        CanBeUsedForProjectVersioning = false,\n                        Condition = \"Success\",\n                        IsDisabled = false,\n                        IsRequired = true,\n                        Name = \"Hello world (using Bash)\",\n                        ScriptBody = @\"  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\",\n                    },\n                },\n                StartTrigger = \"StartAfterPrevious\",\n                TargetRoles = new[]\n                {\n                    \"hello-world\",\n                },\n            },\n        },\n    });\n\n    // rolling deployment process with a step with 2 run a script steps as child steps deploying to 2 targets in parallel\n    var childStepRollingDeploymentExample = new Octopusdeploy.DeploymentProcess(\"childStepRollingDeploymentExample\", new()\n    {\n        ProjectId = \"Projects-123\",\n        Steps = new[]\n        {\n            new Octopusdeploy.Inputs.DeploymentProcessStepArgs\n            {\n                Condition = \"Success\",\n                Name = \"Hello world (using PowerShell)\",\n                PackageRequirement = \"LetOctopusDecide\",\n                RunScriptActions = new[]\n                {\n                    new Octopusdeploy.Inputs.DeploymentProcessStepRunScriptActionArgs\n                    {\n                        CanBeUsedForProjectVersioning = false,\n                        Condition = \"Success\",\n                        IsDisabled = false,\n                        IsRequired = true,\n                        Name = \"Hello world (using PowerShell)\",\n                        ScriptBody = @\"  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\",\n                    },\n                    new Octopusdeploy.Inputs.DeploymentProcessStepRunScriptActionArgs\n                    {\n                        CanBeUsedForProjectVersioning = false,\n                        Condition = \"Success\",\n                        IsDisabled = false,\n                        IsRequired = true,\n                        Name = \"Hello world (using Bash)\",\n                        ScriptBody = @\"  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n\",\n                    },\n                },\n                StartTrigger = \"StartAfterPrevious\",\n                TargetRoles = new[]\n                {\n                    \"hello-world\",\n                },\n                WindowSize = \"2\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewDeploymentProcess(ctx, \"example\", \u0026octopusdeploy.DeploymentProcessArgs{\n\t\t\tProjectId: pulumi.String(\"Projects-123\"),\n\t\t\tSteps: octopusdeploy.DeploymentProcessStepArray{\n\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepArgs{\n\t\t\t\t\tCondition:          pulumi.String(\"Success\"),\n\t\t\t\t\tName:               pulumi.String(\"Hello world (using PowerShell)\"),\n\t\t\t\t\tPackageRequirement: pulumi.String(\"LetOctopusDecide\"),\n\t\t\t\t\tRunScriptActions: octopusdeploy.DeploymentProcessStepRunScriptActionArray{\n\t\t\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepRunScriptActionArgs{\n\t\t\t\t\t\t\tCanBeUsedForProjectVersioning: pulumi.Bool(false),\n\t\t\t\t\t\t\tCondition:                     pulumi.String(\"Success\"),\n\t\t\t\t\t\t\tIsDisabled:                    pulumi.Bool(false),\n\t\t\t\t\t\t\tIsRequired:                    pulumi.Bool(true),\n\t\t\t\t\t\t\tName:                          pulumi.String(\"Hello world (using PowerShell)\"),\n\t\t\t\t\t\t\tRunOnServer:                   pulumi.Bool(true),\n\t\t\t\t\t\t\tScriptBody:                    pulumi.String(\"  Write-Host 'Hello world, using PowerShell'\\n  #TODO: Experiment with steps of your own :)\\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\\n\\n\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tStartTrigger: pulumi.String(\"StartAfterPrevious\"),\n\t\t\t\t},\n\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepArgs{\n\t\t\t\t\tCondition:          pulumi.String(\"Success\"),\n\t\t\t\t\tName:               pulumi.String(\"Hello world (using Bash)\"),\n\t\t\t\t\tPackageRequirement: pulumi.String(\"LetOctopusDecide\"),\n\t\t\t\t\tRunScriptActions: octopusdeploy.DeploymentProcessStepRunScriptActionArray{\n\t\t\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepRunScriptActionArgs{\n\t\t\t\t\t\t\tCanBeUsedForProjectVersioning: pulumi.Bool(false),\n\t\t\t\t\t\t\tCondition:                     pulumi.String(\"Success\"),\n\t\t\t\t\t\t\tIsDisabled:                    pulumi.Bool(false),\n\t\t\t\t\t\t\tIsRequired:                    pulumi.Bool(true),\n\t\t\t\t\t\t\tName:                          pulumi.String(\"Hello world (using Bash)\"),\n\t\t\t\t\t\t\tRunOnServer:                   pulumi.Bool(true),\n\t\t\t\t\t\t\tScriptBody:                    pulumi.String(\"  echo 'Hello world, using Bash'\\n  #TODO: Experiment with steps of your own :)\\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\\n\\n\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tStartTrigger: pulumi.String(\"StartWithPrevious\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = octopusdeploy.NewDeploymentProcess(ctx, \"childStepExample\", \u0026octopusdeploy.DeploymentProcessArgs{\n\t\t\tProjectId: pulumi.String(\"Projects-123\"),\n\t\t\tSteps: octopusdeploy.DeploymentProcessStepArray{\n\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepArgs{\n\t\t\t\t\tCondition:          pulumi.String(\"Success\"),\n\t\t\t\t\tName:               pulumi.String(\"Hello world (using PowerShell)\"),\n\t\t\t\t\tPackageRequirement: pulumi.String(\"LetOctopusDecide\"),\n\t\t\t\t\tRunScriptActions: octopusdeploy.DeploymentProcessStepRunScriptActionArray{\n\t\t\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepRunScriptActionArgs{\n\t\t\t\t\t\t\tCanBeUsedForProjectVersioning: pulumi.Bool(false),\n\t\t\t\t\t\t\tCondition:                     pulumi.String(\"Success\"),\n\t\t\t\t\t\t\tIsDisabled:                    pulumi.Bool(false),\n\t\t\t\t\t\t\tIsRequired:                    pulumi.Bool(true),\n\t\t\t\t\t\t\tName:                          pulumi.String(\"Hello world (using PowerShell)\"),\n\t\t\t\t\t\t\tScriptBody:                    pulumi.String(\"  Write-Host 'Hello world, using PowerShell'\\n  #TODO: Experiment with steps of your own :)\\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\\n\\n\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepRunScriptActionArgs{\n\t\t\t\t\t\t\tCanBeUsedForProjectVersioning: pulumi.Bool(false),\n\t\t\t\t\t\t\tCondition:                     pulumi.String(\"Success\"),\n\t\t\t\t\t\t\tIsDisabled:                    pulumi.Bool(false),\n\t\t\t\t\t\t\tIsRequired:                    pulumi.Bool(true),\n\t\t\t\t\t\t\tName:                          pulumi.String(\"Hello world (using Bash)\"),\n\t\t\t\t\t\t\tScriptBody:                    pulumi.String(\"  echo 'Hello world, using Bash'\\n  #TODO: Experiment with steps of your own :)\\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\\n\\n\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tStartTrigger: pulumi.String(\"StartAfterPrevious\"),\n\t\t\t\t\tTargetRoles: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"hello-world\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = octopusdeploy.NewDeploymentProcess(ctx, \"childStepRollingDeploymentExample\", \u0026octopusdeploy.DeploymentProcessArgs{\n\t\t\tProjectId: pulumi.String(\"Projects-123\"),\n\t\t\tSteps: octopusdeploy.DeploymentProcessStepArray{\n\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepArgs{\n\t\t\t\t\tCondition:          pulumi.String(\"Success\"),\n\t\t\t\t\tName:               pulumi.String(\"Hello world (using PowerShell)\"),\n\t\t\t\t\tPackageRequirement: pulumi.String(\"LetOctopusDecide\"),\n\t\t\t\t\tRunScriptActions: octopusdeploy.DeploymentProcessStepRunScriptActionArray{\n\t\t\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepRunScriptActionArgs{\n\t\t\t\t\t\t\tCanBeUsedForProjectVersioning: pulumi.Bool(false),\n\t\t\t\t\t\t\tCondition:                     pulumi.String(\"Success\"),\n\t\t\t\t\t\t\tIsDisabled:                    pulumi.Bool(false),\n\t\t\t\t\t\t\tIsRequired:                    pulumi.Bool(true),\n\t\t\t\t\t\t\tName:                          pulumi.String(\"Hello world (using PowerShell)\"),\n\t\t\t\t\t\t\tScriptBody:                    pulumi.String(\"  Write-Host 'Hello world, using PowerShell'\\n  #TODO: Experiment with steps of your own :)\\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\\n\\n\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026octopusdeploy.DeploymentProcessStepRunScriptActionArgs{\n\t\t\t\t\t\t\tCanBeUsedForProjectVersioning: pulumi.Bool(false),\n\t\t\t\t\t\t\tCondition:                     pulumi.String(\"Success\"),\n\t\t\t\t\t\t\tIsDisabled:                    pulumi.Bool(false),\n\t\t\t\t\t\t\tIsRequired:                    pulumi.Bool(true),\n\t\t\t\t\t\t\tName:                          pulumi.String(\"Hello world (using Bash)\"),\n\t\t\t\t\t\t\tScriptBody:                    pulumi.String(\"  echo 'Hello world, using Bash'\\n  #TODO: Experiment with steps of your own :)\\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\\n\\n\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tStartTrigger: pulumi.String(\"StartAfterPrevious\"),\n\t\t\t\t\tTargetRoles: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"hello-world\"),\n\t\t\t\t\t},\n\t\t\t\t\tWindowSize: pulumi.String(\"2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.DeploymentProcess;\nimport com.pulumi.octopusdeploy.DeploymentProcessArgs;\nimport com.pulumi.octopusdeploy.inputs.DeploymentProcessStepArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DeploymentProcess(\"example\", DeploymentProcessArgs.builder()        \n            .projectId(\"Projects-123\")\n            .steps(            \n                DeploymentProcessStepArgs.builder()\n                    .condition(\"Success\")\n                    .name(\"Hello world (using PowerShell)\")\n                    .packageRequirement(\"LetOctopusDecide\")\n                    .runScriptActions(DeploymentProcessStepRunScriptActionArgs.builder()\n                        .canBeUsedForProjectVersioning(false)\n                        .condition(\"Success\")\n                        .isDisabled(false)\n                        .isRequired(true)\n                        .name(\"Hello world (using PowerShell)\")\n                        .runOnServer(true)\n                        .scriptBody(\"\"\"\n  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n                        \"\"\")\n                        .build())\n                    .startTrigger(\"StartAfterPrevious\")\n                    .build(),\n                DeploymentProcessStepArgs.builder()\n                    .condition(\"Success\")\n                    .name(\"Hello world (using Bash)\")\n                    .packageRequirement(\"LetOctopusDecide\")\n                    .runScriptActions(DeploymentProcessStepRunScriptActionArgs.builder()\n                        .canBeUsedForProjectVersioning(false)\n                        .condition(\"Success\")\n                        .isDisabled(false)\n                        .isRequired(true)\n                        .name(\"Hello world (using Bash)\")\n                        .runOnServer(true)\n                        .scriptBody(\"\"\"\n  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n                        \"\"\")\n                        .build())\n                    .startTrigger(\"StartWithPrevious\")\n                    .build())\n            .build());\n\n        var childStepExample = new DeploymentProcess(\"childStepExample\", DeploymentProcessArgs.builder()        \n            .projectId(\"Projects-123\")\n            .steps(DeploymentProcessStepArgs.builder()\n                .condition(\"Success\")\n                .name(\"Hello world (using PowerShell)\")\n                .packageRequirement(\"LetOctopusDecide\")\n                .runScriptActions(                \n                    DeploymentProcessStepRunScriptActionArgs.builder()\n                        .canBeUsedForProjectVersioning(false)\n                        .condition(\"Success\")\n                        .isDisabled(false)\n                        .isRequired(true)\n                        .name(\"Hello world (using PowerShell)\")\n                        .scriptBody(\"\"\"\n  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n                        \"\"\")\n                        .build(),\n                    DeploymentProcessStepRunScriptActionArgs.builder()\n                        .canBeUsedForProjectVersioning(false)\n                        .condition(\"Success\")\n                        .isDisabled(false)\n                        .isRequired(true)\n                        .name(\"Hello world (using Bash)\")\n                        .scriptBody(\"\"\"\n  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n                        \"\"\")\n                        .build())\n                .startTrigger(\"StartAfterPrevious\")\n                .targetRoles(\"hello-world\")\n                .build())\n            .build());\n\n        var childStepRollingDeploymentExample = new DeploymentProcess(\"childStepRollingDeploymentExample\", DeploymentProcessArgs.builder()        \n            .projectId(\"Projects-123\")\n            .steps(DeploymentProcessStepArgs.builder()\n                .condition(\"Success\")\n                .name(\"Hello world (using PowerShell)\")\n                .packageRequirement(\"LetOctopusDecide\")\n                .runScriptActions(                \n                    DeploymentProcessStepRunScriptActionArgs.builder()\n                        .canBeUsedForProjectVersioning(false)\n                        .condition(\"Success\")\n                        .isDisabled(false)\n                        .isRequired(true)\n                        .name(\"Hello world (using PowerShell)\")\n                        .scriptBody(\"\"\"\n  Write-Host 'Hello world, using PowerShell'\n  #TODO: Experiment with steps of your own :)\n  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n                        \"\"\")\n                        .build(),\n                    DeploymentProcessStepRunScriptActionArgs.builder()\n                        .canBeUsedForProjectVersioning(false)\n                        .condition(\"Success\")\n                        .isDisabled(false)\n                        .isRequired(true)\n                        .name(\"Hello world (using Bash)\")\n                        .scriptBody(\"\"\"\n  echo 'Hello world, using Bash'\n  #TODO: Experiment with steps of your own :)\n  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n                        \"\"\")\n                        .build())\n                .startTrigger(\"StartAfterPrevious\")\n                .targetRoles(\"hello-world\")\n                .windowSize(2)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # basic deployment process with 2 run a script steps\n  example:\n    type: octopusdeploy:DeploymentProcess\n    properties:\n      projectId: Projects-123\n      steps:\n        - condition: Success\n          name: Hello world (using PowerShell)\n          packageRequirement: LetOctopusDecide\n          runScriptActions:\n            - canBeUsedForProjectVersioning: false\n              condition: Success\n              isDisabled: false\n              isRequired: true\n              name: Hello world (using PowerShell)\n              runOnServer: true\n              scriptBody: |2+\n                  Write-Host 'Hello world, using PowerShell'\n                  #TODO: Experiment with steps of your own :)\n                  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n          startTrigger: StartAfterPrevious\n        - condition: Success\n          name: Hello world (using Bash)\n          packageRequirement: LetOctopusDecide\n          runScriptActions:\n            - canBeUsedForProjectVersioning: false\n              condition: Success\n              isDisabled: false\n              isRequired: true\n              name: Hello world (using Bash)\n              runOnServer: true\n              scriptBody: |2+\n                  echo 'Hello world, using Bash'\n                  #TODO: Experiment with steps of your own :)\n                  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n          startTrigger: StartWithPrevious\n  # basic deployment process with 2 run a script steps as child steps\n  childStepExample:\n    type: octopusdeploy:DeploymentProcess\n    properties:\n      projectId: Projects-123\n      steps:\n        - condition: Success\n          name: Hello world (using PowerShell)\n          packageRequirement: LetOctopusDecide\n          runScriptActions:\n            - canBeUsedForProjectVersioning: false\n              condition: Success\n              isDisabled: false\n              isRequired: true\n              name: Hello world (using PowerShell)\n              scriptBody: |2+\n                  Write-Host 'Hello world, using PowerShell'\n                  #TODO: Experiment with steps of your own :)\n                  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n            - canBeUsedForProjectVersioning: false\n              condition: Success\n              isDisabled: false\n              isRequired: true\n              name: Hello world (using Bash)\n              scriptBody: |2+\n                  echo 'Hello world, using Bash'\n                  #TODO: Experiment with steps of your own :)\n                  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n          startTrigger: StartAfterPrevious\n          targetRoles:\n            - hello-world\n  # rolling deployment process with a step with 2 run a script steps as child steps deploying to 2 targets in parallel\n  childStepRollingDeploymentExample:\n    type: octopusdeploy:DeploymentProcess\n    properties:\n      projectId: Projects-123\n      steps:\n        - condition: Success\n          name: Hello world (using PowerShell)\n          packageRequirement: LetOctopusDecide\n          runScriptActions:\n            - canBeUsedForProjectVersioning: false\n              condition: Success\n              isDisabled: false\n              isRequired: true\n              name: Hello world (using PowerShell)\n              scriptBody: |2+\n                  Write-Host 'Hello world, using PowerShell'\n                  #TODO: Experiment with steps of your own :)\n                  Write-Host '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n            - canBeUsedForProjectVersioning: false\n              condition: Success\n              isDisabled: false\n              isRequired: true\n              name: Hello world (using Bash)\n              scriptBody: |2+\n                  echo 'Hello world, using Bash'\n                  #TODO: Experiment with steps of your own :)\n                  echo '[Learn more about the types of steps available in Octopus](https://g.octopushq.com/OnboardingAddStepsLearnMore)'\n\n          startTrigger: StartAfterPrevious\n          targetRoles:\n            - hello-world\n          windowSize: 2\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/deploymentProcess:DeploymentProcess [options] octopusdeploy_deployment_process.\u003cname\u003e \u003cdeployment-process-id\u003e\n```\n\n ",
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The branch name associated with this deployment process (i.e. `main`). This value is optional and only applies to associated projects that are stored in version control.\n"
                },
                "lastSnapshotId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID associated with this deployment process.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStep:DeploymentProcessStep"
                    }
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this deployment process.\n"
                }
            },
            "required": [
                "branch",
                "projectId",
                "spaceId",
                "version"
            ],
            "inputProperties": {
                "branch": {
                    "type": "string",
                    "description": "The branch name associated with this deployment process (i.e. `main`). This value is optional and only applies to associated projects that are stored in version control.\n"
                },
                "lastSnapshotId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID associated with this deployment process.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/DeploymentProcessStep:DeploymentProcessStep"
                    }
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this deployment process.\n"
                }
            },
            "requiredInputs": [
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DeploymentProcess resources.\n",
                "properties": {
                    "branch": {
                        "type": "string",
                        "description": "The branch name associated with this deployment process (i.e. `main`). This value is optional and only applies to associated projects that are stored in version control.\n"
                    },
                    "lastSnapshotId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project ID associated with this deployment process.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/DeploymentProcessStep:DeploymentProcessStep"
                        }
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version number of this deployment process.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/dockerContainerRegistry:DockerContainerRegistry": {
            "description": "This resource manages a Docker Container Registry in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.DockerContainerRegistry(\"example\", {\n    feedUri: \"https://index.docker.io\",\n    password: \"test-password\",\n    registryPath: \"testing/test-image\",\n    username: \"test-username\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.DockerContainerRegistry(\"example\",\n    feed_uri=\"https://index.docker.io\",\n    password=\"test-password\",\n    registry_path=\"testing/test-image\",\n    username=\"test-username\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.DockerContainerRegistry(\"example\", new()\n    {\n        FeedUri = \"https://index.docker.io\",\n        Password = \"test-password\",\n        RegistryPath = \"testing/test-image\",\n        Username = \"test-username\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewDockerContainerRegistry(ctx, \"example\", \u0026octopusdeploy.DockerContainerRegistryArgs{\n\t\t\tFeedUri:      pulumi.String(\"https://index.docker.io\"),\n\t\t\tPassword:     pulumi.String(\"test-password\"),\n\t\t\tRegistryPath: pulumi.String(\"testing/test-image\"),\n\t\t\tUsername:     pulumi.String(\"test-username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.DockerContainerRegistry;\nimport com.pulumi.octopusdeploy.DockerContainerRegistryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DockerContainerRegistry(\"example\", DockerContainerRegistryArgs.builder()        \n            .feedUri(\"https://index.docker.io\")\n            .password(\"test-password\")\n            .registryPath(\"testing/test-image\")\n            .username(\"test-username\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:DockerContainerRegistry\n    properties:\n      feedUri: https://index.docker.io\n      password: test-password\n      registryPath: testing/test-image\n      username: test-username\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/dockerContainerRegistry:DockerContainerRegistry [options] octopusdeploy_docker_container_registry.\u003cname\u003e \u003cfeed-id\u003e\n```\n\n ",
            "properties": {
                "apiVersion": {
                    "type": "string"
                },
                "feedUri": {
                    "type": "string",
                    "description": "The URL to a Maven repository. This URL is the same value defined in the `repositories`/`repository`/`url` element of a Maven `settings.xml` file.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A short, memorable, unique name for this feed. Example: ACME Builds.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "registryPath": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "required": [
                "feedUri",
                "name",
                "packageAcquisitionLocationOptions",
                "spaceId"
            ],
            "inputProperties": {
                "apiVersion": {
                    "type": "string"
                },
                "feedUri": {
                    "type": "string",
                    "description": "The URL to a Maven repository. This URL is the same value defined in the `repositories`/`repository`/`url` element of a Maven `settings.xml` file.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A short, memorable, unique name for this feed. Example: ACME Builds.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "registryPath": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "feedUri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DockerContainerRegistry resources.\n",
                "properties": {
                    "apiVersion": {
                        "type": "string"
                    },
                    "feedUri": {
                        "type": "string",
                        "description": "The URL to a Maven repository. This URL is the same value defined in the `repositories`/`repository`/`url` element of a Maven `settings.xml` file.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A short, memorable, unique name for this feed. Example: ACME Builds.\n"
                    },
                    "packageAcquisitionLocationOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "password": {
                        "type": "string",
                        "description": "The password associated with this resource.\n",
                        "secret": true
                    },
                    "registryPath": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username associated with this resource.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/dynamicWorkerPool:DynamicWorkerPool": {
            "description": "This resource manages dynamic worker pools in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.DynamicWorkerPool(\"example\", {\n    description: \"Description for the dynamic worker pool.\",\n    isDefault: true,\n    sortOrder: 5,\n    workerType: \"UbuntuDefault\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.DynamicWorkerPool(\"example\",\n    description=\"Description for the dynamic worker pool.\",\n    is_default=True,\n    sort_order=5,\n    worker_type=\"UbuntuDefault\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.DynamicWorkerPool(\"example\", new()\n    {\n        Description = \"Description for the dynamic worker pool.\",\n        IsDefault = true,\n        SortOrder = 5,\n        WorkerType = \"UbuntuDefault\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewDynamicWorkerPool(ctx, \"example\", \u0026octopusdeploy.DynamicWorkerPoolArgs{\n\t\t\tDescription: pulumi.String(\"Description for the dynamic worker pool.\"),\n\t\t\tIsDefault:   pulumi.Bool(true),\n\t\t\tSortOrder:   pulumi.Int(5),\n\t\t\tWorkerType:  pulumi.String(\"UbuntuDefault\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.DynamicWorkerPool;\nimport com.pulumi.octopusdeploy.DynamicWorkerPoolArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DynamicWorkerPool(\"example\", DynamicWorkerPoolArgs.builder()        \n            .description(\"Description for the dynamic worker pool.\")\n            .isDefault(true)\n            .sortOrder(5)\n            .workerType(\"UbuntuDefault\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:DynamicWorkerPool\n    properties:\n      description: Description for the dynamic worker pool.\n      isDefault: true\n      sortOrder: 5\n      workerType: UbuntuDefault\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "canAddWorkers": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this dynamic worker pool.\n"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The order number to sort a dynamic worker pool.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "workerType": {
                    "type": "string"
                }
            },
            "required": [
                "canAddWorkers",
                "name",
                "sortOrder",
                "spaceId",
                "workerType"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this dynamic worker pool.\n"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The order number to sort a dynamic worker pool.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "workerType": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "workerType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DynamicWorkerPool resources.\n",
                "properties": {
                    "canAddWorkers": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this dynamic worker pool.\n"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "sortOrder": {
                        "type": "integer",
                        "description": "The order number to sort a dynamic worker pool.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "workerType": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/environment:Environment": {
            "description": "This resource manages environments in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.Environment(\"example\", {\n    allowDynamicInfrastructure: false,\n    description: \"An environment for the development team.\",\n    jiraExtensionSettings: {\n        environmentType: \"unmapped\",\n    },\n    jiraServiceManagementExtensionSettings: {\n        isEnabled: false,\n    },\n    servicenowExtensionSettings: {\n        isEnabled: false,\n    },\n    useGuidedFailure: false,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.Environment(\"example\",\n    allow_dynamic_infrastructure=False,\n    description=\"An environment for the development team.\",\n    jira_extension_settings=octopusdeploy.EnvironmentJiraExtensionSettingsArgs(\n        environment_type=\"unmapped\",\n    ),\n    jira_service_management_extension_settings=octopusdeploy.EnvironmentJiraServiceManagementExtensionSettingsArgs(\n        is_enabled=False,\n    ),\n    servicenow_extension_settings=octopusdeploy.EnvironmentServicenowExtensionSettingsArgs(\n        is_enabled=False,\n    ),\n    use_guided_failure=False)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.Environment(\"example\", new()\n    {\n        AllowDynamicInfrastructure = false,\n        Description = \"An environment for the development team.\",\n        JiraExtensionSettings = new Octopusdeploy.Inputs.EnvironmentJiraExtensionSettingsArgs\n        {\n            EnvironmentType = \"unmapped\",\n        },\n        JiraServiceManagementExtensionSettings = new Octopusdeploy.Inputs.EnvironmentJiraServiceManagementExtensionSettingsArgs\n        {\n            IsEnabled = false,\n        },\n        ServicenowExtensionSettings = new Octopusdeploy.Inputs.EnvironmentServicenowExtensionSettingsArgs\n        {\n            IsEnabled = false,\n        },\n        UseGuidedFailure = false,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewEnvironment(ctx, \"example\", \u0026octopusdeploy.EnvironmentArgs{\n\t\t\tAllowDynamicInfrastructure: pulumi.Bool(false),\n\t\t\tDescription:                pulumi.String(\"An environment for the development team.\"),\n\t\t\tJiraExtensionSettings: \u0026octopusdeploy.EnvironmentJiraExtensionSettingsArgs{\n\t\t\t\tEnvironmentType: pulumi.String(\"unmapped\"),\n\t\t\t},\n\t\t\tJiraServiceManagementExtensionSettings: \u0026octopusdeploy.EnvironmentJiraServiceManagementExtensionSettingsArgs{\n\t\t\t\tIsEnabled: pulumi.Bool(false),\n\t\t\t},\n\t\t\tServicenowExtensionSettings: \u0026octopusdeploy.EnvironmentServicenowExtensionSettingsArgs{\n\t\t\t\tIsEnabled: pulumi.Bool(false),\n\t\t\t},\n\t\t\tUseGuidedFailure: pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.Environment;\nimport com.pulumi.octopusdeploy.EnvironmentArgs;\nimport com.pulumi.octopusdeploy.inputs.EnvironmentJiraExtensionSettingsArgs;\nimport com.pulumi.octopusdeploy.inputs.EnvironmentJiraServiceManagementExtensionSettingsArgs;\nimport com.pulumi.octopusdeploy.inputs.EnvironmentServicenowExtensionSettingsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Environment(\"example\", EnvironmentArgs.builder()        \n            .allowDynamicInfrastructure(false)\n            .description(\"An environment for the development team.\")\n            .jiraExtensionSettings(EnvironmentJiraExtensionSettingsArgs.builder()\n                .environmentType(\"unmapped\")\n                .build())\n            .jiraServiceManagementExtensionSettings(EnvironmentJiraServiceManagementExtensionSettingsArgs.builder()\n                .isEnabled(false)\n                .build())\n            .servicenowExtensionSettings(EnvironmentServicenowExtensionSettingsArgs.builder()\n                .isEnabled(false)\n                .build())\n            .useGuidedFailure(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:Environment\n    properties:\n      allowDynamicInfrastructure: false\n      description: An environment for the development team.\n      jiraExtensionSettings:\n        environmentType: unmapped\n      jiraServiceManagementExtensionSettings:\n        isEnabled: false\n      servicenowExtensionSettings:\n        isEnabled: false\n      useGuidedFailure: false\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/environment:Environment [options] octopusdeploy_environment.\u003cname\u003e \u003cenvironment-id\u003e\n```\n\n ",
            "properties": {
                "allowDynamicInfrastructure": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this environment.\n"
                },
                "jiraExtensionSettings": {
                    "$ref": "#/types/octopusdeploy:index/EnvironmentJiraExtensionSettings:EnvironmentJiraExtensionSettings",
                    "description": "Provides extension settings for the Jira integration for this environment.\n"
                },
                "jiraServiceManagementExtensionSettings": {
                    "$ref": "#/types/octopusdeploy:index/EnvironmentJiraServiceManagementExtensionSettings:EnvironmentJiraServiceManagementExtensionSettings",
                    "description": "Provides extension settings for the Jira Service Management (JSM) integration for this environment.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "servicenowExtensionSettings": {
                    "$ref": "#/types/octopusdeploy:index/EnvironmentServicenowExtensionSettings:EnvironmentServicenowExtensionSettings",
                    "description": "Provides extension settings for the ServiceNow integration for this environment.\n"
                },
                "slug": {
                    "type": "string"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The order number to sort an environment.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this environment.\n"
                },
                "useGuidedFailure": {
                    "type": "boolean"
                }
            },
            "required": [
                "name",
                "slug",
                "sortOrder",
                "spaceId"
            ],
            "inputProperties": {
                "allowDynamicInfrastructure": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this environment.\n"
                },
                "jiraExtensionSettings": {
                    "$ref": "#/types/octopusdeploy:index/EnvironmentJiraExtensionSettings:EnvironmentJiraExtensionSettings",
                    "description": "Provides extension settings for the Jira integration for this environment.\n"
                },
                "jiraServiceManagementExtensionSettings": {
                    "$ref": "#/types/octopusdeploy:index/EnvironmentJiraServiceManagementExtensionSettings:EnvironmentJiraServiceManagementExtensionSettings",
                    "description": "Provides extension settings for the Jira Service Management (JSM) integration for this environment.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "servicenowExtensionSettings": {
                    "$ref": "#/types/octopusdeploy:index/EnvironmentServicenowExtensionSettings:EnvironmentServicenowExtensionSettings",
                    "description": "Provides extension settings for the ServiceNow integration for this environment.\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The order number to sort an environment.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this environment.\n"
                },
                "useGuidedFailure": {
                    "type": "boolean"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Environment resources.\n",
                "properties": {
                    "allowDynamicInfrastructure": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this environment.\n"
                    },
                    "jiraExtensionSettings": {
                        "$ref": "#/types/octopusdeploy:index/EnvironmentJiraExtensionSettings:EnvironmentJiraExtensionSettings",
                        "description": "Provides extension settings for the Jira integration for this environment.\n"
                    },
                    "jiraServiceManagementExtensionSettings": {
                        "$ref": "#/types/octopusdeploy:index/EnvironmentJiraServiceManagementExtensionSettings:EnvironmentJiraServiceManagementExtensionSettings",
                        "description": "Provides extension settings for the Jira Service Management (JSM) integration for this environment.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "servicenowExtensionSettings": {
                        "$ref": "#/types/octopusdeploy:index/EnvironmentServicenowExtensionSettings:EnvironmentServicenowExtensionSettings",
                        "description": "Provides extension settings for the ServiceNow integration for this environment.\n"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "sortOrder": {
                        "type": "integer",
                        "description": "The order number to sort an environment.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this environment.\n"
                    },
                    "useGuidedFailure": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/gcpAccount:GcpAccount": {
            "description": "This resource manages GCP accounts in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.GcpAccount(\"example\", {jsonKey: \"json-key\"});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.GcpAccount(\"example\", json_key=\"json-key\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.GcpAccount(\"example\", new()\n    {\n        JsonKey = \"json-key\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewGcpAccount(ctx, \"example\", \u0026octopusdeploy.GcpAccountArgs{\n\t\t\tJsonKey: pulumi.String(\"json-key\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.GcpAccount;\nimport com.pulumi.octopusdeploy.GcpAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new GcpAccount(\"example\", GcpAccountArgs.builder()        \n            .jsonKey(\"json-key\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:GcpAccount\n    properties:\n      jsonKey: json-key\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/gcpAccount:GcpAccount [options] octopusdeploy_gcp_account.\u003cname\u003e \u003caccount-id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A user-friendly description of this GCP account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "jsonKey": {
                    "type": "string",
                    "description": "The JSON key associated with this GCP account.\n",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of this GCP account.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "required": [
                "environments",
                "jsonKey",
                "name",
                "spaceId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A user-friendly description of this GCP account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "jsonKey": {
                    "type": "string",
                    "description": "The JSON key associated with this GCP account.\n",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of this GCP account.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                }
            },
            "requiredInputs": [
                "jsonKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GcpAccount resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A user-friendly description of this GCP account.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "jsonKey": {
                        "type": "string",
                        "description": "The JSON key associated with this GCP account.\n",
                        "secret": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this GCP account.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/gitCredentials:GitCredentials": {
            "description": "This resource manages Git credentials in Octopus Deploy.\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this Git credential.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Git credential. This name must be unique.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the Git credential.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username for the Git credential.\n"
                }
            },
            "required": [
                "name",
                "password",
                "spaceId",
                "username"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this Git credential.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Git credential. This name must be unique.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the Git credential.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The Git credential authentication type.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username for the Git credential.\n"
                }
            },
            "requiredInputs": [
                "password",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GitCredentials resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this Git credential.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Git credential. This name must be unique.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password for the Git credential.\n",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The Git credential authentication type.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username for the Git credential.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/githubRepositoryFeed:GithubRepositoryFeed": {
            "description": "This resource manages a GitHub repository feed in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.GithubRepositoryFeed(\"example\", {\n    downloadAttempts: 1,\n    downloadRetryBackoffSeconds: 30,\n    feedUri: \"https://api.github.com\",\n    password: \"test-password\",\n    username: \"test-username\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.GithubRepositoryFeed(\"example\",\n    download_attempts=1,\n    download_retry_backoff_seconds=30,\n    feed_uri=\"https://api.github.com\",\n    password=\"test-password\",\n    username=\"test-username\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.GithubRepositoryFeed(\"example\", new()\n    {\n        DownloadAttempts = 1,\n        DownloadRetryBackoffSeconds = 30,\n        FeedUri = \"https://api.github.com\",\n        Password = \"test-password\",\n        Username = \"test-username\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewGithubRepositoryFeed(ctx, \"example\", \u0026octopusdeploy.GithubRepositoryFeedArgs{\n\t\t\tDownloadAttempts:            pulumi.Int(1),\n\t\t\tDownloadRetryBackoffSeconds: pulumi.Int(30),\n\t\t\tFeedUri:                     pulumi.String(\"https://api.github.com\"),\n\t\t\tPassword:                    pulumi.String(\"test-password\"),\n\t\t\tUsername:                    pulumi.String(\"test-username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.GithubRepositoryFeed;\nimport com.pulumi.octopusdeploy.GithubRepositoryFeedArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new GithubRepositoryFeed(\"example\", GithubRepositoryFeedArgs.builder()        \n            .downloadAttempts(1)\n            .downloadRetryBackoffSeconds(30)\n            .feedUri(\"https://api.github.com\")\n            .password(\"test-password\")\n            .username(\"test-username\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:GithubRepositoryFeed\n    properties:\n      downloadAttempts: 1\n      downloadRetryBackoffSeconds: 30\n      feedUri: https://api.github.com\n      password: test-password\n      username: test-username\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/githubRepositoryFeed:GithubRepositoryFeed [options] octopusdeploy_github_repository_feed.\u003cname\u003e \u003cfeed-id\u003e\n```\n\n ",
            "properties": {
                "downloadAttempts": {
                    "type": "integer",
                    "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                },
                "downloadRetryBackoffSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                },
                "feedUri": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A short, memorable, unique name for this feed. Example: ACME Builds.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "required": [
                "feedUri",
                "name",
                "packageAcquisitionLocationOptions",
                "spaceId"
            ],
            "inputProperties": {
                "downloadAttempts": {
                    "type": "integer",
                    "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                },
                "downloadRetryBackoffSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                },
                "feedUri": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A short, memorable, unique name for this feed. Example: ACME Builds.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "feedUri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GithubRepositoryFeed resources.\n",
                "properties": {
                    "downloadAttempts": {
                        "type": "integer",
                        "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                    },
                    "downloadRetryBackoffSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                    },
                    "feedUri": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "A short, memorable, unique name for this feed. Example: ACME Builds.\n"
                    },
                    "packageAcquisitionLocationOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "password": {
                        "type": "string",
                        "description": "The password associated with this resource.\n",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username associated with this resource.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/helmFeed:HelmFeed": {
            "description": "This resource manages a Helm feed in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.HelmFeed(\"example\", {\n    feedUri: \"https://charts.helm.sh/stable\",\n    password: \"test-password\",\n    username: \"test-username\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.HelmFeed(\"example\",\n    feed_uri=\"https://charts.helm.sh/stable\",\n    password=\"test-password\",\n    username=\"test-username\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.HelmFeed(\"example\", new()\n    {\n        FeedUri = \"https://charts.helm.sh/stable\",\n        Password = \"test-password\",\n        Username = \"test-username\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewHelmFeed(ctx, \"example\", \u0026octopusdeploy.HelmFeedArgs{\n\t\t\tFeedUri:  pulumi.String(\"https://charts.helm.sh/stable\"),\n\t\t\tPassword: pulumi.String(\"test-password\"),\n\t\t\tUsername: pulumi.String(\"test-username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.HelmFeed;\nimport com.pulumi.octopusdeploy.HelmFeedArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new HelmFeed(\"example\", HelmFeedArgs.builder()        \n            .feedUri(\"https://charts.helm.sh/stable\")\n            .password(\"test-password\")\n            .username(\"test-username\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:HelmFeed\n    properties:\n      feedUri: https://charts.helm.sh/stable\n      password: test-password\n      username: test-username\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/helmFeed:HelmFeed [options] octopusdeploy_helm_feed.\u003cname\u003e \u003cfeed-id\u003e\n```\n\n ",
            "properties": {
                "feedUri": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A short, memorable, unique name for this feed. Example: ACME Builds.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "required": [
                "feedUri",
                "name",
                "packageAcquisitionLocationOptions",
                "spaceId"
            ],
            "inputProperties": {
                "feedUri": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A short, memorable, unique name for this feed. Example: ACME Builds.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "feedUri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HelmFeed resources.\n",
                "properties": {
                    "feedUri": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "A short, memorable, unique name for this feed. Example: ACME Builds.\n"
                    },
                    "packageAcquisitionLocationOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "password": {
                        "type": "string",
                        "description": "The password associated with this resource.\n",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username associated with this resource.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/kubernetesClusterDeploymentTarget:KubernetesClusterDeploymentTarget": {
            "description": "This resource manages Kubernets cluster deployment targets in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst k8s_target = new octopusdeploy.KubernetesClusterDeploymentTarget(\"k8s-target\", {\n    awsAccountAuthentication: {\n        accountId: \"Accounts-123\",\n        clusterName: \"cluster-name\",\n    },\n    clusterUrl: \"https://example.com:1234/\",\n    environments: [\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    roles: [\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenantedDeploymentParticipation: \"Untenanted\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nk8s_target = octopusdeploy.KubernetesClusterDeploymentTarget(\"k8s-target\",\n    aws_account_authentication=octopusdeploy.KubernetesClusterDeploymentTargetAwsAccountAuthenticationArgs(\n        account_id=\"Accounts-123\",\n        cluster_name=\"cluster-name\",\n    ),\n    cluster_url=\"https://example.com:1234/\",\n    environments=[\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    roles=[\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenanted_deployment_participation=\"Untenanted\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var k8s_target = new Octopusdeploy.KubernetesClusterDeploymentTarget(\"k8s-target\", new()\n    {\n        AwsAccountAuthentication = new Octopusdeploy.Inputs.KubernetesClusterDeploymentTargetAwsAccountAuthenticationArgs\n        {\n            AccountId = \"Accounts-123\",\n            ClusterName = \"cluster-name\",\n        },\n        ClusterUrl = \"https://example.com:1234/\",\n        Environments = new[]\n        {\n            \"Environments-123\",\n            \"Environment-321\",\n        },\n        Roles = new[]\n        {\n            \"Development Team\",\n            \"System Administrators\",\n        },\n        TenantedDeploymentParticipation = \"Untenanted\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewKubernetesClusterDeploymentTarget(ctx, \"k8s-target\", \u0026octopusdeploy.KubernetesClusterDeploymentTargetArgs{\n\t\t\tAwsAccountAuthentication: \u0026octopusdeploy.KubernetesClusterDeploymentTargetAwsAccountAuthenticationArgs{\n\t\t\t\tAccountId:   pulumi.String(\"Accounts-123\"),\n\t\t\t\tClusterName: pulumi.String(\"cluster-name\"),\n\t\t\t},\n\t\t\tClusterUrl: pulumi.String(\"https://example.com:1234/\"),\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Environments-123\"),\n\t\t\t\tpulumi.String(\"Environment-321\"),\n\t\t\t},\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Development Team\"),\n\t\t\t\tpulumi.String(\"System Administrators\"),\n\t\t\t},\n\t\t\tTenantedDeploymentParticipation: pulumi.String(\"Untenanted\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.KubernetesClusterDeploymentTarget;\nimport com.pulumi.octopusdeploy.KubernetesClusterDeploymentTargetArgs;\nimport com.pulumi.octopusdeploy.inputs.KubernetesClusterDeploymentTargetAwsAccountAuthenticationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var k8s_target = new KubernetesClusterDeploymentTarget(\"k8s-target\", KubernetesClusterDeploymentTargetArgs.builder()        \n            .awsAccountAuthentication(KubernetesClusterDeploymentTargetAwsAccountAuthenticationArgs.builder()\n                .accountId(\"Accounts-123\")\n                .clusterName(\"cluster-name\")\n                .build())\n            .clusterUrl(\"https://example.com:1234/\")\n            .environments(            \n                \"Environments-123\",\n                \"Environment-321\")\n            .roles(            \n                \"Development Team\",\n                \"System Administrators\")\n            .tenantedDeploymentParticipation(\"Untenanted\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  k8s-target:\n    type: octopusdeploy:KubernetesClusterDeploymentTarget\n    properties:\n      awsAccountAuthentication:\n        accountId: Accounts-123\n        clusterName: cluster-name\n      clusterUrl: https://example.com:1234/\n      environments:\n        - Environments-123\n        - Environment-321\n      roles:\n        - Development Team\n        - System Administrators\n      tenantedDeploymentParticipation: Untenanted\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/kubernetesClusterDeploymentTarget:KubernetesClusterDeploymentTarget [options] octopusdeploy_kubernetes_cluster_deployment_target.\u003cname\u003e \u003cmachine-id\u003e\n```\n\n ",
            "properties": {
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetAuthentication:KubernetesClusterDeploymentTargetAuthentication"
                },
                "awsAccountAuthentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetAwsAccountAuthentication:KubernetesClusterDeploymentTargetAwsAccountAuthentication"
                },
                "azureServicePrincipalAuthentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication:KubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication"
                },
                "certificateAuthentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetCertificateAuthentication:KubernetesClusterDeploymentTargetCertificateAuthentication"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetContainer:KubernetesClusterDeploymentTargetContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetEndpoint:KubernetesClusterDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "gcpAccountAuthentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetGcpAccountAuthentication:KubernetesClusterDeploymentTargetGcpAccountAuthentication"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "proxyId": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "required": [
                "authentication",
                "awsAccountAuthentication",
                "azureServicePrincipalAuthentication",
                "certificateAuthentication",
                "clusterUrl",
                "containers",
                "endpoints",
                "environments",
                "gcpAccountAuthentication",
                "hasLatestCalamari",
                "healthStatus",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "inputProperties": {
                "authentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetAuthentication:KubernetesClusterDeploymentTargetAuthentication"
                },
                "awsAccountAuthentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetAwsAccountAuthentication:KubernetesClusterDeploymentTargetAwsAccountAuthentication"
                },
                "azureServicePrincipalAuthentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication:KubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication"
                },
                "certificateAuthentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetCertificateAuthentication:KubernetesClusterDeploymentTargetCertificateAuthentication"
                },
                "clusterCertificate": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetContainer:KubernetesClusterDeploymentTargetContainer"
                    }
                },
                "defaultWorkerPoolId": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetEndpoint:KubernetesClusterDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "gcpAccountAuthentication": {
                    "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetGcpAccountAuthentication:KubernetesClusterDeploymentTargetGcpAccountAuthentication"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "namespace": {
                    "type": "string"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "proxyId": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "runningInContainer": {
                    "type": "boolean"
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "skipTlsVerification": {
                    "type": "boolean"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "clusterUrl",
                "environments",
                "roles"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubernetesClusterDeploymentTarget resources.\n",
                "properties": {
                    "authentication": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetAuthentication:KubernetesClusterDeploymentTargetAuthentication"
                    },
                    "awsAccountAuthentication": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetAwsAccountAuthentication:KubernetesClusterDeploymentTargetAwsAccountAuthentication"
                    },
                    "azureServicePrincipalAuthentication": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication:KubernetesClusterDeploymentTargetAzureServicePrincipalAuthentication"
                    },
                    "certificateAuthentication": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetCertificateAuthentication:KubernetesClusterDeploymentTargetCertificateAuthentication"
                    },
                    "clusterCertificate": {
                        "type": "string"
                    },
                    "clusterUrl": {
                        "type": "string"
                    },
                    "containers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetContainer:KubernetesClusterDeploymentTargetContainer"
                        }
                    },
                    "defaultWorkerPoolId": {
                        "type": "string"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetEndpoint:KubernetesClusterDeploymentTargetEndpoint"
                        }
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "gcpAccountAuthentication": {
                        "$ref": "#/types/octopusdeploy:index/KubernetesClusterDeploymentTargetGcpAccountAuthentication:KubernetesClusterDeploymentTargetGcpAccountAuthentication"
                    },
                    "hasLatestCalamari": {
                        "type": "boolean"
                    },
                    "healthStatus": {
                        "type": "string",
                        "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isInProcess": {
                        "type": "boolean"
                    },
                    "machinePolicyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "proxyId": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "runningInContainer": {
                        "type": "boolean"
                    },
                    "shellName": {
                        "type": "string"
                    },
                    "shellVersion": {
                        "type": "string"
                    },
                    "skipTlsVerification": {
                        "type": "boolean"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                    },
                    "statusSummary": {
                        "type": "string",
                        "description": "A summary elaborating on the status of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "thumbprint": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/libraryVariableSet:LibraryVariableSet": {
            "description": "This resource manages library variable sets in Octopus Deploy.\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this library variable set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/LibraryVariableSetTemplate:LibraryVariableSetTemplate"
                    }
                },
                "variableSetId": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "spaceId",
                "variableSetId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this library variable set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/LibraryVariableSetTemplate:LibraryVariableSetTemplate"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LibraryVariableSet resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this library variable set.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "templates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/LibraryVariableSetTemplate:LibraryVariableSetTemplate"
                        }
                    },
                    "variableSetId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/lifecycle:Lifecycle": {
            "description": "This resource manages lifecycles in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.Lifecycle(\"example\", {\n    description: \"This is the default lifecycle.\",\n    phases: [\n        {\n            automaticDeploymentTargets: [\"Environments-321\"],\n            name: \"foo\",\n            releaseRetentionPolicy: {\n                quantityToKeep: 1,\n                shouldKeepForever: true,\n                unit: \"Days\",\n            },\n            tentacleRetentionPolicy: {\n                quantityToKeep: 30,\n                shouldKeepForever: false,\n                unit: \"Items\",\n            },\n        },\n        {\n            isOptionalPhase: true,\n            name: \"bar\",\n            optionalDeploymentTargets: [\"Environments-321\"],\n        },\n    ],\n    releaseRetentionPolicy: {\n        quantityToKeep: 1,\n        shouldKeepForever: true,\n        unit: \"Days\",\n    },\n    tentacleRetentionPolicy: {\n        quantityToKeep: 30,\n        shouldKeepForever: false,\n        unit: \"Items\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.Lifecycle(\"example\",\n    description=\"This is the default lifecycle.\",\n    phases=[\n        octopusdeploy.LifecyclePhaseArgs(\n            automatic_deployment_targets=[\"Environments-321\"],\n            name=\"foo\",\n            release_retention_policy=octopusdeploy.LifecyclePhaseReleaseRetentionPolicyArgs(\n                quantity_to_keep=1,\n                should_keep_forever=True,\n                unit=\"Days\",\n            ),\n            tentacle_retention_policy=octopusdeploy.LifecyclePhaseTentacleRetentionPolicyArgs(\n                quantity_to_keep=30,\n                should_keep_forever=False,\n                unit=\"Items\",\n            ),\n        ),\n        octopusdeploy.LifecyclePhaseArgs(\n            is_optional_phase=True,\n            name=\"bar\",\n            optional_deployment_targets=[\"Environments-321\"],\n        ),\n    ],\n    release_retention_policy=octopusdeploy.LifecycleReleaseRetentionPolicyArgs(\n        quantity_to_keep=1,\n        should_keep_forever=True,\n        unit=\"Days\",\n    ),\n    tentacle_retention_policy=octopusdeploy.LifecycleTentacleRetentionPolicyArgs(\n        quantity_to_keep=30,\n        should_keep_forever=False,\n        unit=\"Items\",\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.Lifecycle(\"example\", new()\n    {\n        Description = \"This is the default lifecycle.\",\n        Phases = new[]\n        {\n            new Octopusdeploy.Inputs.LifecyclePhaseArgs\n            {\n                AutomaticDeploymentTargets = new[]\n                {\n                    \"Environments-321\",\n                },\n                Name = \"foo\",\n                ReleaseRetentionPolicy = new Octopusdeploy.Inputs.LifecyclePhaseReleaseRetentionPolicyArgs\n                {\n                    QuantityToKeep = 1,\n                    ShouldKeepForever = true,\n                    Unit = \"Days\",\n                },\n                TentacleRetentionPolicy = new Octopusdeploy.Inputs.LifecyclePhaseTentacleRetentionPolicyArgs\n                {\n                    QuantityToKeep = 30,\n                    ShouldKeepForever = false,\n                    Unit = \"Items\",\n                },\n            },\n            new Octopusdeploy.Inputs.LifecyclePhaseArgs\n            {\n                IsOptionalPhase = true,\n                Name = \"bar\",\n                OptionalDeploymentTargets = new[]\n                {\n                    \"Environments-321\",\n                },\n            },\n        },\n        ReleaseRetentionPolicy = new Octopusdeploy.Inputs.LifecycleReleaseRetentionPolicyArgs\n        {\n            QuantityToKeep = 1,\n            ShouldKeepForever = true,\n            Unit = \"Days\",\n        },\n        TentacleRetentionPolicy = new Octopusdeploy.Inputs.LifecycleTentacleRetentionPolicyArgs\n        {\n            QuantityToKeep = 30,\n            ShouldKeepForever = false,\n            Unit = \"Items\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewLifecycle(ctx, \"example\", \u0026octopusdeploy.LifecycleArgs{\n\t\t\tDescription: pulumi.String(\"This is the default lifecycle.\"),\n\t\t\tPhases: octopusdeploy.LifecyclePhaseArray{\n\t\t\t\t\u0026octopusdeploy.LifecyclePhaseArgs{\n\t\t\t\t\tAutomaticDeploymentTargets: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"Environments-321\"),\n\t\t\t\t\t},\n\t\t\t\t\tName: pulumi.String(\"foo\"),\n\t\t\t\t\tReleaseRetentionPolicy: \u0026octopusdeploy.LifecyclePhaseReleaseRetentionPolicyArgs{\n\t\t\t\t\t\tQuantityToKeep:    pulumi.Int(1),\n\t\t\t\t\t\tShouldKeepForever: pulumi.Bool(true),\n\t\t\t\t\t\tUnit:              pulumi.String(\"Days\"),\n\t\t\t\t\t},\n\t\t\t\t\tTentacleRetentionPolicy: \u0026octopusdeploy.LifecyclePhaseTentacleRetentionPolicyArgs{\n\t\t\t\t\t\tQuantityToKeep:    pulumi.Int(30),\n\t\t\t\t\t\tShouldKeepForever: pulumi.Bool(false),\n\t\t\t\t\t\tUnit:              pulumi.String(\"Items\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026octopusdeploy.LifecyclePhaseArgs{\n\t\t\t\t\tIsOptionalPhase: pulumi.Bool(true),\n\t\t\t\t\tName:            pulumi.String(\"bar\"),\n\t\t\t\t\tOptionalDeploymentTargets: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"Environments-321\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tReleaseRetentionPolicy: \u0026octopusdeploy.LifecycleReleaseRetentionPolicyArgs{\n\t\t\t\tQuantityToKeep:    pulumi.Int(1),\n\t\t\t\tShouldKeepForever: pulumi.Bool(true),\n\t\t\t\tUnit:              pulumi.String(\"Days\"),\n\t\t\t},\n\t\t\tTentacleRetentionPolicy: \u0026octopusdeploy.LifecycleTentacleRetentionPolicyArgs{\n\t\t\t\tQuantityToKeep:    pulumi.Int(30),\n\t\t\t\tShouldKeepForever: pulumi.Bool(false),\n\t\t\t\tUnit:              pulumi.String(\"Items\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.Lifecycle;\nimport com.pulumi.octopusdeploy.LifecycleArgs;\nimport com.pulumi.octopusdeploy.inputs.LifecyclePhaseArgs;\nimport com.pulumi.octopusdeploy.inputs.LifecyclePhaseReleaseRetentionPolicyArgs;\nimport com.pulumi.octopusdeploy.inputs.LifecyclePhaseTentacleRetentionPolicyArgs;\nimport com.pulumi.octopusdeploy.inputs.LifecycleReleaseRetentionPolicyArgs;\nimport com.pulumi.octopusdeploy.inputs.LifecycleTentacleRetentionPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Lifecycle(\"example\", LifecycleArgs.builder()        \n            .description(\"This is the default lifecycle.\")\n            .phases(            \n                LifecyclePhaseArgs.builder()\n                    .automaticDeploymentTargets(\"Environments-321\")\n                    .name(\"foo\")\n                    .releaseRetentionPolicy(LifecyclePhaseReleaseRetentionPolicyArgs.builder()\n                        .quantityToKeep(1)\n                        .shouldKeepForever(true)\n                        .unit(\"Days\")\n                        .build())\n                    .tentacleRetentionPolicy(LifecyclePhaseTentacleRetentionPolicyArgs.builder()\n                        .quantityToKeep(30)\n                        .shouldKeepForever(false)\n                        .unit(\"Items\")\n                        .build())\n                    .build(),\n                LifecyclePhaseArgs.builder()\n                    .isOptionalPhase(true)\n                    .name(\"bar\")\n                    .optionalDeploymentTargets(\"Environments-321\")\n                    .build())\n            .releaseRetentionPolicy(LifecycleReleaseRetentionPolicyArgs.builder()\n                .quantityToKeep(1)\n                .shouldKeepForever(true)\n                .unit(\"Days\")\n                .build())\n            .tentacleRetentionPolicy(LifecycleTentacleRetentionPolicyArgs.builder()\n                .quantityToKeep(30)\n                .shouldKeepForever(false)\n                .unit(\"Items\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:Lifecycle\n    properties:\n      description: This is the default lifecycle.\n      phases:\n        - automaticDeploymentTargets:\n            - Environments-321\n          name: foo\n          releaseRetentionPolicy:\n            quantityToKeep: 1\n            shouldKeepForever: true\n            unit: Days\n          tentacleRetentionPolicy:\n            quantityToKeep: 30\n            shouldKeepForever: false\n            unit: Items\n        - isOptionalPhase: true\n          name: bar\n          optionalDeploymentTargets:\n            - Environments-321\n      releaseRetentionPolicy:\n        quantityToKeep: 1\n        shouldKeepForever: true\n        unit: Days\n      tentacleRetentionPolicy:\n        quantityToKeep: 30\n        shouldKeepForever: false\n        unit: Items\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/lifecycle:Lifecycle [options] octopusdeploy_lifecycle.\u003cname\u003e \u003clifecycle-id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this lifecycle.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "phases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/LifecyclePhase:LifecyclePhase"
                    }
                },
                "releaseRetentionPolicy": {
                    "$ref": "#/types/octopusdeploy:index/LifecycleReleaseRetentionPolicy:LifecycleReleaseRetentionPolicy"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tentacleRetentionPolicy": {
                    "$ref": "#/types/octopusdeploy:index/LifecycleTentacleRetentionPolicy:LifecycleTentacleRetentionPolicy"
                }
            },
            "required": [
                "name",
                "phases",
                "releaseRetentionPolicy",
                "spaceId",
                "tentacleRetentionPolicy"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this lifecycle.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "phases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/LifecyclePhase:LifecyclePhase"
                    }
                },
                "releaseRetentionPolicy": {
                    "$ref": "#/types/octopusdeploy:index/LifecycleReleaseRetentionPolicy:LifecycleReleaseRetentionPolicy"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tentacleRetentionPolicy": {
                    "$ref": "#/types/octopusdeploy:index/LifecycleTentacleRetentionPolicy:LifecycleTentacleRetentionPolicy"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Lifecycle resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this lifecycle.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "phases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/LifecyclePhase:LifecyclePhase"
                        }
                    },
                    "releaseRetentionPolicy": {
                        "$ref": "#/types/octopusdeploy:index/LifecycleReleaseRetentionPolicy:LifecycleReleaseRetentionPolicy"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "tentacleRetentionPolicy": {
                        "$ref": "#/types/octopusdeploy:index/LifecycleTentacleRetentionPolicy:LifecycleTentacleRetentionPolicy"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/listeningTentacleDeploymentTarget:ListeningTentacleDeploymentTarget": {
            "description": "This resource manages listening tentacle deployment targets in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.ListeningTentacleDeploymentTarget(\"example\", {\n    environments: [\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    isDisabled: true,\n    machinePolicyId: \"MachinePolicy-123\",\n    roles: [\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenantedDeploymentParticipation: \"Untenanted\",\n    tentacleUrl: \"https://example.com:1234/\",\n    thumbprint: \"\u003cthumbprint\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.ListeningTentacleDeploymentTarget(\"example\",\n    environments=[\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    is_disabled=True,\n    machine_policy_id=\"MachinePolicy-123\",\n    roles=[\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenanted_deployment_participation=\"Untenanted\",\n    tentacle_url=\"https://example.com:1234/\",\n    thumbprint=\"\u003cthumbprint\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.ListeningTentacleDeploymentTarget(\"example\", new()\n    {\n        Environments = new[]\n        {\n            \"Environments-123\",\n            \"Environment-321\",\n        },\n        IsDisabled = true,\n        MachinePolicyId = \"MachinePolicy-123\",\n        Roles = new[]\n        {\n            \"Development Team\",\n            \"System Administrators\",\n        },\n        TenantedDeploymentParticipation = \"Untenanted\",\n        TentacleUrl = \"https://example.com:1234/\",\n        Thumbprint = \"\u003cthumbprint\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewListeningTentacleDeploymentTarget(ctx, \"example\", \u0026octopusdeploy.ListeningTentacleDeploymentTargetArgs{\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Environments-123\"),\n\t\t\t\tpulumi.String(\"Environment-321\"),\n\t\t\t},\n\t\t\tIsDisabled:      pulumi.Bool(true),\n\t\t\tMachinePolicyId: pulumi.String(\"MachinePolicy-123\"),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Development Team\"),\n\t\t\t\tpulumi.String(\"System Administrators\"),\n\t\t\t},\n\t\t\tTenantedDeploymentParticipation: pulumi.String(\"Untenanted\"),\n\t\t\tTentacleUrl:                     pulumi.String(\"https://example.com:1234/\"),\n\t\t\tThumbprint:                      pulumi.String(\"\u003cthumbprint\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.ListeningTentacleDeploymentTarget;\nimport com.pulumi.octopusdeploy.ListeningTentacleDeploymentTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ListeningTentacleDeploymentTarget(\"example\", ListeningTentacleDeploymentTargetArgs.builder()        \n            .environments(            \n                \"Environments-123\",\n                \"Environment-321\")\n            .isDisabled(true)\n            .machinePolicyId(\"MachinePolicy-123\")\n            .roles(            \n                \"Development Team\",\n                \"System Administrators\")\n            .tenantedDeploymentParticipation(\"Untenanted\")\n            .tentacleUrl(\"https://example.com:1234/\")\n            .thumbprint(\"\u003cthumbprint\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:ListeningTentacleDeploymentTarget\n    properties:\n      environments:\n        - Environments-123\n        - Environment-321\n      isDisabled: true\n      machinePolicyId: MachinePolicy-123\n      roles:\n        - Development Team\n        - System Administrators\n      tenantedDeploymentParticipation: Untenanted\n      tentacleUrl: https://example.com:1234/\n      thumbprint: \u003cthumbprint\u003e\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/listeningTentacleDeploymentTarget:ListeningTentacleDeploymentTarget [options] octopusdeploy_listening_tentacle_deployment_target.\u003cname\u003e \u003cmachine-id\u003e\n```\n\n ",
            "properties": {
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this listening tentacle.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Represents the disabled status of this deployment target.\n"
                },
                "isInProcess": {
                    "type": "boolean",
                    "description": "Represents the in-process status of this deployment target.\n"
                },
                "machinePolicyId": {
                    "type": "string",
                    "description": "The machine policy ID that is associated with this deployment target.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string",
                    "description": "The operating system that is associated with this deployment target.\n"
                },
                "proxyId": {
                    "type": "string",
                    "description": "The proxy ID that is associated with this deployment target.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role IDs that are associated with this deployment target.\n"
                },
                "shellName": {
                    "type": "string",
                    "description": "The shell name associated with this deployment target.\n"
                },
                "shellVersion": {
                    "type": "string",
                    "description": "The shell version associated with this deployment target.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "tentacleUrl": {
                    "type": "string",
                    "description": "The tenant URL of this deployment target.\n"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ListeningTentacleDeploymentTargetTentacleVersionDetail:ListeningTentacleDeploymentTargetTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of this deployment target.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "The URI of this deployment target.\n"
                }
            },
            "required": [
                "certificateSignatureAlgorithm",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "proxyId",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "tentacleUrl",
                "tentacleVersionDetails",
                "thumbprint",
                "uri"
            ],
            "inputProperties": {
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this listening tentacle.\n"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean",
                    "description": "Represents the disabled status of this deployment target.\n"
                },
                "isInProcess": {
                    "type": "boolean",
                    "description": "Represents the in-process status of this deployment target.\n"
                },
                "machinePolicyId": {
                    "type": "string",
                    "description": "The machine policy ID that is associated with this deployment target.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string",
                    "description": "The operating system that is associated with this deployment target.\n"
                },
                "proxyId": {
                    "type": "string",
                    "description": "The proxy ID that is associated with this deployment target.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role IDs that are associated with this deployment target.\n"
                },
                "shellName": {
                    "type": "string",
                    "description": "The shell name associated with this deployment target.\n"
                },
                "shellVersion": {
                    "type": "string",
                    "description": "The shell version associated with this deployment target.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "tentacleUrl": {
                    "type": "string",
                    "description": "The tenant URL of this deployment target.\n"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ListeningTentacleDeploymentTargetTentacleVersionDetail:ListeningTentacleDeploymentTargetTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of this deployment target.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "The URI of this deployment target.\n"
                }
            },
            "requiredInputs": [
                "environments",
                "roles",
                "tentacleUrl",
                "thumbprint"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ListeningTentacleDeploymentTarget resources.\n",
                "properties": {
                    "certificateSignatureAlgorithm": {
                        "type": "string"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this listening tentacle.\n"
                    },
                    "hasLatestCalamari": {
                        "type": "boolean"
                    },
                    "healthStatus": {
                        "type": "string",
                        "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "Represents the disabled status of this deployment target.\n"
                    },
                    "isInProcess": {
                        "type": "boolean",
                        "description": "Represents the in-process status of this deployment target.\n"
                    },
                    "machinePolicyId": {
                        "type": "string",
                        "description": "The machine policy ID that is associated with this deployment target.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "operatingSystem": {
                        "type": "string",
                        "description": "The operating system that is associated with this deployment target.\n"
                    },
                    "proxyId": {
                        "type": "string",
                        "description": "The proxy ID that is associated with this deployment target.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of role IDs that are associated with this deployment target.\n"
                    },
                    "shellName": {
                        "type": "string",
                        "description": "The shell name associated with this deployment target.\n"
                    },
                    "shellVersion": {
                        "type": "string",
                        "description": "The shell version associated with this deployment target.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                    },
                    "statusSummary": {
                        "type": "string",
                        "description": "A summary elaborating on the status of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "tentacleUrl": {
                        "type": "string",
                        "description": "The tenant URL of this deployment target.\n"
                    },
                    "tentacleVersionDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/ListeningTentacleDeploymentTargetTentacleVersionDetail:ListeningTentacleDeploymentTargetTentacleVersionDetail"
                        }
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of this deployment target.\n"
                    },
                    "uri": {
                        "type": "string",
                        "description": "The URI of this deployment target.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/machinePolicy:MachinePolicy": {
            "description": "This resource manages machine policies in Octopus Deploy.\n",
            "properties": {
                "connectionConnectTimeout": {
                    "type": "integer"
                },
                "connectionRetryCountLimit": {
                    "type": "integer"
                },
                "connectionRetrySleepInterval": {
                    "type": "integer"
                },
                "connectionRetryTimeLimit": {
                    "type": "integer"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this machine policy.\n"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "machineCleanupPolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineCleanupPolicy:MachinePolicyMachineCleanupPolicy"
                },
                "machineConnectivityPolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineConnectivityPolicy:MachinePolicyMachineConnectivityPolicy"
                },
                "machineHealthCheckPolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineHealthCheckPolicy:MachinePolicyMachineHealthCheckPolicy"
                },
                "machineUpdatePolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineUpdatePolicy:MachinePolicyMachineUpdatePolicy"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "pollingRequestMaximumMessageProcessingTimeout": {
                    "type": "integer"
                },
                "pollingRequestQueueTimeout": {
                    "type": "integer"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                }
            },
            "required": [
                "isDefault",
                "machineCleanupPolicy",
                "machineConnectivityPolicy",
                "machineHealthCheckPolicy",
                "machineUpdatePolicy",
                "name",
                "spaceId"
            ],
            "inputProperties": {
                "connectionConnectTimeout": {
                    "type": "integer"
                },
                "connectionRetryCountLimit": {
                    "type": "integer"
                },
                "connectionRetrySleepInterval": {
                    "type": "integer"
                },
                "connectionRetryTimeLimit": {
                    "type": "integer"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this machine policy.\n"
                },
                "machineCleanupPolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineCleanupPolicy:MachinePolicyMachineCleanupPolicy"
                },
                "machineConnectivityPolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineConnectivityPolicy:MachinePolicyMachineConnectivityPolicy"
                },
                "machineHealthCheckPolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineHealthCheckPolicy:MachinePolicyMachineHealthCheckPolicy"
                },
                "machineUpdatePolicy": {
                    "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineUpdatePolicy:MachinePolicyMachineUpdatePolicy"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "pollingRequestMaximumMessageProcessingTimeout": {
                    "type": "integer"
                },
                "pollingRequestQueueTimeout": {
                    "type": "integer"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MachinePolicy resources.\n",
                "properties": {
                    "connectionConnectTimeout": {
                        "type": "integer"
                    },
                    "connectionRetryCountLimit": {
                        "type": "integer"
                    },
                    "connectionRetrySleepInterval": {
                        "type": "integer"
                    },
                    "connectionRetryTimeLimit": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this machine policy.\n"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "machineCleanupPolicy": {
                        "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineCleanupPolicy:MachinePolicyMachineCleanupPolicy"
                    },
                    "machineConnectivityPolicy": {
                        "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineConnectivityPolicy:MachinePolicyMachineConnectivityPolicy"
                    },
                    "machineHealthCheckPolicy": {
                        "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineHealthCheckPolicy:MachinePolicyMachineHealthCheckPolicy"
                    },
                    "machineUpdatePolicy": {
                        "$ref": "#/types/octopusdeploy:index/MachinePolicyMachineUpdatePolicy:MachinePolicyMachineUpdatePolicy"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "pollingRequestMaximumMessageProcessingTimeout": {
                        "type": "integer"
                    },
                    "pollingRequestQueueTimeout": {
                        "type": "integer"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/mavenFeed:MavenFeed": {
            "description": "This resource manages a Maven feed in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.MavenFeed(\"example\", {\n    downloadAttempts: 10,\n    downloadRetryBackoffSeconds: 20,\n    feedUri: \"https://repo.maven.apache.org/maven2/\",\n    password: \"test-password\",\n    username: \"test-username\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.MavenFeed(\"example\",\n    download_attempts=10,\n    download_retry_backoff_seconds=20,\n    feed_uri=\"https://repo.maven.apache.org/maven2/\",\n    password=\"test-password\",\n    username=\"test-username\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.MavenFeed(\"example\", new()\n    {\n        DownloadAttempts = 10,\n        DownloadRetryBackoffSeconds = 20,\n        FeedUri = \"https://repo.maven.apache.org/maven2/\",\n        Password = \"test-password\",\n        Username = \"test-username\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewMavenFeed(ctx, \"example\", \u0026octopusdeploy.MavenFeedArgs{\n\t\t\tDownloadAttempts:            pulumi.Int(10),\n\t\t\tDownloadRetryBackoffSeconds: pulumi.Int(20),\n\t\t\tFeedUri:                     pulumi.String(\"https://repo.maven.apache.org/maven2/\"),\n\t\t\tPassword:                    pulumi.String(\"test-password\"),\n\t\t\tUsername:                    pulumi.String(\"test-username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.MavenFeed;\nimport com.pulumi.octopusdeploy.MavenFeedArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new MavenFeed(\"example\", MavenFeedArgs.builder()        \n            .downloadAttempts(10)\n            .downloadRetryBackoffSeconds(20)\n            .feedUri(\"https://repo.maven.apache.org/maven2/\")\n            .password(\"test-password\")\n            .username(\"test-username\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:MavenFeed\n    properties:\n      downloadAttempts: 10\n      downloadRetryBackoffSeconds: 20\n      feedUri: https://repo.maven.apache.org/maven2/\n      password: test-password\n      username: test-username\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/mavenFeed:MavenFeed [options] octopusdeploy_maven_feed.\u003cname\u003e \u003cfeed-id\u003e\n```\n\n ",
            "properties": {
                "downloadAttempts": {
                    "type": "integer",
                    "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                },
                "downloadRetryBackoffSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                },
                "feedUri": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A short, memorable, unique name for this feed. Example: ACME Builds.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "required": [
                "feedUri",
                "name",
                "packageAcquisitionLocationOptions",
                "spaceId"
            ],
            "inputProperties": {
                "downloadAttempts": {
                    "type": "integer",
                    "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                },
                "downloadRetryBackoffSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                },
                "feedUri": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A short, memorable, unique name for this feed. Example: ACME Builds.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "feedUri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MavenFeed resources.\n",
                "properties": {
                    "downloadAttempts": {
                        "type": "integer",
                        "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                    },
                    "downloadRetryBackoffSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                    },
                    "feedUri": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "A short, memorable, unique name for this feed. Example: ACME Builds.\n"
                    },
                    "packageAcquisitionLocationOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "password": {
                        "type": "string",
                        "description": "The password associated with this resource.\n",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username associated with this resource.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/nugetFeed:NugetFeed": {
            "description": "This resource manages a NuGet feed in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.NugetFeed(\"example\", {\n    downloadAttempts: 1,\n    downloadRetryBackoffSeconds: 30,\n    feedUri: \"https://api.nuget.org/v3/index.json\",\n    isEnhancedMode: true,\n    password: \"test-password\",\n    username: \"test-username\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.NugetFeed(\"example\",\n    download_attempts=1,\n    download_retry_backoff_seconds=30,\n    feed_uri=\"https://api.nuget.org/v3/index.json\",\n    is_enhanced_mode=True,\n    password=\"test-password\",\n    username=\"test-username\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.NugetFeed(\"example\", new()\n    {\n        DownloadAttempts = 1,\n        DownloadRetryBackoffSeconds = 30,\n        FeedUri = \"https://api.nuget.org/v3/index.json\",\n        IsEnhancedMode = true,\n        Password = \"test-password\",\n        Username = \"test-username\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewNugetFeed(ctx, \"example\", \u0026octopusdeploy.NugetFeedArgs{\n\t\t\tDownloadAttempts:            pulumi.Int(1),\n\t\t\tDownloadRetryBackoffSeconds: pulumi.Int(30),\n\t\t\tFeedUri:                     pulumi.String(\"https://api.nuget.org/v3/index.json\"),\n\t\t\tIsEnhancedMode:              pulumi.Bool(true),\n\t\t\tPassword:                    pulumi.String(\"test-password\"),\n\t\t\tUsername:                    pulumi.String(\"test-username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.NugetFeed;\nimport com.pulumi.octopusdeploy.NugetFeedArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NugetFeed(\"example\", NugetFeedArgs.builder()        \n            .downloadAttempts(1)\n            .downloadRetryBackoffSeconds(30)\n            .feedUri(\"https://api.nuget.org/v3/index.json\")\n            .isEnhancedMode(true)\n            .password(\"test-password\")\n            .username(\"test-username\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:NugetFeed\n    properties:\n      downloadAttempts: 1\n      downloadRetryBackoffSeconds: 30\n      feedUri: https://api.nuget.org/v3/index.json\n      isEnhancedMode: true\n      password: test-password\n      username: test-username\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/nugetFeed:NugetFeed [options] octopusdeploy_nuget_feed.\u003cname\u003e \u003cfeed-id\u003e\n```\n\n ",
            "properties": {
                "downloadAttempts": {
                    "type": "integer",
                    "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                },
                "downloadRetryBackoffSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                },
                "feedUri": {
                    "type": "string",
                    "description": "The feed URI can be a URL or a folder path.\n"
                },
                "isEnhancedMode": {
                    "type": "boolean",
                    "description": "This will improve performance of the NuGet feed but may not be supported by some older feeds. Disable if the operation, Create Release does not return the latest version for a package.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A short, memorable, unique name for this feed. Example: ACME Builds.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "required": [
                "feedUri",
                "name",
                "packageAcquisitionLocationOptions",
                "spaceId"
            ],
            "inputProperties": {
                "downloadAttempts": {
                    "type": "integer",
                    "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                },
                "downloadRetryBackoffSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                },
                "feedUri": {
                    "type": "string",
                    "description": "The feed URI can be a URL or a folder path.\n"
                },
                "isEnhancedMode": {
                    "type": "boolean",
                    "description": "This will improve performance of the NuGet feed but may not be supported by some older feeds. Disable if the operation, Create Release does not return the latest version for a package.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A short, memorable, unique name for this feed. Example: ACME Builds.\n"
                },
                "packageAcquisitionLocationOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "feedUri"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NugetFeed resources.\n",
                "properties": {
                    "downloadAttempts": {
                        "type": "integer",
                        "description": "The number of times a deployment should attempt to download a package from this feed before failing.\n"
                    },
                    "downloadRetryBackoffSeconds": {
                        "type": "integer",
                        "description": "The number of seconds to apply as a linear back off between download attempts.\n"
                    },
                    "feedUri": {
                        "type": "string",
                        "description": "The feed URI can be a URL or a folder path.\n"
                    },
                    "isEnhancedMode": {
                        "type": "boolean",
                        "description": "This will improve performance of the NuGet feed but may not be supported by some older feeds. Disable if the operation, Create Release does not return the latest version for a package.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A short, memorable, unique name for this feed. Example: ACME Builds.\n"
                    },
                    "packageAcquisitionLocationOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "password": {
                        "type": "string",
                        "description": "The password associated with this resource.\n",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username associated with this resource.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/offlinePackageDropDeploymentTarget:OfflinePackageDropDeploymentTarget": {
            "description": "This resource manages offline package drop deployment targets in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.ListeningTentacleDeploymentTarget(\"example\", {\n    environments: [\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    isDisabled: true,\n    machinePolicyId: \"MachinePolicy-123\",\n    roles: [\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenantedDeploymentParticipation: \"Untenanted\",\n    tentacleUrl: \"https://example.com:1234/\",\n    thumbprint: \"\u003cthumbprint\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.ListeningTentacleDeploymentTarget(\"example\",\n    environments=[\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    is_disabled=True,\n    machine_policy_id=\"MachinePolicy-123\",\n    roles=[\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenanted_deployment_participation=\"Untenanted\",\n    tentacle_url=\"https://example.com:1234/\",\n    thumbprint=\"\u003cthumbprint\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.ListeningTentacleDeploymentTarget(\"example\", new()\n    {\n        Environments = new[]\n        {\n            \"Environments-123\",\n            \"Environment-321\",\n        },\n        IsDisabled = true,\n        MachinePolicyId = \"MachinePolicy-123\",\n        Roles = new[]\n        {\n            \"Development Team\",\n            \"System Administrators\",\n        },\n        TenantedDeploymentParticipation = \"Untenanted\",\n        TentacleUrl = \"https://example.com:1234/\",\n        Thumbprint = \"\u003cthumbprint\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewListeningTentacleDeploymentTarget(ctx, \"example\", \u0026octopusdeploy.ListeningTentacleDeploymentTargetArgs{\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Environments-123\"),\n\t\t\t\tpulumi.String(\"Environment-321\"),\n\t\t\t},\n\t\t\tIsDisabled:      pulumi.Bool(true),\n\t\t\tMachinePolicyId: pulumi.String(\"MachinePolicy-123\"),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Development Team\"),\n\t\t\t\tpulumi.String(\"System Administrators\"),\n\t\t\t},\n\t\t\tTenantedDeploymentParticipation: pulumi.String(\"Untenanted\"),\n\t\t\tTentacleUrl:                     pulumi.String(\"https://example.com:1234/\"),\n\t\t\tThumbprint:                      pulumi.String(\"\u003cthumbprint\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.ListeningTentacleDeploymentTarget;\nimport com.pulumi.octopusdeploy.ListeningTentacleDeploymentTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ListeningTentacleDeploymentTarget(\"example\", ListeningTentacleDeploymentTargetArgs.builder()        \n            .environments(            \n                \"Environments-123\",\n                \"Environment-321\")\n            .isDisabled(true)\n            .machinePolicyId(\"MachinePolicy-123\")\n            .roles(            \n                \"Development Team\",\n                \"System Administrators\")\n            .tenantedDeploymentParticipation(\"Untenanted\")\n            .tentacleUrl(\"https://example.com:1234/\")\n            .thumbprint(\"\u003cthumbprint\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:ListeningTentacleDeploymentTarget\n    properties:\n      environments:\n        - Environments-123\n        - Environment-321\n      isDisabled: true\n      machinePolicyId: MachinePolicy-123\n      roles:\n        - Development Team\n        - System Administrators\n      tenantedDeploymentParticipation: Untenanted\n      tentacleUrl: https://example.com:1234/\n      thumbprint: \u003cthumbprint\u003e\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/offlinePackageDropDeploymentTarget:OfflinePackageDropDeploymentTarget [options] octopusdeploy_listening_tentacle_deployment_target.\u003cname\u003e \u003cmachine-id\u003e\n```\n\n ",
            "properties": {
                "applicationsDirectory": {
                    "type": "string"
                },
                "destination": {
                    "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetDestination:OfflinePackageDropDeploymentTargetDestination"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpoint:OfflinePackageDropDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "required": [
                "applicationsDirectory",
                "destination",
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri",
                "workingDirectory"
            ],
            "inputProperties": {
                "applicationsDirectory": {
                    "type": "string"
                },
                "destination": {
                    "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetDestination:OfflinePackageDropDeploymentTargetDestination"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpoint:OfflinePackageDropDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "workingDirectory": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "applicationsDirectory",
                "environments",
                "roles",
                "workingDirectory"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OfflinePackageDropDeploymentTarget resources.\n",
                "properties": {
                    "applicationsDirectory": {
                        "type": "string"
                    },
                    "destination": {
                        "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetDestination:OfflinePackageDropDeploymentTargetDestination"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/OfflinePackageDropDeploymentTargetEndpoint:OfflinePackageDropDeploymentTargetEndpoint"
                        }
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "hasLatestCalamari": {
                        "type": "boolean"
                    },
                    "healthStatus": {
                        "type": "string",
                        "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isInProcess": {
                        "type": "boolean"
                    },
                    "machinePolicyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellName": {
                        "type": "string"
                    },
                    "shellVersion": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                    },
                    "statusSummary": {
                        "type": "string",
                        "description": "A summary elaborating on the status of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "thumbprint": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    },
                    "workingDirectory": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/pollingTentacleDeploymentTarget:PollingTentacleDeploymentTarget": {
            "description": "This resource manages polling tentacle deployment targets in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.ListeningTentacleDeploymentTarget(\"example\", {\n    environments: [\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    isDisabled: true,\n    machinePolicyId: \"MachinePolicy-123\",\n    roles: [\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenantedDeploymentParticipation: \"Untenanted\",\n    tentacleUrl: \"https://example.com:1234/\",\n    thumbprint: \"\u003cthumbprint\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.ListeningTentacleDeploymentTarget(\"example\",\n    environments=[\n        \"Environments-123\",\n        \"Environment-321\",\n    ],\n    is_disabled=True,\n    machine_policy_id=\"MachinePolicy-123\",\n    roles=[\n        \"Development Team\",\n        \"System Administrators\",\n    ],\n    tenanted_deployment_participation=\"Untenanted\",\n    tentacle_url=\"https://example.com:1234/\",\n    thumbprint=\"\u003cthumbprint\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.ListeningTentacleDeploymentTarget(\"example\", new()\n    {\n        Environments = new[]\n        {\n            \"Environments-123\",\n            \"Environment-321\",\n        },\n        IsDisabled = true,\n        MachinePolicyId = \"MachinePolicy-123\",\n        Roles = new[]\n        {\n            \"Development Team\",\n            \"System Administrators\",\n        },\n        TenantedDeploymentParticipation = \"Untenanted\",\n        TentacleUrl = \"https://example.com:1234/\",\n        Thumbprint = \"\u003cthumbprint\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewListeningTentacleDeploymentTarget(ctx, \"example\", \u0026octopusdeploy.ListeningTentacleDeploymentTargetArgs{\n\t\t\tEnvironments: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Environments-123\"),\n\t\t\t\tpulumi.String(\"Environment-321\"),\n\t\t\t},\n\t\t\tIsDisabled:      pulumi.Bool(true),\n\t\t\tMachinePolicyId: pulumi.String(\"MachinePolicy-123\"),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Development Team\"),\n\t\t\t\tpulumi.String(\"System Administrators\"),\n\t\t\t},\n\t\t\tTenantedDeploymentParticipation: pulumi.String(\"Untenanted\"),\n\t\t\tTentacleUrl:                     pulumi.String(\"https://example.com:1234/\"),\n\t\t\tThumbprint:                      pulumi.String(\"\u003cthumbprint\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.ListeningTentacleDeploymentTarget;\nimport com.pulumi.octopusdeploy.ListeningTentacleDeploymentTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ListeningTentacleDeploymentTarget(\"example\", ListeningTentacleDeploymentTargetArgs.builder()        \n            .environments(            \n                \"Environments-123\",\n                \"Environment-321\")\n            .isDisabled(true)\n            .machinePolicyId(\"MachinePolicy-123\")\n            .roles(            \n                \"Development Team\",\n                \"System Administrators\")\n            .tenantedDeploymentParticipation(\"Untenanted\")\n            .tentacleUrl(\"https://example.com:1234/\")\n            .thumbprint(\"\u003cthumbprint\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:ListeningTentacleDeploymentTarget\n    properties:\n      environments:\n        - Environments-123\n        - Environment-321\n      isDisabled: true\n      machinePolicyId: MachinePolicy-123\n      roles:\n        - Development Team\n        - System Administrators\n      tenantedDeploymentParticipation: Untenanted\n      tentacleUrl: https://example.com:1234/\n      thumbprint: \u003cthumbprint\u003e\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/pollingTentacleDeploymentTarget:PollingTentacleDeploymentTarget [options] octopusdeploy_listening_tentacle_deployment_target.\u003cname\u003e \u003cmachine-id\u003e\n```\n\n ",
            "properties": {
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetEndpoint:PollingTentacleDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "tentacleUrl": {
                    "type": "string"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetTentacleVersionDetail:PollingTentacleDeploymentTargetTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "required": [
                "endpoints",
                "environments",
                "hasLatestCalamari",
                "healthStatus",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "tentacleUrl",
                "tentacleVersionDetails",
                "thumbprint",
                "uri"
            ],
            "inputProperties": {
                "certificateSignatureAlgorithm": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetEndpoint:PollingTentacleDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "tentacleUrl": {
                    "type": "string"
                },
                "tentacleVersionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetTentacleVersionDetail:PollingTentacleDeploymentTargetTentacleVersionDetail"
                    }
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "environments",
                "roles",
                "tentacleUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PollingTentacleDeploymentTarget resources.\n",
                "properties": {
                    "certificateSignatureAlgorithm": {
                        "type": "string"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetEndpoint:PollingTentacleDeploymentTargetEndpoint"
                        }
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "hasLatestCalamari": {
                        "type": "boolean"
                    },
                    "healthStatus": {
                        "type": "string",
                        "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isInProcess": {
                        "type": "boolean"
                    },
                    "machinePolicyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellName": {
                        "type": "string"
                    },
                    "shellVersion": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                    },
                    "statusSummary": {
                        "type": "string",
                        "description": "A summary elaborating on the status of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "tentacleUrl": {
                        "type": "string"
                    },
                    "tentacleVersionDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/PollingTentacleDeploymentTargetTentacleVersionDetail:PollingTentacleDeploymentTargetTentacleVersionDetail"
                        }
                    },
                    "thumbprint": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/project:Project": {
            "description": "This resource manages projects in Octopus Deploy.\n\n\u003e Credentials are stored in state as plaintext. Read more about sensitive data in state.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.Project(\"example\", {\n    autoCreateRelease: false,\n    defaultGuidedFailureMode: \"EnvironmentDefault\",\n    defaultToSkipIfAlreadyInstalled: false,\n    description: \"The development project.\",\n    discreteChannelRelease: false,\n    isDisabled: false,\n    isDiscreteChannelRelease: false,\n    isVersionControlled: false,\n    lifecycleId: \"Lifecycles-123\",\n    projectGroupId: \"ProjectGroups-123\",\n    tenantedDeploymentParticipation: \"TenantedOrUntenanted\",\n    connectivityPolicy: {\n        allowDeploymentsToNoTargets: false,\n        excludeUnhealthyTargets: false,\n        skipMachineBehavior: \"SkipUnavailableMachines\",\n    },\n    jiraServiceManagementExtensionSettings: {\n        connectionId: \"133d7fe602514060a48bc42ee9870f99\",\n        isEnabled: false,\n        serviceDeskProjectName: \"Test Service Desk Project (OK to Delete)\",\n    },\n    servicenowExtensionSettings: {\n        connectionId: \"989034685e2c48c4b06a29286c9ef5cc\",\n        isEnabled: false,\n        isStateAutomaticallyTransitioned: false,\n        standardChangeTemplateName: \"Standard Change Template Name (OK to Delete)\",\n    },\n    templates: [{\n        defaultValue: \"example-default-value\",\n        helpText: \"example-help-test\",\n        label: \"example-label\",\n        name: \"example-template-value\",\n        displaySettings: {\n            \"Octopus.ControlType\": \"SingleLineText\",\n        },\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.Project(\"example\",\n    auto_create_release=False,\n    default_guided_failure_mode=\"EnvironmentDefault\",\n    default_to_skip_if_already_installed=False,\n    description=\"The development project.\",\n    discrete_channel_release=False,\n    is_disabled=False,\n    is_discrete_channel_release=False,\n    is_version_controlled=False,\n    lifecycle_id=\"Lifecycles-123\",\n    project_group_id=\"ProjectGroups-123\",\n    tenanted_deployment_participation=\"TenantedOrUntenanted\",\n    connectivity_policy=octopusdeploy.ProjectConnectivityPolicyArgs(\n        allow_deployments_to_no_targets=False,\n        exclude_unhealthy_targets=False,\n        skip_machine_behavior=\"SkipUnavailableMachines\",\n    ),\n    jira_service_management_extension_settings=octopusdeploy.ProjectJiraServiceManagementExtensionSettingsArgs(\n        connection_id=\"133d7fe602514060a48bc42ee9870f99\",\n        is_enabled=False,\n        service_desk_project_name=\"Test Service Desk Project (OK to Delete)\",\n    ),\n    servicenow_extension_settings=octopusdeploy.ProjectServicenowExtensionSettingsArgs(\n        connection_id=\"989034685e2c48c4b06a29286c9ef5cc\",\n        is_enabled=False,\n        is_state_automatically_transitioned=False,\n        standard_change_template_name=\"Standard Change Template Name (OK to Delete)\",\n    ),\n    templates=[octopusdeploy.ProjectTemplateArgs(\n        default_value=\"example-default-value\",\n        help_text=\"example-help-test\",\n        label=\"example-label\",\n        name=\"example-template-value\",\n        display_settings={\n            \"Octopus.ControlType\": \"SingleLineText\",\n        },\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.Project(\"example\", new()\n    {\n        AutoCreateRelease = false,\n        DefaultGuidedFailureMode = \"EnvironmentDefault\",\n        DefaultToSkipIfAlreadyInstalled = false,\n        Description = \"The development project.\",\n        DiscreteChannelRelease = false,\n        IsDisabled = false,\n        IsDiscreteChannelRelease = false,\n        IsVersionControlled = false,\n        LifecycleId = \"Lifecycles-123\",\n        ProjectGroupId = \"ProjectGroups-123\",\n        TenantedDeploymentParticipation = \"TenantedOrUntenanted\",\n        ConnectivityPolicy = new Octopusdeploy.Inputs.ProjectConnectivityPolicyArgs\n        {\n            AllowDeploymentsToNoTargets = false,\n            ExcludeUnhealthyTargets = false,\n            SkipMachineBehavior = \"SkipUnavailableMachines\",\n        },\n        JiraServiceManagementExtensionSettings = new Octopusdeploy.Inputs.ProjectJiraServiceManagementExtensionSettingsArgs\n        {\n            ConnectionId = \"133d7fe602514060a48bc42ee9870f99\",\n            IsEnabled = false,\n            ServiceDeskProjectName = \"Test Service Desk Project (OK to Delete)\",\n        },\n        ServicenowExtensionSettings = new Octopusdeploy.Inputs.ProjectServicenowExtensionSettingsArgs\n        {\n            ConnectionId = \"989034685e2c48c4b06a29286c9ef5cc\",\n            IsEnabled = false,\n            IsStateAutomaticallyTransitioned = false,\n            StandardChangeTemplateName = \"Standard Change Template Name (OK to Delete)\",\n        },\n        Templates = new[]\n        {\n            new Octopusdeploy.Inputs.ProjectTemplateArgs\n            {\n                DefaultValue = \"example-default-value\",\n                HelpText = \"example-help-test\",\n                Label = \"example-label\",\n                Name = \"example-template-value\",\n                DisplaySettings = \n                {\n                    { \"Octopus.ControlType\", \"SingleLineText\" },\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewProject(ctx, \"example\", \u0026octopusdeploy.ProjectArgs{\n\t\t\tAutoCreateRelease:               pulumi.Bool(false),\n\t\t\tDefaultGuidedFailureMode:        pulumi.String(\"EnvironmentDefault\"),\n\t\t\tDefaultToSkipIfAlreadyInstalled: pulumi.Bool(false),\n\t\t\tDescription:                     pulumi.String(\"The development project.\"),\n\t\t\tDiscreteChannelRelease:          pulumi.Bool(false),\n\t\t\tIsDisabled:                      pulumi.Bool(false),\n\t\t\tIsDiscreteChannelRelease:        pulumi.Bool(false),\n\t\t\tIsVersionControlled:             pulumi.Bool(false),\n\t\t\tLifecycleId:                     pulumi.String(\"Lifecycles-123\"),\n\t\t\tProjectGroupId:                  pulumi.String(\"ProjectGroups-123\"),\n\t\t\tTenantedDeploymentParticipation: pulumi.String(\"TenantedOrUntenanted\"),\n\t\t\tConnectivityPolicy: \u0026octopusdeploy.ProjectConnectivityPolicyArgs{\n\t\t\t\tAllowDeploymentsToNoTargets: pulumi.Bool(false),\n\t\t\t\tExcludeUnhealthyTargets:     pulumi.Bool(false),\n\t\t\t\tSkipMachineBehavior:         pulumi.String(\"SkipUnavailableMachines\"),\n\t\t\t},\n\t\t\tJiraServiceManagementExtensionSettings: \u0026octopusdeploy.ProjectJiraServiceManagementExtensionSettingsArgs{\n\t\t\t\tConnectionId:           pulumi.String(\"133d7fe602514060a48bc42ee9870f99\"),\n\t\t\t\tIsEnabled:              pulumi.Bool(false),\n\t\t\t\tServiceDeskProjectName: pulumi.String(\"Test Service Desk Project (OK to Delete)\"),\n\t\t\t},\n\t\t\tServicenowExtensionSettings: \u0026octopusdeploy.ProjectServicenowExtensionSettingsArgs{\n\t\t\t\tConnectionId:                     pulumi.String(\"989034685e2c48c4b06a29286c9ef5cc\"),\n\t\t\t\tIsEnabled:                        pulumi.Bool(false),\n\t\t\t\tIsStateAutomaticallyTransitioned: pulumi.Bool(false),\n\t\t\t\tStandardChangeTemplateName:       pulumi.String(\"Standard Change Template Name (OK to Delete)\"),\n\t\t\t},\n\t\t\tTemplates: octopusdeploy.ProjectTemplateArray{\n\t\t\t\t\u0026octopusdeploy.ProjectTemplateArgs{\n\t\t\t\t\tDefaultValue: pulumi.String(\"example-default-value\"),\n\t\t\t\t\tHelpText:     pulumi.String(\"example-help-test\"),\n\t\t\t\t\tLabel:        pulumi.String(\"example-label\"),\n\t\t\t\t\tName:         pulumi.String(\"example-template-value\"),\n\t\t\t\t\tDisplaySettings: pulumi.AnyMap{\n\t\t\t\t\t\t\"Octopus.ControlType\": pulumi.Any(\"SingleLineText\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.Project;\nimport com.pulumi.octopusdeploy.ProjectArgs;\nimport com.pulumi.octopusdeploy.inputs.ProjectConnectivityPolicyArgs;\nimport com.pulumi.octopusdeploy.inputs.ProjectJiraServiceManagementExtensionSettingsArgs;\nimport com.pulumi.octopusdeploy.inputs.ProjectServicenowExtensionSettingsArgs;\nimport com.pulumi.octopusdeploy.inputs.ProjectTemplateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Project(\"example\", ProjectArgs.builder()        \n            .autoCreateRelease(false)\n            .defaultGuidedFailureMode(\"EnvironmentDefault\")\n            .defaultToSkipIfAlreadyInstalled(false)\n            .description(\"The development project.\")\n            .discreteChannelRelease(false)\n            .isDisabled(false)\n            .isDiscreteChannelRelease(false)\n            .isVersionControlled(false)\n            .lifecycleId(\"Lifecycles-123\")\n            .projectGroupId(\"ProjectGroups-123\")\n            .tenantedDeploymentParticipation(\"TenantedOrUntenanted\")\n            .connectivityPolicy(ProjectConnectivityPolicyArgs.builder()\n                .allowDeploymentsToNoTargets(false)\n                .excludeUnhealthyTargets(false)\n                .skipMachineBehavior(\"SkipUnavailableMachines\")\n                .build())\n            .jiraServiceManagementExtensionSettings(ProjectJiraServiceManagementExtensionSettingsArgs.builder()\n                .connectionId(\"133d7fe602514060a48bc42ee9870f99\")\n                .isEnabled(false)\n                .serviceDeskProjectName(\"Test Service Desk Project (OK to Delete)\")\n                .build())\n            .servicenowExtensionSettings(ProjectServicenowExtensionSettingsArgs.builder()\n                .connectionId(\"989034685e2c48c4b06a29286c9ef5cc\")\n                .isEnabled(false)\n                .isStateAutomaticallyTransitioned(false)\n                .standardChangeTemplateName(\"Standard Change Template Name (OK to Delete)\")\n                .build())\n            .templates(ProjectTemplateArgs.builder()\n                .defaultValue(\"example-default-value\")\n                .helpText(\"example-help-test\")\n                .label(\"example-label\")\n                .name(\"example-template-value\")\n                .displaySettings(Map.of(\"Octopus.ControlType\", \"SingleLineText\"))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:Project\n    properties:\n      autoCreateRelease: false\n      defaultGuidedFailureMode: EnvironmentDefault\n      defaultToSkipIfAlreadyInstalled: false\n      description: The development project.\n      discreteChannelRelease: false\n      isDisabled: false\n      isDiscreteChannelRelease: false\n      isVersionControlled: false\n      lifecycleId: Lifecycles-123\n      projectGroupId: ProjectGroups-123\n      tenantedDeploymentParticipation: TenantedOrUntenanted\n      connectivityPolicy:\n        allowDeploymentsToNoTargets: false\n        excludeUnhealthyTargets: false\n        skipMachineBehavior: SkipUnavailableMachines\n      jiraServiceManagementExtensionSettings:\n        connectionId: 133d7fe602514060a48bc42ee9870f99\n        isEnabled: false\n        serviceDeskProjectName: Test Service Desk Project (OK to Delete)\n      servicenowExtensionSettings:\n        connectionId: 989034685e2c48c4b06a29286c9ef5cc\n        isEnabled: false\n        isStateAutomaticallyTransitioned: false\n        standardChangeTemplateName: Standard Change Template Name (OK to Delete)\n      templates:\n        - defaultValue: example-default-value\n          helpText: example-help-test\n          label: example-label\n          name: example-template-value\n          displaySettings:\n            Octopus.ControlType: SingleLineText\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/project:Project [options] octopusdeploy_project.\u003cname\u003e \u003cproject-id\u003e\n```\n\n ",
            "properties": {
                "allowDeploymentsToNoTargets": {
                    "type": "boolean",
                    "deprecationMessage": "This value is only valid for an associated connectivity policy and should not be specified here."
                },
                "autoCreateRelease": {
                    "type": "boolean"
                },
                "autoDeployReleaseOverrides": {
                    "type": "string"
                },
                "clonedFromProjectId": {
                    "type": "string"
                },
                "connectivityPolicy": {
                    "$ref": "#/types/octopusdeploy:index/ProjectConnectivityPolicy:ProjectConnectivityPolicy"
                },
                "defaultGuidedFailureMode": {
                    "type": "string"
                },
                "defaultToSkipIfAlreadyInstalled": {
                    "type": "boolean"
                },
                "deploymentChangesTemplate": {
                    "type": "string"
                },
                "deploymentProcessId": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this project.\n"
                },
                "discreteChannelRelease": {
                    "type": "boolean",
                    "description": "Treats releases of different channels to the same environment as a separate deployment dimension\n"
                },
                "gitAnonymousPersistenceSettings": {
                    "$ref": "#/types/octopusdeploy:index/ProjectGitAnonymousPersistenceSettings:ProjectGitAnonymousPersistenceSettings",
                    "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                },
                "gitLibraryPersistenceSettings": {
                    "$ref": "#/types/octopusdeploy:index/ProjectGitLibraryPersistenceSettings:ProjectGitLibraryPersistenceSettings",
                    "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                },
                "gitUsernamePasswordPersistenceSettings": {
                    "$ref": "#/types/octopusdeploy:index/ProjectGitUsernamePasswordPersistenceSettings:ProjectGitUsernamePasswordPersistenceSettings",
                    "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                },
                "includedLibraryVariableSets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isDiscreteChannelRelease": {
                    "type": "boolean",
                    "description": "Treats releases of different channels to the same environment as a separate deployment dimension\n"
                },
                "isVersionControlled": {
                    "type": "boolean"
                },
                "jiraServiceManagementExtensionSettings": {
                    "$ref": "#/types/octopusdeploy:index/ProjectJiraServiceManagementExtensionSettings:ProjectJiraServiceManagementExtensionSettings",
                    "description": "Provides extension settings for the Jira Service Management (JSM) integration for this project.\n"
                },
                "lifecycleId": {
                    "type": "string",
                    "description": "The lifecycle ID associated with this project.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the project in Octopus Deploy. This name must be unique.\n"
                },
                "projectGroupId": {
                    "type": "string",
                    "description": "The project group ID associated with this project.\n"
                },
                "releaseCreationStrategy": {
                    "$ref": "#/types/octopusdeploy:index/ProjectReleaseCreationStrategy:ProjectReleaseCreationStrategy"
                },
                "releaseNotesTemplate": {
                    "type": "string"
                },
                "servicenowExtensionSettings": {
                    "$ref": "#/types/octopusdeploy:index/ProjectServicenowExtensionSettings:ProjectServicenowExtensionSettings",
                    "description": "Provides extension settings for the ServiceNow integration for this project.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable, unique identifier, used to identify a project.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this project.\n"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectTemplate:ProjectTemplate"
                    }
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "variableSetId": {
                    "type": "string"
                },
                "versioningStrategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectVersioningStrategy:ProjectVersioningStrategy"
                    }
                }
            },
            "required": [
                "autoCreateRelease",
                "autoDeployReleaseOverrides",
                "clonedFromProjectId",
                "connectivityPolicy",
                "defaultGuidedFailureMode",
                "defaultToSkipIfAlreadyInstalled",
                "deploymentChangesTemplate",
                "deploymentProcessId",
                "description",
                "includedLibraryVariableSets",
                "isDisabled",
                "isDiscreteChannelRelease",
                "isVersionControlled",
                "lifecycleId",
                "name",
                "projectGroupId",
                "releaseCreationStrategy",
                "releaseNotesTemplate",
                "slug",
                "spaceId",
                "tenantedDeploymentParticipation",
                "variableSetId",
                "versioningStrategies"
            ],
            "inputProperties": {
                "allowDeploymentsToNoTargets": {
                    "type": "boolean",
                    "deprecationMessage": "This value is only valid for an associated connectivity policy and should not be specified here."
                },
                "autoCreateRelease": {
                    "type": "boolean"
                },
                "autoDeployReleaseOverrides": {
                    "type": "string"
                },
                "clonedFromProjectId": {
                    "type": "string"
                },
                "connectivityPolicy": {
                    "$ref": "#/types/octopusdeploy:index/ProjectConnectivityPolicy:ProjectConnectivityPolicy"
                },
                "defaultGuidedFailureMode": {
                    "type": "string"
                },
                "defaultToSkipIfAlreadyInstalled": {
                    "type": "boolean"
                },
                "deploymentChangesTemplate": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this project.\n"
                },
                "discreteChannelRelease": {
                    "type": "boolean",
                    "description": "Treats releases of different channels to the same environment as a separate deployment dimension\n"
                },
                "gitAnonymousPersistenceSettings": {
                    "$ref": "#/types/octopusdeploy:index/ProjectGitAnonymousPersistenceSettings:ProjectGitAnonymousPersistenceSettings",
                    "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                },
                "gitLibraryPersistenceSettings": {
                    "$ref": "#/types/octopusdeploy:index/ProjectGitLibraryPersistenceSettings:ProjectGitLibraryPersistenceSettings",
                    "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                },
                "gitUsernamePasswordPersistenceSettings": {
                    "$ref": "#/types/octopusdeploy:index/ProjectGitUsernamePasswordPersistenceSettings:ProjectGitUsernamePasswordPersistenceSettings",
                    "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                },
                "includedLibraryVariableSets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isDiscreteChannelRelease": {
                    "type": "boolean",
                    "description": "Treats releases of different channels to the same environment as a separate deployment dimension\n"
                },
                "isVersionControlled": {
                    "type": "boolean"
                },
                "jiraServiceManagementExtensionSettings": {
                    "$ref": "#/types/octopusdeploy:index/ProjectJiraServiceManagementExtensionSettings:ProjectJiraServiceManagementExtensionSettings",
                    "description": "Provides extension settings for the Jira Service Management (JSM) integration for this project.\n"
                },
                "lifecycleId": {
                    "type": "string",
                    "description": "The lifecycle ID associated with this project.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the project in Octopus Deploy. This name must be unique.\n"
                },
                "projectGroupId": {
                    "type": "string",
                    "description": "The project group ID associated with this project.\n"
                },
                "releaseCreationStrategy": {
                    "$ref": "#/types/octopusdeploy:index/ProjectReleaseCreationStrategy:ProjectReleaseCreationStrategy"
                },
                "releaseNotesTemplate": {
                    "type": "string"
                },
                "servicenowExtensionSettings": {
                    "$ref": "#/types/octopusdeploy:index/ProjectServicenowExtensionSettings:ProjectServicenowExtensionSettings",
                    "description": "Provides extension settings for the ServiceNow integration for this project.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable, unique identifier, used to identify a project.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this project.\n"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectTemplate:ProjectTemplate"
                    }
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "versioningStrategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/ProjectVersioningStrategy:ProjectVersioningStrategy"
                    }
                }
            },
            "requiredInputs": [
                "lifecycleId",
                "projectGroupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Project resources.\n",
                "properties": {
                    "allowDeploymentsToNoTargets": {
                        "type": "boolean",
                        "deprecationMessage": "This value is only valid for an associated connectivity policy and should not be specified here."
                    },
                    "autoCreateRelease": {
                        "type": "boolean"
                    },
                    "autoDeployReleaseOverrides": {
                        "type": "string"
                    },
                    "clonedFromProjectId": {
                        "type": "string"
                    },
                    "connectivityPolicy": {
                        "$ref": "#/types/octopusdeploy:index/ProjectConnectivityPolicy:ProjectConnectivityPolicy"
                    },
                    "defaultGuidedFailureMode": {
                        "type": "string"
                    },
                    "defaultToSkipIfAlreadyInstalled": {
                        "type": "boolean"
                    },
                    "deploymentChangesTemplate": {
                        "type": "string"
                    },
                    "deploymentProcessId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this project.\n"
                    },
                    "discreteChannelRelease": {
                        "type": "boolean",
                        "description": "Treats releases of different channels to the same environment as a separate deployment dimension\n"
                    },
                    "gitAnonymousPersistenceSettings": {
                        "$ref": "#/types/octopusdeploy:index/ProjectGitAnonymousPersistenceSettings:ProjectGitAnonymousPersistenceSettings",
                        "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                    },
                    "gitLibraryPersistenceSettings": {
                        "$ref": "#/types/octopusdeploy:index/ProjectGitLibraryPersistenceSettings:ProjectGitLibraryPersistenceSettings",
                        "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                    },
                    "gitUsernamePasswordPersistenceSettings": {
                        "$ref": "#/types/octopusdeploy:index/ProjectGitUsernamePasswordPersistenceSettings:ProjectGitUsernamePasswordPersistenceSettings",
                        "description": "Provides Git-related persistence settings for a version-controlled project.\n"
                    },
                    "includedLibraryVariableSets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isDiscreteChannelRelease": {
                        "type": "boolean",
                        "description": "Treats releases of different channels to the same environment as a separate deployment dimension\n"
                    },
                    "isVersionControlled": {
                        "type": "boolean"
                    },
                    "jiraServiceManagementExtensionSettings": {
                        "$ref": "#/types/octopusdeploy:index/ProjectJiraServiceManagementExtensionSettings:ProjectJiraServiceManagementExtensionSettings",
                        "description": "Provides extension settings for the Jira Service Management (JSM) integration for this project.\n"
                    },
                    "lifecycleId": {
                        "type": "string",
                        "description": "The lifecycle ID associated with this project.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the project in Octopus Deploy. This name must be unique.\n"
                    },
                    "projectGroupId": {
                        "type": "string",
                        "description": "The project group ID associated with this project.\n"
                    },
                    "releaseCreationStrategy": {
                        "$ref": "#/types/octopusdeploy:index/ProjectReleaseCreationStrategy:ProjectReleaseCreationStrategy"
                    },
                    "releaseNotesTemplate": {
                        "type": "string"
                    },
                    "servicenowExtensionSettings": {
                        "$ref": "#/types/octopusdeploy:index/ProjectServicenowExtensionSettings:ProjectServicenowExtensionSettings",
                        "description": "Provides extension settings for the ServiceNow integration for this project.\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "A human-readable, unique identifier, used to identify a project.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this project.\n"
                    },
                    "templates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/ProjectTemplate:ProjectTemplate"
                        }
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "variableSetId": {
                        "type": "string"
                    },
                    "versioningStrategies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/ProjectVersioningStrategy:ProjectVersioningStrategy"
                        }
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/projectDeploymentTargetTrigger:ProjectDeploymentTargetTrigger": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.ProjectDeploymentTargetTrigger(\"example\", {\n    eventCategories: [\"MachineUnhealthy\"],\n    projectId: \"Projects-123\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.ProjectDeploymentTargetTrigger(\"example\",\n    event_categories=[\"MachineUnhealthy\"],\n    project_id=\"Projects-123\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.ProjectDeploymentTargetTrigger(\"example\", new()\n    {\n        EventCategories = new[]\n        {\n            \"MachineUnhealthy\",\n        },\n        ProjectId = \"Projects-123\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewProjectDeploymentTargetTrigger(ctx, \"example\", \u0026octopusdeploy.ProjectDeploymentTargetTriggerArgs{\n\t\t\tEventCategories: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"MachineUnhealthy\"),\n\t\t\t},\n\t\t\tProjectId: pulumi.String(\"Projects-123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.ProjectDeploymentTargetTrigger;\nimport com.pulumi.octopusdeploy.ProjectDeploymentTargetTriggerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ProjectDeploymentTargetTrigger(\"example\", ProjectDeploymentTargetTriggerArgs.builder()        \n            .eventCategories(\"MachineUnhealthy\")\n            .projectId(\"Projects-123\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:ProjectDeploymentTargetTrigger\n    properties:\n      eventCategories:\n        - MachineUnhealthy\n      projectId: Projects-123\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/projectDeploymentTargetTrigger:ProjectDeploymentTargetTrigger [options] octopusdeploy_project_deployment_target_trigger.\u003cname\u003e \u003cproject_deployment_target_trigger-id\u003e\n```\n\n ",
            "properties": {
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Apply environment id filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                },
                "eventCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Apply event category filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                },
                "eventGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Apply event group filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project to attach the trigger.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Apply event role filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                },
                "shouldRedeploy": {
                    "type": "boolean",
                    "description": "Enable to re-deploy to the deployment targets even if they are already up-to-date with the current deployment.\n"
                }
            },
            "required": [
                "name",
                "projectId"
            ],
            "inputProperties": {
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Apply environment id filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                },
                "eventCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Apply event category filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                },
                "eventGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Apply event group filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project to attach the trigger.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Apply event role filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                },
                "shouldRedeploy": {
                    "type": "boolean",
                    "description": "Enable to re-deploy to the deployment targets even if they are already up-to-date with the current deployment.\n"
                }
            },
            "requiredInputs": [
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectDeploymentTargetTrigger resources.\n",
                "properties": {
                    "environmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Apply environment id filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                    },
                    "eventCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Apply event category filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                    },
                    "eventGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Apply event group filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the project to attach the trigger.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Apply event role filters to restrict which deployment targets will actually cause the trigger to fire, and consequently, which deployment targets will be automatically deployed to.\n"
                    },
                    "shouldRedeploy": {
                        "type": "boolean",
                        "description": "Enable to re-deploy to the deployment targets even if they are already up-to-date with the current deployment.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/projectGroup:ProjectGroup": {
            "description": "This resource manages project groups in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.ProjectGroup(\"example\", {description: \"The development project group.\"});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.ProjectGroup(\"example\", description=\"The development project group.\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.ProjectGroup(\"example\", new()\n    {\n        Description = \"The development project group.\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewProjectGroup(ctx, \"example\", \u0026octopusdeploy.ProjectGroupArgs{\n\t\t\tDescription: pulumi.String(\"The development project group.\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.ProjectGroup;\nimport com.pulumi.octopusdeploy.ProjectGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ProjectGroup(\"example\", ProjectGroupArgs.builder()        \n            .description(\"The development project group.\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:ProjectGroup\n    properties:\n      description: The development project group.\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/projectGroup:ProjectGroup [options] octopusdeploy_project_group.\u003cname\u003e \u003cproject_group-id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this project group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "retentionPolicyId": {
                    "type": "string",
                    "description": "The ID of the retention policy associated with this project group.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this project group.\n"
                }
            },
            "required": [
                "description",
                "name",
                "retentionPolicyId",
                "spaceId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this project group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "retentionPolicyId": {
                    "type": "string",
                    "description": "The ID of the retention policy associated with this project group.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this project group.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectGroup resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this project group.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "retentionPolicyId": {
                        "type": "string",
                        "description": "The ID of the retention policy associated with this project group.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this project group.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/runbook:Runbook": {
            "description": "This resource manages runbooks in Octopus Deploy.\n",
            "properties": {
                "connectivityPolicy": {
                    "$ref": "#/types/octopusdeploy:index/RunbookConnectivityPolicy:RunbookConnectivityPolicy"
                },
                "defaultGuidedFailureMode": {
                    "type": "string",
                    "description": "Sets the runbook guided failure mode.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this runbook.\n"
                },
                "environmentScope": {
                    "type": "string",
                    "description": "Determines how the runbook is scoped to environments.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When environment_scope is set to \"Specified\", this is the list of environments the runbook can be run against.\n"
                },
                "forcePackageDownload": {
                    "type": "boolean",
                    "description": "Whether to force packages to be re-downloaded or not\n"
                },
                "multiTenancyMode": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the runbook in Octopus Deploy. This name must be unique.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project that this runbook belongs to.\n"
                },
                "publishedRunbookSnapshotId": {
                    "type": "string",
                    "description": "The published snapshot ID.\n"
                },
                "retentionPolicy": {
                    "$ref": "#/types/octopusdeploy:index/RunbookRetentionPolicy:RunbookRetentionPolicy",
                    "description": "Sets the runbook retention policy\n"
                },
                "runbookProcessId": {
                    "type": "string",
                    "description": "The runbook process ID.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this runbook.\n"
                }
            },
            "required": [
                "connectivityPolicy",
                "defaultGuidedFailureMode",
                "description",
                "environmentScope",
                "environments",
                "forcePackageDownload",
                "multiTenancyMode",
                "name",
                "projectId",
                "publishedRunbookSnapshotId",
                "retentionPolicy",
                "runbookProcessId",
                "spaceId"
            ],
            "inputProperties": {
                "connectivityPolicy": {
                    "$ref": "#/types/octopusdeploy:index/RunbookConnectivityPolicy:RunbookConnectivityPolicy"
                },
                "defaultGuidedFailureMode": {
                    "type": "string",
                    "description": "Sets the runbook guided failure mode.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this runbook.\n"
                },
                "environmentScope": {
                    "type": "string",
                    "description": "Determines how the runbook is scoped to environments.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When environment_scope is set to \"Specified\", this is the list of environments the runbook can be run against.\n"
                },
                "forcePackageDownload": {
                    "type": "boolean",
                    "description": "Whether to force packages to be re-downloaded or not\n"
                },
                "multiTenancyMode": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the runbook in Octopus Deploy. This name must be unique.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project that this runbook belongs to.\n"
                },
                "retentionPolicy": {
                    "$ref": "#/types/octopusdeploy:index/RunbookRetentionPolicy:RunbookRetentionPolicy",
                    "description": "Sets the runbook retention policy\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this runbook.\n"
                }
            },
            "requiredInputs": [
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Runbook resources.\n",
                "properties": {
                    "connectivityPolicy": {
                        "$ref": "#/types/octopusdeploy:index/RunbookConnectivityPolicy:RunbookConnectivityPolicy"
                    },
                    "defaultGuidedFailureMode": {
                        "type": "string",
                        "description": "Sets the runbook guided failure mode.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this runbook.\n"
                    },
                    "environmentScope": {
                        "type": "string",
                        "description": "Determines how the runbook is scoped to environments.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "When environment_scope is set to \"Specified\", this is the list of environments the runbook can be run against.\n"
                    },
                    "forcePackageDownload": {
                        "type": "boolean",
                        "description": "Whether to force packages to be re-downloaded or not\n"
                    },
                    "multiTenancyMode": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the runbook in Octopus Deploy. This name must be unique.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project that this runbook belongs to.\n"
                    },
                    "publishedRunbookSnapshotId": {
                        "type": "string",
                        "description": "The published snapshot ID.\n"
                    },
                    "retentionPolicy": {
                        "$ref": "#/types/octopusdeploy:index/RunbookRetentionPolicy:RunbookRetentionPolicy",
                        "description": "Sets the runbook retention policy\n"
                    },
                    "runbookProcessId": {
                        "type": "string",
                        "description": "The runbook process ID.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this runbook.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/runbookProcess:RunbookProcess": {
            "description": "This resource manages runbook processes in Octopus Deploy.\n",
            "properties": {
                "lastSnapshotId": {
                    "type": "string",
                    "description": "Read only value containing the last snapshot ID.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID associated with this runbook process.\n"
                },
                "runbookId": {
                    "type": "string",
                    "description": "The runbook ID associated with this runbook process.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStep:RunbookProcessStep"
                    }
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this runbook process.\n"
                }
            },
            "required": [
                "projectId",
                "runbookId",
                "spaceId",
                "version"
            ],
            "inputProperties": {
                "lastSnapshotId": {
                    "type": "string",
                    "description": "Read only value containing the last snapshot ID.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID associated with this runbook process.\n"
                },
                "runbookId": {
                    "type": "string",
                    "description": "The runbook ID associated with this runbook process.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/RunbookProcessStep:RunbookProcessStep"
                    }
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this runbook process.\n"
                }
            },
            "requiredInputs": [
                "runbookId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RunbookProcess resources.\n",
                "properties": {
                    "lastSnapshotId": {
                        "type": "string",
                        "description": "Read only value containing the last snapshot ID.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project ID associated with this runbook process.\n"
                    },
                    "runbookId": {
                        "type": "string",
                        "description": "The runbook ID associated with this runbook process.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/RunbookProcessStep:RunbookProcessStep"
                        }
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version number of this runbook process.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/scopedUserRole:ScopedUserRole": {
            "description": "This resource manages scoped user roles in Octopus Deploy.\n\n\u003e **NOTE on Team User Roles and Scoped User Roles:** We currently\nprovides both a standalone Scoped User Role resource\nand a Team resource with `user_roles` blocks defined in-line. At this time you \ncannot use a Team with in-line user_roles in conjunction with any Scoped User Role \nresources. Doing so will cause a conflict of user role settings and will overwrite \nuser roles.\n",
            "properties": {
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "projectGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "projectIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "spaceId": {
                    "type": "string"
                },
                "teamId": {
                    "type": "string"
                },
                "tenantIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userRoleId": {
                    "type": "string"
                }
            },
            "required": [
                "spaceId",
                "teamId",
                "userRoleId"
            ],
            "inputProperties": {
                "environmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "projectGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "projectIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "spaceId": {
                    "type": "string"
                },
                "teamId": {
                    "type": "string"
                },
                "tenantIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userRoleId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "spaceId",
                "teamId",
                "userRoleId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ScopedUserRole resources.\n",
                "properties": {
                    "environmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "projectGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "projectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "spaceId": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    },
                    "tenantIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "userRoleId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/scriptModule:ScriptModule": {
            "description": "This resource manages script modules in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.ScriptModule(\"example\", {\n    description: \"A script module to use.\",\n    script: {\n        body: `function Say-Hello()\r\n{\r\n    Write-Output \"Hello, Octopus!\"\r\n}\r\n\n`,\n        syntax: \"PowerShell\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.ScriptModule(\"example\",\n    description=\"A script module to use.\",\n    script=octopusdeploy.ScriptModuleScriptArgs(\n        body=\"\"\"function Say-Hello()\r\n{\r\n    Write-Output \"Hello, Octopus!\"\r\n}\r\n\n\"\"\",\n        syntax=\"PowerShell\",\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.ScriptModule(\"example\", new()\n    {\n        Description = \"A script module to use.\",\n        Script = new Octopusdeploy.Inputs.ScriptModuleScriptArgs\n        {\n            Body = @\"function Say-Hello()\r\n{\r\n    Write-Output \"\"Hello, Octopus!\"\"\r\n}\r\n\n\",\n            Syntax = \"PowerShell\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewScriptModule(ctx, \"example\", \u0026octopusdeploy.ScriptModuleArgs{\n\t\t\tDescription: pulumi.String(\"A script module to use.\"),\n\t\t\tScript: \u0026octopusdeploy.ScriptModuleScriptArgs{\n\t\t\t\tBody:   pulumi.String(\"function Say-Hello()\r\\n{\r\\n    Write-Output \\\"Hello, Octopus!\\\"\r\\n}\r\\n\\n\"),\n\t\t\t\tSyntax: pulumi.String(\"PowerShell\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.ScriptModule;\nimport com.pulumi.octopusdeploy.ScriptModuleArgs;\nimport com.pulumi.octopusdeploy.inputs.ScriptModuleScriptArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ScriptModule(\"example\", ScriptModuleArgs.builder()        \n            .description(\"A script module to use.\")\n            .script(ScriptModuleScriptArgs.builder()\n                .body(\"\"\"\nfunction Say-Hello()\r\n{\r\n    Write-Output \"Hello, Octopus!\"\r\n}\r\n\n                \"\"\")\n                .syntax(\"PowerShell\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:ScriptModule\n    properties:\n      description: A script module to use.\n      script:\n        body: \"function Say-Hello()\\r\\n{\\r\\n    Write-Output \\\"Hello, Octopus!\\\"\\r\\n}\\r\\n\\n\"\n        syntax: PowerShell\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/scriptModule:ScriptModule [options] octopusdeploy_script_module.\u003cname\u003e \u003cscript-module-id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this script module.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "script": {
                    "$ref": "#/types/octopusdeploy:index/ScriptModuleScript:ScriptModuleScript",
                    "description": "The script associated with this script module.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "variableSetId": {
                    "type": "string",
                    "description": "The variable set ID for this script module.\n"
                }
            },
            "required": [
                "name",
                "script",
                "spaceId",
                "variableSetId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this script module.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "script": {
                    "$ref": "#/types/octopusdeploy:index/ScriptModuleScript:ScriptModuleScript",
                    "description": "The script associated with this script module.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "variableSetId": {
                    "type": "string",
                    "description": "The variable set ID for this script module.\n"
                }
            },
            "requiredInputs": [
                "script"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ScriptModule resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this script module.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "script": {
                        "$ref": "#/types/octopusdeploy:index/ScriptModuleScript:ScriptModuleScript",
                        "description": "The script associated with this script module.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "variableSetId": {
                        "type": "string",
                        "description": "The variable set ID for this script module.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/space:Space": {
            "description": "This resource manages spaces in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.Space(\"example\", {\n    description: \"A space for the development team.\",\n    isDefault: false,\n    isTaskQueueStopped: false,\n    spaceManagersTeamMembers: [\n        \"Users-123\",\n        \"Users-321\",\n    ],\n    spaceManagersTeams: [\"teams-everyone\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.Space(\"example\",\n    description=\"A space for the development team.\",\n    is_default=False,\n    is_task_queue_stopped=False,\n    space_managers_team_members=[\n        \"Users-123\",\n        \"Users-321\",\n    ],\n    space_managers_teams=[\"teams-everyone\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.Space(\"example\", new()\n    {\n        Description = \"A space for the development team.\",\n        IsDefault = false,\n        IsTaskQueueStopped = false,\n        SpaceManagersTeamMembers = new[]\n        {\n            \"Users-123\",\n            \"Users-321\",\n        },\n        SpaceManagersTeams = new[]\n        {\n            \"teams-everyone\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewSpace(ctx, \"example\", \u0026octopusdeploy.SpaceArgs{\n\t\t\tDescription:        pulumi.String(\"A space for the development team.\"),\n\t\t\tIsDefault:          pulumi.Bool(false),\n\t\t\tIsTaskQueueStopped: pulumi.Bool(false),\n\t\t\tSpaceManagersTeamMembers: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Users-123\"),\n\t\t\t\tpulumi.String(\"Users-321\"),\n\t\t\t},\n\t\t\tSpaceManagersTeams: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"teams-everyone\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.Space;\nimport com.pulumi.octopusdeploy.SpaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Space(\"example\", SpaceArgs.builder()        \n            .description(\"A space for the development team.\")\n            .isDefault(false)\n            .isTaskQueueStopped(false)\n            .spaceManagersTeamMembers(            \n                \"Users-123\",\n                \"Users-321\")\n            .spaceManagersTeams(\"teams-everyone\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:Space\n    properties:\n      description: A space for the development team.\n      isDefault: false\n      isTaskQueueStopped: false\n      spaceManagersTeamMembers:\n        - Users-123\n        - Users-321\n      spaceManagersTeams:\n        - teams-everyone\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/space:Space [options] octopusdeploy_space.\u003cname\u003e \u003cspace-id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this space.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Specifies if this space is the default space in Octopus.\n"
                },
                "isTaskQueueStopped": {
                    "type": "boolean",
                    "description": "Specifies the status of the task queue for this space.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource, no more than 20 characters long\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The unique slug of this space.\n"
                },
                "spaceManagersTeamMembers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of user IDs designated to be managers of this space.\n"
                },
                "spaceManagersTeams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of team IDs designated to be managers of this space.\n"
                }
            },
            "required": [
                "name",
                "slug",
                "spaceManagersTeamMembers",
                "spaceManagersTeams"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this space.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Specifies if this space is the default space in Octopus.\n"
                },
                "isTaskQueueStopped": {
                    "type": "boolean",
                    "description": "Specifies the status of the task queue for this space.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource, no more than 20 characters long\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The unique slug of this space.\n"
                },
                "spaceManagersTeamMembers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of user IDs designated to be managers of this space.\n"
                },
                "spaceManagersTeams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of team IDs designated to be managers of this space.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Space resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this space.\n"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Specifies if this space is the default space in Octopus.\n"
                    },
                    "isTaskQueueStopped": {
                        "type": "boolean",
                        "description": "Specifies the status of the task queue for this space.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource, no more than 20 characters long\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The unique slug of this space.\n"
                    },
                    "spaceManagersTeamMembers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of user IDs designated to be managers of this space.\n"
                    },
                    "spaceManagersTeams": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of team IDs designated to be managers of this space.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/sshConnectionDeploymentTarget:SshConnectionDeploymentTarget": {
            "description": "This resource manages SSH connection deployment targets in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.SshConnectionDeploymentTarget(\"example\", {\n    fingerprint: \"[fingerprint]\",\n    host: \"[host]\",\n    port: 22,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.SshConnectionDeploymentTarget(\"example\",\n    fingerprint=\"[fingerprint]\",\n    host=\"[host]\",\n    port=22)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.SshConnectionDeploymentTarget(\"example\", new()\n    {\n        Fingerprint = \"[fingerprint]\",\n        Host = \"[host]\",\n        Port = 22,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewSshConnectionDeploymentTarget(ctx, \"example\", \u0026octopusdeploy.SshConnectionDeploymentTargetArgs{\n\t\t\tFingerprint: pulumi.String(\"[fingerprint]\"),\n\t\t\tHost:        pulumi.String(\"[host]\"),\n\t\t\tPort:        pulumi.Int(22),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.SshConnectionDeploymentTarget;\nimport com.pulumi.octopusdeploy.SshConnectionDeploymentTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new SshConnectionDeploymentTarget(\"example\", SshConnectionDeploymentTargetArgs.builder()        \n            .fingerprint(\"[fingerprint]\")\n            .host(\"[host]\")\n            .port(22)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:SshConnectionDeploymentTarget\n    properties:\n      fingerprint: '[fingerprint]'\n      host: '[host]'\n      port: 22\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/sshConnectionDeploymentTarget:SshConnectionDeploymentTarget [options] octopusdeploy_ssh_connection_deployment_target.\u003cname\u003e \u003caccount-id\u003e\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/SshConnectionDeploymentTargetEndpoint:SshConnectionDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "fingerprint": {
                    "type": "string"
                },
                "hasLatestCalamari": {
                    "type": "boolean"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "host": {
                    "type": "string"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isInProcess": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "required": [
                "accountId",
                "endpoints",
                "environments",
                "fingerprint",
                "hasLatestCalamari",
                "healthStatus",
                "host",
                "isDisabled",
                "isInProcess",
                "machinePolicyId",
                "name",
                "operatingSystem",
                "roles",
                "shellName",
                "shellVersion",
                "spaceId",
                "status",
                "statusSummary",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "thumbprint",
                "uri"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string"
                },
                "dotNetCorePlatform": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/SshConnectionDeploymentTargetEndpoint:SshConnectionDeploymentTargetEndpoint"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "fingerprint": {
                    "type": "string"
                },
                "healthStatus": {
                    "type": "string",
                    "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                },
                "host": {
                    "type": "string"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "machinePolicyId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "proxyId": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shellName": {
                    "type": "string"
                },
                "shellVersion": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                },
                "statusSummary": {
                    "type": "string",
                    "description": "A summary elaborating on the status of this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "thumbprint": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "accountId",
                "environments",
                "fingerprint",
                "host",
                "roles"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SshConnectionDeploymentTarget resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "dotNetCorePlatform": {
                        "type": "string"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/SshConnectionDeploymentTargetEndpoint:SshConnectionDeploymentTargetEndpoint"
                        }
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "fingerprint": {
                        "type": "string"
                    },
                    "hasLatestCalamari": {
                        "type": "boolean"
                    },
                    "healthStatus": {
                        "type": "string",
                        "description": "Represents the health status of this deployment target. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "host": {
                        "type": "string"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isInProcess": {
                        "type": "boolean"
                    },
                    "machinePolicyId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "operatingSystem": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "proxyId": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shellName": {
                        "type": "string"
                    },
                    "shellVersion": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this resource. Valid statuses are `CalamariNeedsUpgrade`, `Disabled`, `NeedsUpgrade`, `Offline`, `Online`, or `Unknown`.\n"
                    },
                    "statusSummary": {
                        "type": "string",
                        "description": "A summary elaborating on the status of this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "thumbprint": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/sshKeyAccount:SshKeyAccount": {
            "description": "This resource manages SSH key accounts in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.SshKeyAccount(\"example\", {\n    privateKeyFile: \"[private_key_file]\",\n    username: \"[username]\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.SshKeyAccount(\"example\",\n    private_key_file=\"[private_key_file]\",\n    username=\"[username]\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.SshKeyAccount(\"example\", new()\n    {\n        PrivateKeyFile = \"[private_key_file]\",\n        Username = \"[username]\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewSshKeyAccount(ctx, \"example\", \u0026octopusdeploy.SshKeyAccountArgs{\n\t\t\tPrivateKeyFile: pulumi.String(\"[private_key_file]\"),\n\t\t\tUsername:       pulumi.String(\"[username]\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.SshKeyAccount;\nimport com.pulumi.octopusdeploy.SshKeyAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new SshKeyAccount(\"example\", SshKeyAccountArgs.builder()        \n            .privateKeyFile(\"[private_key_file]\")\n            .username(\"[username]\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:SshKeyAccount\n    properties:\n      privateKeyFile: '[private_key_file]'\n      username: '[username]'\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/sshKeyAccount:SshKeyAccount [options] octopusdeploy_ssh_key_account.\u003cname\u003e \u003caccount-id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this SSH key account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "privateKeyFile": {
                    "type": "string",
                    "secret": true
                },
                "privateKeyPassphrase": {
                    "type": "string",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "required": [
                "environments",
                "name",
                "privateKeyFile",
                "spaceId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "username"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this SSH key account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "privateKeyFile": {
                    "type": "string",
                    "secret": true
                },
                "privateKeyPassphrase": {
                    "type": "string",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "privateKeyFile",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SshKeyAccount resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this SSH key account.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "privateKeyFile": {
                        "type": "string",
                        "secret": true
                    },
                    "privateKeyPassphrase": {
                        "type": "string",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username associated with this resource.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/staticWorkerPool:StaticWorkerPool": {
            "description": "This resource manages static worker pools in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.StaticWorkerPool(\"example\", {\n    description: \"Description for the static worker pool.\",\n    isDefault: true,\n    sortOrder: 5,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.StaticWorkerPool(\"example\",\n    description=\"Description for the static worker pool.\",\n    is_default=True,\n    sort_order=5)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.StaticWorkerPool(\"example\", new()\n    {\n        Description = \"Description for the static worker pool.\",\n        IsDefault = true,\n        SortOrder = 5,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewStaticWorkerPool(ctx, \"example\", \u0026octopusdeploy.StaticWorkerPoolArgs{\n\t\t\tDescription: pulumi.String(\"Description for the static worker pool.\"),\n\t\t\tIsDefault:   pulumi.Bool(true),\n\t\t\tSortOrder:   pulumi.Int(5),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.StaticWorkerPool;\nimport com.pulumi.octopusdeploy.StaticWorkerPoolArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new StaticWorkerPool(\"example\", StaticWorkerPoolArgs.builder()        \n            .description(\"Description for the static worker pool.\")\n            .isDefault(true)\n            .sortOrder(5)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:StaticWorkerPool\n    properties:\n      description: Description for the static worker pool.\n      isDefault: true\n      sortOrder: 5\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "canAddWorkers": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this static worker pool.\n"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The order number to sort a dynamic worker pool.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                }
            },
            "required": [
                "canAddWorkers",
                "name",
                "sortOrder",
                "spaceId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this static worker pool.\n"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The order number to sort a dynamic worker pool.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StaticWorkerPool resources.\n",
                "properties": {
                    "canAddWorkers": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this static worker pool.\n"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "sortOrder": {
                        "type": "integer",
                        "description": "The order number to sort a dynamic worker pool.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/tag:Tag": {
            "description": "This resource manages tags in Octopus Deploy.\n",
            "properties": {
                "canonicalTagName": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this tag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "sortOrder": {
                    "type": "integer"
                },
                "tagSetId": {
                    "type": "string",
                    "description": "The ID of the associated tag set.\n"
                }
            },
            "required": [
                "canonicalTagName",
                "color",
                "name",
                "sortOrder",
                "tagSetId"
            ],
            "inputProperties": {
                "color": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this tag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "sortOrder": {
                    "type": "integer"
                },
                "tagSetId": {
                    "type": "string",
                    "description": "The ID of the associated tag set.\n"
                }
            },
            "requiredInputs": [
                "color",
                "tagSetId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Tag resources.\n",
                "properties": {
                    "canonicalTagName": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this tag.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "sortOrder": {
                        "type": "integer"
                    },
                    "tagSetId": {
                        "type": "string",
                        "description": "The ID of the associated tag set.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/tagSet:TagSet": {
            "description": "This resource manages tag sets in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.TagSet(\"example\", {description: \"Provides tenants with access to certain early access programs.\"});\n// tags are distinct resources and associated with tag sets through tag_set_id\nconst alpha = new octopusdeploy.Tag(\"alpha\", {\n    color: \"#00FF00\",\n    tagSetId: example.id,\n});\nconst beta = new octopusdeploy.Tag(\"beta\", {\n    color: \"#FF0000\",\n    tagSetId: example.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.TagSet(\"example\", description=\"Provides tenants with access to certain early access programs.\")\n# tags are distinct resources and associated with tag sets through tag_set_id\nalpha = octopusdeploy.Tag(\"alpha\",\n    color=\"#00FF00\",\n    tag_set_id=example.id)\nbeta = octopusdeploy.Tag(\"beta\",\n    color=\"#FF0000\",\n    tag_set_id=example.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.TagSet(\"example\", new()\n    {\n        Description = \"Provides tenants with access to certain early access programs.\",\n    });\n\n    // tags are distinct resources and associated with tag sets through tag_set_id\n    var alpha = new Octopusdeploy.Tag(\"alpha\", new()\n    {\n        Color = \"#00FF00\",\n        TagSetId = example.Id,\n    });\n\n    var beta = new Octopusdeploy.Tag(\"beta\", new()\n    {\n        Color = \"#FF0000\",\n        TagSetId = example.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := octopusdeploy.NewTagSet(ctx, \"example\", \u0026octopusdeploy.TagSetArgs{\n\t\t\tDescription: pulumi.String(\"Provides tenants with access to certain early access programs.\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = octopusdeploy.NewTag(ctx, \"alpha\", \u0026octopusdeploy.TagArgs{\n\t\t\tColor:    pulumi.String(\"#00FF00\"),\n\t\t\tTagSetId: example.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = octopusdeploy.NewTag(ctx, \"beta\", \u0026octopusdeploy.TagArgs{\n\t\t\tColor:    pulumi.String(\"#FF0000\"),\n\t\t\tTagSetId: example.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.TagSet;\nimport com.pulumi.octopusdeploy.TagSetArgs;\nimport com.pulumi.octopusdeploy.Tag;\nimport com.pulumi.octopusdeploy.TagArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new TagSet(\"example\", TagSetArgs.builder()        \n            .description(\"Provides tenants with access to certain early access programs.\")\n            .build());\n\n        var alpha = new Tag(\"alpha\", TagArgs.builder()        \n            .color(\"#00FF00\")\n            .tagSetId(example.id())\n            .build());\n\n        var beta = new Tag(\"beta\", TagArgs.builder()        \n            .color(\"#FF0000\")\n            .tagSetId(example.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example: # tags are distinct resources and associated with tag sets through tag_set_id\n    type: octopusdeploy:TagSet\n    properties:\n      description: Provides tenants with access to certain early access programs.\n  alpha:\n    type: octopusdeploy:Tag\n    properties:\n      color: '#00FF00'\n      tagSetId: ${example.id}\n  beta:\n    type: octopusdeploy:Tag\n    properties:\n      color: '#FF0000'\n      tagSetId: ${example.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/tagSet:TagSet [options] octopusdeploy_tag_set.\u003cname\u003e \u003ctag-set-id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this tag set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The sort order associated with this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                }
            },
            "required": [
                "name",
                "sortOrder",
                "spaceId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this tag set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "sortOrder": {
                    "type": "integer",
                    "description": "The sort order associated with this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TagSet resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this tag set.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "sortOrder": {
                        "type": "integer",
                        "description": "The sort order associated with this resource.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/team:Team": {
            "description": "This resource manages teams in Octopus Deploy.\n\n\u003e **NOTE on Team User Roles and Scoped User Roles:** We currently\nprovides both a standalone Scoped User Role resource\nand a Team resource with `user_roles` blocks defined in-line. At this time you \ncannot use a Team with in-line user_roles in conjunction with any Scoped User Role \nresources. Doing so will cause a conflict of user role settings and will overwrite \nuser roles.\n",
            "properties": {
                "canBeDeleted": {
                    "type": "boolean"
                },
                "canBeRenamed": {
                    "type": "boolean"
                },
                "canChangeMembers": {
                    "type": "boolean"
                },
                "canChangeRoles": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The user-friendly description of this team.\n"
                },
                "externalSecurityGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/TeamExternalSecurityGroup:TeamExternalSecurityGroup"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of this team.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space associated with this team.\n"
                },
                "userRoles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/TeamUserRole:TeamUserRole"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of user IDs designated to be members of this team.\n"
                }
            },
            "required": [
                "canBeDeleted",
                "canBeRenamed",
                "canChangeMembers",
                "canChangeRoles",
                "name",
                "spaceId",
                "userRoles",
                "users"
            ],
            "inputProperties": {
                "canBeDeleted": {
                    "type": "boolean"
                },
                "canBeRenamed": {
                    "type": "boolean"
                },
                "canChangeMembers": {
                    "type": "boolean"
                },
                "canChangeRoles": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The user-friendly description of this team.\n"
                },
                "externalSecurityGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/TeamExternalSecurityGroup:TeamExternalSecurityGroup"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of this team.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space associated with this team.\n"
                },
                "userRoles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/TeamUserRole:TeamUserRole"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of user IDs designated to be members of this team.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Team resources.\n",
                "properties": {
                    "canBeDeleted": {
                        "type": "boolean"
                    },
                    "canBeRenamed": {
                        "type": "boolean"
                    },
                    "canChangeMembers": {
                        "type": "boolean"
                    },
                    "canChangeRoles": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "description": "The user-friendly description of this team.\n"
                    },
                    "externalSecurityGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/TeamExternalSecurityGroup:TeamExternalSecurityGroup"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this team.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space associated with this team.\n"
                    },
                    "userRoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/TeamUserRole:TeamUserRole"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of user IDs designated to be members of this team.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/tenant:Tenant": {
            "description": "This resource manages tenants in Octopus Deploy.\n",
            "properties": {
                "clonedFromTenantId": {
                    "type": "string",
                    "description": "The ID of the tenant from which this tenant was cloned.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this tenant.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/TenantProjectEnvironment:TenantProjectEnvironment"
                    }
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                }
            },
            "required": [
                "name",
                "spaceId",
                "tenantTags"
            ],
            "inputProperties": {
                "clonedFromTenantId": {
                    "type": "string",
                    "description": "The ID of the tenant from which this tenant was cloned.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this tenant.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "projectEnvironments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/TenantProjectEnvironment:TenantProjectEnvironment"
                    }
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Tenant resources.\n",
                "properties": {
                    "clonedFromTenantId": {
                        "type": "string",
                        "description": "The ID of the tenant from which this tenant was cloned.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this tenant.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "projectEnvironments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/TenantProjectEnvironment:TenantProjectEnvironment"
                        }
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/tenantCommonVariable:TenantCommonVariable": {
            "description": "This resource manages tenant common variables in Octopus Deploy.\n",
            "properties": {
                "libraryVariableSetId": {
                    "type": "string"
                },
                "templateId": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "secret": true
                }
            },
            "required": [
                "libraryVariableSetId",
                "templateId",
                "tenantId"
            ],
            "inputProperties": {
                "libraryVariableSetId": {
                    "type": "string"
                },
                "templateId": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "secret": true
                }
            },
            "requiredInputs": [
                "libraryVariableSetId",
                "templateId",
                "tenantId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TenantCommonVariable resources.\n",
                "properties": {
                    "libraryVariableSetId": {
                        "type": "string"
                    },
                    "templateId": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/tenantProjectVariable:TenantProjectVariable": {
            "description": "This resource manages tenant project variables in Octopus Deploy.\n",
            "properties": {
                "environmentId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "templateId": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "secret": true
                }
            },
            "required": [
                "environmentId",
                "projectId",
                "templateId",
                "tenantId"
            ],
            "inputProperties": {
                "environmentId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "templateId": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "secret": true
                }
            },
            "requiredInputs": [
                "environmentId",
                "projectId",
                "templateId",
                "tenantId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TenantProjectVariable resources.\n",
                "properties": {
                    "environmentId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "templateId": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/tokenAccount:TokenAccount": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.TokenAccount(\"example\", {token: \"[token]\"});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.TokenAccount(\"example\", token=\"[token]\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.TokenAccount(\"example\", new()\n    {\n        Token = \"[token]\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewTokenAccount(ctx, \"example\", \u0026octopusdeploy.TokenAccountArgs{\n\t\t\tToken: pulumi.String(\"[token]\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.TokenAccount;\nimport com.pulumi.octopusdeploy.TokenAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new TokenAccount(\"example\", TokenAccountArgs.builder()        \n            .token(\"[token]\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:TokenAccount\n    properties:\n      token: '[token]'\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/tokenAccount:TokenAccount [options] octopusdeploy_token_account.\u003cname\u003e \u003caccount-id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this token account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "token": {
                    "type": "string",
                    "description": "The token of this resource.\n",
                    "secret": true
                }
            },
            "required": [
                "environments",
                "name",
                "spaceId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "token"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this token account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "token": {
                    "type": "string",
                    "description": "The token of this resource.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "token"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TokenAccount resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this token account.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "The token of this resource.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/user:User": {
            "description": "This resource manages users in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.User(\"example\", {\n    displayName: \"Bob Smith\",\n    emailAddress: \"bob.smith@example.com\",\n    identities: [{\n        claims: [\n            {\n                isIdentifyingClaim: true,\n                name: \"email\",\n                value: \"bob.smith@example.com\",\n            },\n            {\n                isIdentifyingClaim: false,\n                name: \"dn\",\n                value: \"Bob Smith\",\n            },\n        ],\n        provider: \"Octopus ID\",\n    }],\n    isActive: true,\n    isService: false,\n    password: \"###########\",\n    username: \"[username]\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.User(\"example\",\n    display_name=\"Bob Smith\",\n    email_address=\"bob.smith@example.com\",\n    identities=[octopusdeploy.UserIdentityArgs(\n        claims=[\n            octopusdeploy.UserIdentityClaimArgs(\n                is_identifying_claim=True,\n                name=\"email\",\n                value=\"bob.smith@example.com\",\n            ),\n            octopusdeploy.UserIdentityClaimArgs(\n                is_identifying_claim=False,\n                name=\"dn\",\n                value=\"Bob Smith\",\n            ),\n        ],\n        provider=\"Octopus ID\",\n    )],\n    is_active=True,\n    is_service=False,\n    password=\"###########\",\n    username=\"[username]\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.User(\"example\", new()\n    {\n        DisplayName = \"Bob Smith\",\n        EmailAddress = \"bob.smith@example.com\",\n        Identities = new[]\n        {\n            new Octopusdeploy.Inputs.UserIdentityArgs\n            {\n                Claims = new[]\n                {\n                    new Octopusdeploy.Inputs.UserIdentityClaimArgs\n                    {\n                        IsIdentifyingClaim = true,\n                        Name = \"email\",\n                        Value = \"bob.smith@example.com\",\n                    },\n                    new Octopusdeploy.Inputs.UserIdentityClaimArgs\n                    {\n                        IsIdentifyingClaim = false,\n                        Name = \"dn\",\n                        Value = \"Bob Smith\",\n                    },\n                },\n                Provider = \"Octopus ID\",\n            },\n        },\n        IsActive = true,\n        IsService = false,\n        Password = \"###########\",\n        Username = \"[username]\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewUser(ctx, \"example\", \u0026octopusdeploy.UserArgs{\n\t\t\tDisplayName:  pulumi.String(\"Bob Smith\"),\n\t\t\tEmailAddress: pulumi.String(\"bob.smith@example.com\"),\n\t\t\tIdentities: octopusdeploy.UserIdentityArray{\n\t\t\t\t\u0026octopusdeploy.UserIdentityArgs{\n\t\t\t\t\tClaims: octopusdeploy.UserIdentityClaimArray{\n\t\t\t\t\t\t\u0026octopusdeploy.UserIdentityClaimArgs{\n\t\t\t\t\t\t\tIsIdentifyingClaim: pulumi.Bool(true),\n\t\t\t\t\t\t\tName:               pulumi.String(\"email\"),\n\t\t\t\t\t\t\tValue:              pulumi.String(\"bob.smith@example.com\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026octopusdeploy.UserIdentityClaimArgs{\n\t\t\t\t\t\t\tIsIdentifyingClaim: pulumi.Bool(false),\n\t\t\t\t\t\t\tName:               pulumi.String(\"dn\"),\n\t\t\t\t\t\t\tValue:              pulumi.String(\"Bob Smith\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tProvider: pulumi.String(\"Octopus ID\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tIsActive:  pulumi.Bool(true),\n\t\t\tIsService: pulumi.Bool(false),\n\t\t\tPassword:  pulumi.String(\"###########\"),\n\t\t\tUsername:  pulumi.String(\"[username]\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.User;\nimport com.pulumi.octopusdeploy.UserArgs;\nimport com.pulumi.octopusdeploy.inputs.UserIdentityArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new User(\"example\", UserArgs.builder()        \n            .displayName(\"Bob Smith\")\n            .emailAddress(\"bob.smith@example.com\")\n            .identities(UserIdentityArgs.builder()\n                .claims(                \n                    UserIdentityClaimArgs.builder()\n                        .isIdentifyingClaim(true)\n                        .name(\"email\")\n                        .value(\"bob.smith@example.com\")\n                        .build(),\n                    UserIdentityClaimArgs.builder()\n                        .isIdentifyingClaim(false)\n                        .name(\"dn\")\n                        .value(\"Bob Smith\")\n                        .build())\n                .provider(\"Octopus ID\")\n                .build())\n            .isActive(true)\n            .isService(false)\n            .password(\"###########\")\n            .username(\"[username]\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:User\n    properties:\n      displayName: Bob Smith\n      emailAddress: bob.smith@example.com\n      identities:\n        - claims:\n            - isIdentifyingClaim: true\n              name: email\n              value: bob.smith@example.com\n            - isIdentifyingClaim: false\n              name: dn\n              value: Bob Smith\n          provider: Octopus ID\n      isActive: true\n      isService: false\n      password: '###########'\n      # get from secure environment/store\n      username: '[username]'\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/user:User [options] octopusdeploy_user.\u003cname\u003e \u003cuser-id\u003e\n```\n\n ",
            "properties": {
                "canPasswordBeEdited": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource.\n"
                },
                "emailAddress": {
                    "type": "string",
                    "description": "The email address of this resource.\n"
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/UserIdentity:UserIdentity"
                    }
                },
                "isActive": {
                    "type": "boolean"
                },
                "isRequestor": {
                    "type": "boolean"
                },
                "isService": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "required": [
                "canPasswordBeEdited",
                "displayName",
                "isRequestor",
                "username"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "The display name of this resource.\n"
                },
                "emailAddress": {
                    "type": "string",
                    "description": "The email address of this resource.\n"
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/octopusdeploy:index/UserIdentity:UserIdentity"
                    }
                },
                "isActive": {
                    "type": "boolean"
                },
                "isService": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "displayName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "canPasswordBeEdited": {
                        "type": "boolean"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of this resource.\n"
                    },
                    "emailAddress": {
                        "type": "string",
                        "description": "The email address of this resource.\n"
                    },
                    "identities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/UserIdentity:UserIdentity"
                        }
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "isRequestor": {
                        "type": "boolean"
                    },
                    "isService": {
                        "type": "boolean"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password associated with this resource.\n",
                        "secret": true
                    },
                    "username": {
                        "type": "string",
                        "description": "The username associated with this resource.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/userRole:UserRole": {
            "description": "This resource manages user roles in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.UserRole(\"example\", {\n    canBeDeleted: true,\n    description: \"Responsible for all development-related operations.\",\n    grantedSpacePermissions: [\n        \"DeploymentCreate\",\n        \"DeploymentDelete\",\n        \"DeploymentView\",\n    ],\n    grantedSystemPermissions: [\"SpaceCreate\"],\n    spacePermissionDescriptions: [\n        \"Delete deployments (restrictable to Environments, Projects, Tenants)\",\n        \"Deploy releases to target environments (restrictable to Environments, Projects, Tenants)\",\n        \"View deployments (restrictable to Environments, Projects, Tenants)\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.UserRole(\"example\",\n    can_be_deleted=True,\n    description=\"Responsible for all development-related operations.\",\n    granted_space_permissions=[\n        \"DeploymentCreate\",\n        \"DeploymentDelete\",\n        \"DeploymentView\",\n    ],\n    granted_system_permissions=[\"SpaceCreate\"],\n    space_permission_descriptions=[\n        \"Delete deployments (restrictable to Environments, Projects, Tenants)\",\n        \"Deploy releases to target environments (restrictable to Environments, Projects, Tenants)\",\n        \"View deployments (restrictable to Environments, Projects, Tenants)\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.UserRole(\"example\", new()\n    {\n        CanBeDeleted = true,\n        Description = \"Responsible for all development-related operations.\",\n        GrantedSpacePermissions = new[]\n        {\n            \"DeploymentCreate\",\n            \"DeploymentDelete\",\n            \"DeploymentView\",\n        },\n        GrantedSystemPermissions = new[]\n        {\n            \"SpaceCreate\",\n        },\n        SpacePermissionDescriptions = new[]\n        {\n            \"Delete deployments (restrictable to Environments, Projects, Tenants)\",\n            \"Deploy releases to target environments (restrictable to Environments, Projects, Tenants)\",\n            \"View deployments (restrictable to Environments, Projects, Tenants)\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewUserRole(ctx, \"example\", \u0026octopusdeploy.UserRoleArgs{\n\t\t\tCanBeDeleted: pulumi.Bool(true),\n\t\t\tDescription:  pulumi.String(\"Responsible for all development-related operations.\"),\n\t\t\tGrantedSpacePermissions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"DeploymentCreate\"),\n\t\t\t\tpulumi.String(\"DeploymentDelete\"),\n\t\t\t\tpulumi.String(\"DeploymentView\"),\n\t\t\t},\n\t\t\tGrantedSystemPermissions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"SpaceCreate\"),\n\t\t\t},\n\t\t\tSpacePermissionDescriptions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Delete deployments (restrictable to Environments, Projects, Tenants)\"),\n\t\t\t\tpulumi.String(\"Deploy releases to target environments (restrictable to Environments, Projects, Tenants)\"),\n\t\t\t\tpulumi.String(\"View deployments (restrictable to Environments, Projects, Tenants)\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.UserRole;\nimport com.pulumi.octopusdeploy.UserRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new UserRole(\"example\", UserRoleArgs.builder()        \n            .canBeDeleted(true)\n            .description(\"Responsible for all development-related operations.\")\n            .grantedSpacePermissions(            \n                \"DeploymentCreate\",\n                \"DeploymentDelete\",\n                \"DeploymentView\")\n            .grantedSystemPermissions(\"SpaceCreate\")\n            .spacePermissionDescriptions(            \n                \"Delete deployments (restrictable to Environments, Projects, Tenants)\",\n                \"Deploy releases to target environments (restrictable to Environments, Projects, Tenants)\",\n                \"View deployments (restrictable to Environments, Projects, Tenants)\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:UserRole\n    properties:\n      canBeDeleted: true\n      description: Responsible for all development-related operations.\n      grantedSpacePermissions:\n        - DeploymentCreate\n        - DeploymentDelete\n        - DeploymentView\n      grantedSystemPermissions:\n        - SpaceCreate\n      spacePermissionDescriptions:\n        - Delete deployments (restrictable to Environments, Projects, Tenants)\n        - Deploy releases to target environments (restrictable to Environments, Projects, Tenants)\n        - View deployments (restrictable to Environments, Projects, Tenants)\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/userRole:UserRole [options] octopusdeploy_user_role.\u003cname\u003e \u003cuser-role-id\u003e\n```\n\n ",
            "properties": {
                "canBeDeleted": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this user role.\n"
                },
                "grantedSpacePermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grantedSystemPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spacePermissionDescriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "supportedRestrictions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "systemPermissionDescriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "canBeDeleted",
                "name",
                "spacePermissionDescriptions",
                "systemPermissionDescriptions"
            ],
            "inputProperties": {
                "canBeDeleted": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this user role.\n"
                },
                "grantedSpacePermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grantedSystemPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "spacePermissionDescriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "supportedRestrictions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "systemPermissionDescriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserRole resources.\n",
                "properties": {
                    "canBeDeleted": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this user role.\n"
                    },
                    "grantedSpacePermissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "grantedSystemPermissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "spacePermissionDescriptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "supportedRestrictions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "systemPermissionDescriptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/usernamePasswordAccount:UsernamePasswordAccount": {
            "description": "This resource manages username-password accounts in Octopus Deploy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = new octopusdeploy.UsernamePasswordAccount(\"example\", {\n    password: \"###########\",\n    username: \"[username]\",\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.UsernamePasswordAccount(\"example\",\n    password=\"###########\",\n    username=\"[username]\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Octopusdeploy.UsernamePasswordAccount(\"example\", new()\n    {\n        Password = \"###########\",\n        Username = \"[username]\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.NewUsernamePasswordAccount(ctx, \"example\", \u0026octopusdeploy.UsernamePasswordAccountArgs{\n\t\t\tPassword: pulumi.String(\"###########\"),\n\t\t\tUsername: pulumi.String(\"[username]\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.UsernamePasswordAccount;\nimport com.pulumi.octopusdeploy.UsernamePasswordAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new UsernamePasswordAccount(\"example\", UsernamePasswordAccountArgs.builder()        \n            .password(\"###########\")\n            .username(\"[username]\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: octopusdeploy:UsernamePasswordAccount\n    properties:\n      password: '###########'\n      # get from secure environment/store\n      username: '[username]'\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/usernamePasswordAccount:UsernamePasswordAccount [options] octopusdeploy_username_password_account.\u003cname\u003e \u003caccount-id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this username/password account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "required": [
                "environments",
                "name",
                "spaceId",
                "tenantTags",
                "tenantedDeploymentParticipation",
                "tenants",
                "username"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this username/password account.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of environment IDs associated with this resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password associated with this resource.\n",
                    "secret": true
                },
                "spaceId": {
                    "type": "string",
                    "description": "The space ID associated with this resource.\n"
                },
                "tenantTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant tags associated with this resource.\n"
                },
                "tenantedDeploymentParticipation": {
                    "type": "string",
                    "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tenant IDs associated with this resource.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with this resource.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UsernamePasswordAccount resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this username/password account.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of environment IDs associated with this resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password associated with this resource.\n",
                        "secret": true
                    },
                    "spaceId": {
                        "type": "string",
                        "description": "The space ID associated with this resource.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant tags associated with this resource.\n"
                    },
                    "tenantedDeploymentParticipation": {
                        "type": "string",
                        "description": "The tenanted deployment mode of the resource. Valid account types are `Untenanted`, `TenantedOrUntenanted`, or `Tenanted`.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tenant IDs associated with this resource.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username associated with this resource.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "octopusdeploy:index/variable:Variable": {
            "description": "This resource manages variables in Octopus Deploy.\n\n\n## Import\n\n\n\n```sh\n $ pulumi import octopusdeploy:index/variable:Variable [options] octopusdeploy_variable.\u003cname\u003e \u003cvariable-id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of this variable.\n"
                },
                "encryptedValue": {
                    "type": "string"
                },
                "isEditable": {
                    "type": "boolean",
                    "description": "Indicates whether or not this variable is considered editable.\n"
                },
                "isSensitive": {
                    "type": "boolean",
                    "description": "Indicates whether or not this resource is considered sensitive and should be kept secret.\n"
                },
                "keyFingerprint": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "ownerId": {
                    "type": "string"
                },
                "pgpKey": {
                    "type": "string",
                    "secret": true
                },
                "projectId": {
                    "type": "string",
                    "deprecationMessage": "This attribute is deprecated; please use owner_id instead."
                },
                "prompt": {
                    "$ref": "#/types/octopusdeploy:index/VariablePrompt:VariablePrompt"
                },
                "scope": {
                    "$ref": "#/types/octopusdeploy:index/VariableScope:VariableScope"
                },
                "sensitiveValue": {
                    "type": "string",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "The type of variable represented by this resource. Valid types are `AmazonWebServicesAccount`, `AzureAccount`, `GoogleCloudAccount`, `Certificate`, `Sensitive`, `String`, or `WorkerPool`.\n"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "encryptedValue",
                "keyFingerprint",
                "name",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of this variable.\n"
                },
                "isEditable": {
                    "type": "boolean",
                    "description": "Indicates whether or not this variable is considered editable.\n"
                },
                "isSensitive": {
                    "type": "boolean",
                    "description": "Indicates whether or not this resource is considered sensitive and should be kept secret.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this resource.\n"
                },
                "ownerId": {
                    "type": "string"
                },
                "pgpKey": {
                    "type": "string",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "projectId": {
                    "type": "string",
                    "deprecationMessage": "This attribute is deprecated; please use owner_id instead."
                },
                "prompt": {
                    "$ref": "#/types/octopusdeploy:index/VariablePrompt:VariablePrompt"
                },
                "scope": {
                    "$ref": "#/types/octopusdeploy:index/VariableScope:VariableScope"
                },
                "sensitiveValue": {
                    "type": "string",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "The type of variable represented by this resource. Valid types are `AmazonWebServicesAccount`, `AzureAccount`, `GoogleCloudAccount`, `Certificate`, `Sensitive`, `String`, or `WorkerPool`.\n"
                },
                "value": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Variable resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this variable.\n"
                    },
                    "encryptedValue": {
                        "type": "string"
                    },
                    "isEditable": {
                        "type": "boolean",
                        "description": "Indicates whether or not this variable is considered editable.\n"
                    },
                    "isSensitive": {
                        "type": "boolean",
                        "description": "Indicates whether or not this resource is considered sensitive and should be kept secret.\n"
                    },
                    "keyFingerprint": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource.\n"
                    },
                    "ownerId": {
                        "type": "string"
                    },
                    "pgpKey": {
                        "type": "string",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "deprecationMessage": "This attribute is deprecated; please use owner_id instead."
                    },
                    "prompt": {
                        "$ref": "#/types/octopusdeploy:index/VariablePrompt:VariablePrompt"
                    },
                    "scope": {
                        "$ref": "#/types/octopusdeploy:index/VariableScope:VariableScope"
                    },
                    "sensitiveValue": {
                        "type": "string",
                        "secret": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of variable represented by this resource. Valid types are `AmazonWebServicesAccount`, `AzureAccount`, `GoogleCloudAccount`, `Certificate`, `Sensitive`, `String`, or `WorkerPool`.\n"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "octopusdeploy:index/getAccounts:getAccounts": {
            "description": "Provides information about existing accounts.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getAccounts({\n    accountType: \"UsernamePassword\",\n    ids: [\n        \"Accounts-123\",\n        \"Accounts-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_accounts(account_type=\"UsernamePassword\",\n    ids=[\n        \"Accounts-123\",\n        \"Accounts-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetAccounts.Invoke(new()\n    {\n        AccountType = \"UsernamePassword\",\n        Ids = new[]\n        {\n            \"Accounts-123\",\n            \"Accounts-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetAccounts(ctx, \u0026octopusdeploy.GetAccountsArgs{\n\t\t\tAccountType: pulumi.StringRef(\"UsernamePassword\"),\n\t\t\tIds: []string{\n\t\t\t\t\"Accounts-123\",\n\t\t\t\t\"Accounts-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetAccountsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getAccounts(GetAccountsArgs.builder()\n            .accountType(\"UsernamePassword\")\n            .ids(            \n                \"Accounts-123\",\n                \"Accounts-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getAccounts\n      Arguments:\n        accountType: UsernamePassword\n        ids:\n          - Accounts-123\n          - Accounts-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAccounts.\n",
                "properties": {
                    "accountType": {
                        "type": "string",
                        "description": "A filter to search by a list of account types.  Valid account types are `AmazonWebServicesAccount`, `AmazonWebServicesRoleAccount`, `AzureServicePrincipal`, `AzureSubscription`, `None`, `SshKeyPair`, `Token`, or `UsernamePassword`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAccounts.\n",
                "properties": {
                    "accountType": {
                        "type": "string",
                        "description": "A filter to search by a list of account types.  Valid account types are `AmazonWebServicesAccount`, `AmazonWebServicesRoleAccount`, `AzureServicePrincipal`, `AzureSubscription`, `None`, `SshKeyPair`, `Token`, or `UsernamePassword`.\n"
                    },
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getAccountsAccount:getAccountsAccount"
                        },
                        "description": "A list of accounts that match the filter(s).\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accounts",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getAzureCloudServiceDeploymentTargets:getAzureCloudServiceDeploymentTargets": {
            "description": "Provides information about existing Azure cloud service deployment targets.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getAzureCloudServiceDeploymentTargets({\n    healthStatuses: [\n        \"Healthy\",\n        \"Unavailable\",\n    ],\n    ids: [\n        \"Machines-123\",\n        \"Machines-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_azure_cloud_service_deployment_targets(health_statuses=[\n        \"Healthy\",\n        \"Unavailable\",\n    ],\n    ids=[\n        \"Machines-123\",\n        \"Machines-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetAzureCloudServiceDeploymentTargets.Invoke(new()\n    {\n        HealthStatuses = new[]\n        {\n            \"Healthy\",\n            \"Unavailable\",\n        },\n        Ids = new[]\n        {\n            \"Machines-123\",\n            \"Machines-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetAzureCloudServiceDeploymentTargets(ctx, \u0026octopusdeploy.GetAzureCloudServiceDeploymentTargetsArgs{\n\t\t\tHealthStatuses: []string{\n\t\t\t\t\"Healthy\",\n\t\t\t\t\"Unavailable\",\n\t\t\t},\n\t\t\tIds: []string{\n\t\t\t\t\"Machines-123\",\n\t\t\t\t\"Machines-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetAzureCloudServiceDeploymentTargetsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getAzureCloudServiceDeploymentTargets(GetAzureCloudServiceDeploymentTargetsArgs.builder()\n            .healthStatuses(            \n                \"Healthy\",\n                \"Unavailable\")\n            .ids(            \n                \"Machines-123\",\n                \"Machines-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getAzureCloudServiceDeploymentTargets\n      Arguments:\n        healthStatuses:\n          - Healthy\n          - Unavailable\n        ids:\n          - Machines-123\n          - Machines-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAzureCloudServiceDeploymentTargets.\n",
                "properties": {
                    "azureCloudServiceDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTarget:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTarget"
                        },
                        "description": "A list of Azure cloud service deployment targets that match the filter(s).\n"
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAzureCloudServiceDeploymentTargets.\n",
                "properties": {
                    "azureCloudServiceDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTarget:getAzureCloudServiceDeploymentTargetsAzureCloudServiceDeploymentTarget"
                        },
                        "description": "A list of Azure cloud service deployment targets that match the filter(s).\n"
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "azureCloudServiceDeploymentTargets",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargets:getAzureServiceFabricClusterDeploymentTargets": {
            "description": "Provides information about existing Azure service fabric cluster deployment targets.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getAzureServiceFabricClusterDeploymentTargets({\n    healthStatuses: [\n        \"Healthy\",\n        \"Unavailable\",\n    ],\n    ids: [\n        \"Machines-123\",\n        \"Machines-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_azure_service_fabric_cluster_deployment_targets(health_statuses=[\n        \"Healthy\",\n        \"Unavailable\",\n    ],\n    ids=[\n        \"Machines-123\",\n        \"Machines-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetAzureServiceFabricClusterDeploymentTargets.Invoke(new()\n    {\n        HealthStatuses = new[]\n        {\n            \"Healthy\",\n            \"Unavailable\",\n        },\n        Ids = new[]\n        {\n            \"Machines-123\",\n            \"Machines-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetAzureServiceFabricClusterDeploymentTargets(ctx, \u0026octopusdeploy.GetAzureServiceFabricClusterDeploymentTargetsArgs{\n\t\t\tHealthStatuses: []string{\n\t\t\t\t\"Healthy\",\n\t\t\t\t\"Unavailable\",\n\t\t\t},\n\t\t\tIds: []string{\n\t\t\t\t\"Machines-123\",\n\t\t\t\t\"Machines-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetAzureServiceFabricClusterDeploymentTargetsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getAzureServiceFabricClusterDeploymentTargets(GetAzureServiceFabricClusterDeploymentTargetsArgs.builder()\n            .healthStatuses(            \n                \"Healthy\",\n                \"Unavailable\")\n            .ids(            \n                \"Machines-123\",\n                \"Machines-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getAzureServiceFabricClusterDeploymentTargets\n      Arguments:\n        healthStatuses:\n          - Healthy\n          - Unavailable\n        ids:\n          - Machines-123\n          - Machines-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAzureServiceFabricClusterDeploymentTargets.\n",
                "properties": {
                    "azureServiceFabricClusterDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTarget:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTarget"
                        },
                        "description": "A list of Azure service fabric cluster deployment targets that match the filter(s).\n"
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAzureServiceFabricClusterDeploymentTargets.\n",
                "properties": {
                    "azureServiceFabricClusterDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTarget:getAzureServiceFabricClusterDeploymentTargetsAzureServiceFabricClusterDeploymentTarget"
                        },
                        "description": "A list of Azure service fabric cluster deployment targets that match the filter(s).\n"
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "azureServiceFabricClusterDeploymentTargets",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getAzureWebAppDeploymentTargets:getAzureWebAppDeploymentTargets": {
            "description": "Provides information about existing Azure web app deployment targets.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getAzureWebAppDeploymentTargets({\n    healthStatuses: [\n        \"Healthy\",\n        \"Unavailable\",\n    ],\n    ids: [\n        \"Machines-123\",\n        \"Machines-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_azure_web_app_deployment_targets(health_statuses=[\n        \"Healthy\",\n        \"Unavailable\",\n    ],\n    ids=[\n        \"Machines-123\",\n        \"Machines-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetAzureWebAppDeploymentTargets.Invoke(new()\n    {\n        HealthStatuses = new[]\n        {\n            \"Healthy\",\n            \"Unavailable\",\n        },\n        Ids = new[]\n        {\n            \"Machines-123\",\n            \"Machines-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetAzureWebAppDeploymentTargets(ctx, \u0026octopusdeploy.GetAzureWebAppDeploymentTargetsArgs{\n\t\t\tHealthStatuses: []string{\n\t\t\t\t\"Healthy\",\n\t\t\t\t\"Unavailable\",\n\t\t\t},\n\t\t\tIds: []string{\n\t\t\t\t\"Machines-123\",\n\t\t\t\t\"Machines-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetAzureWebAppDeploymentTargetsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getAzureWebAppDeploymentTargets(GetAzureWebAppDeploymentTargetsArgs.builder()\n            .healthStatuses(            \n                \"Healthy\",\n                \"Unavailable\")\n            .ids(            \n                \"Machines-123\",\n                \"Machines-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getAzureWebAppDeploymentTargets\n      Arguments:\n        healthStatuses:\n          - Healthy\n          - Unavailable\n        ids:\n          - Machines-123\n          - Machines-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAzureWebAppDeploymentTargets.\n",
                "properties": {
                    "azureWebAppDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTarget:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTarget"
                        },
                        "description": "A list of Azure web app deployment targets that match the filter(s).\n"
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAzureWebAppDeploymentTargets.\n",
                "properties": {
                    "azureWebAppDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTarget:getAzureWebAppDeploymentTargetsAzureWebAppDeploymentTarget"
                        },
                        "description": "A list of Azure web app deployment targets that match the filter(s).\n"
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "azureWebAppDeploymentTargets",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getCertificates:getCertificates": {
            "description": "Provides information about existing certificates.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getCertificates({\n    archived: \"false\",\n    ids: [\n        \"Certificates-123\",\n        \"Certificates-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_certificates(archived=\"false\",\n    ids=[\n        \"Certificates-123\",\n        \"Certificates-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetCertificates.Invoke(new()\n    {\n        Archived = \"false\",\n        Ids = new[]\n        {\n            \"Certificates-123\",\n            \"Certificates-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetCertificates(ctx, \u0026octopusdeploy.GetCertificatesArgs{\n\t\t\tArchived: pulumi.StringRef(\"false\"),\n\t\t\tIds: []string{\n\t\t\t\t\"Certificates-123\",\n\t\t\t\t\"Certificates-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetCertificatesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getCertificates(GetCertificatesArgs.builder()\n            .archived(false)\n            .ids(            \n                \"Certificates-123\",\n                \"Certificates-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getCertificates\n      Arguments:\n        archived: false\n        ids:\n          - Certificates-123\n          - Certificates-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCertificates.\n",
                "properties": {
                    "archived": {
                        "type": "string",
                        "description": "A filter to search for resources that have been archived.\n"
                    },
                    "certificates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getCertificatesCertificate:getCertificatesCertificate"
                        },
                        "description": "A list of certificates that match the filter(s).\n"
                    },
                    "firstResult": {
                        "type": "string",
                        "description": "A filter to define the first result.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "orderBy": {
                        "type": "string",
                        "description": "A filter used to order the search results.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "search": {
                        "type": "string",
                        "description": "A filter of terms used the search operation.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "A filter to search by a tenant ID.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCertificates.\n",
                "properties": {
                    "archived": {
                        "type": "string",
                        "description": "A filter to search for resources that have been archived.\n"
                    },
                    "certificates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getCertificatesCertificate:getCertificatesCertificate"
                        },
                        "description": "A list of certificates that match the filter(s).\n"
                    },
                    "firstResult": {
                        "type": "string",
                        "description": "A filter to define the first result.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "orderBy": {
                        "type": "string",
                        "description": "A filter used to order the search results.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "search": {
                        "type": "string",
                        "description": "A filter of terms used the search operation.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "A filter to search by a tenant ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "certificates",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getChannels:getChannels": {
            "description": "Provides information about existing channels.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getChannels({\n    ids: [\n        \"Channels-123\",\n        \"Channels-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_channels(ids=[\n        \"Channels-123\",\n        \"Channels-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetChannels.Invoke(new()\n    {\n        Ids = new[]\n        {\n            \"Channels-123\",\n            \"Channels-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetChannels(ctx, \u0026octopusdeploy.GetChannelsArgs{\n\t\t\tIds: []string{\n\t\t\t\t\"Channels-123\",\n\t\t\t\t\"Channels-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetChannelsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getChannels(GetChannelsArgs.builder()\n            .ids(            \n                \"Channels-123\",\n                \"Channels-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getChannels\n      Arguments:\n        ids:\n          - Channels-123\n          - Channels-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getChannels.\n",
                "properties": {
                    "channels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getChannelsChannel:getChannelsChannel"
                        },
                        "description": "A channel that matches the specified filter(s).\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getChannels.\n",
                "properties": {
                    "channels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getChannelsChannel:getChannelsChannel"
                        },
                        "description": "A channel that matches the specified filter(s).\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "channels",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getCloudRegionDeploymentTargets:getCloudRegionDeploymentTargets": {
            "description": "Provides information about existing cloud region deployment targets.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getCloudRegionDeploymentTargets({\n    environments: [\n        \"Environments-123\",\n        \"Environments-321\",\n    ],\n    ids: [\"Machines-123\"],\n    name: \"Azure North America\",\n    partialName: \"Azure Nor\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_cloud_region_deployment_targets(environments=[\n        \"Environments-123\",\n        \"Environments-321\",\n    ],\n    ids=[\"Machines-123\"],\n    name=\"Azure North America\",\n    partial_name=\"Azure Nor\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetCloudRegionDeploymentTargets.Invoke(new()\n    {\n        Environments = new[]\n        {\n            \"Environments-123\",\n            \"Environments-321\",\n        },\n        Ids = new[]\n        {\n            \"Machines-123\",\n        },\n        Name = \"Azure North America\",\n        PartialName = \"Azure Nor\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetCloudRegionDeploymentTargets(ctx, \u0026octopusdeploy.GetCloudRegionDeploymentTargetsArgs{\n\t\t\tEnvironments: []string{\n\t\t\t\t\"Environments-123\",\n\t\t\t\t\"Environments-321\",\n\t\t\t},\n\t\t\tIds: []string{\n\t\t\t\t\"Machines-123\",\n\t\t\t},\n\t\t\tName:        pulumi.StringRef(\"Azure North America\"),\n\t\t\tPartialName: pulumi.StringRef(\"Azure Nor\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetCloudRegionDeploymentTargetsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getCloudRegionDeploymentTargets(GetCloudRegionDeploymentTargetsArgs.builder()\n            .environments(            \n                \"Environments-123\",\n                \"Environments-321\")\n            .ids(\"Machines-123\")\n            .name(\"Azure North America\")\n            .partialName(\"Azure Nor\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getCloudRegionDeploymentTargets\n      Arguments:\n        environments:\n          - Environments-123\n          - Environments-321\n        ids:\n          - Machines-123\n        name: Azure North America\n        partialName: Azure Nor\n        skip: 5\n        take: 100\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudRegionDeploymentTargets.\n",
                "properties": {
                    "cloudRegionDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getCloudRegionDeploymentTargetsCloudRegionDeploymentTarget:getCloudRegionDeploymentTargetsCloudRegionDeploymentTarget"
                        },
                        "description": "A list of cloud region deployment targets that match the filter(s).\n"
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCloudRegionDeploymentTargets.\n",
                "properties": {
                    "cloudRegionDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getCloudRegionDeploymentTargetsCloudRegionDeploymentTarget:getCloudRegionDeploymentTargetsCloudRegionDeploymentTarget"
                        },
                        "description": "A list of cloud region deployment targets that match the filter(s).\n"
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "cloudRegionDeploymentTargets",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getDeploymentTargets:getDeploymentTargets": {
            "description": "Provides information about existing deployment targets.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDeploymentTargets.\n",
                "properties": {
                    "communicationStyles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of communication styles. Valid communication styles are `AzureCloudService`, `AzureServiceFabricCluster`, `AzureWebApp`, `Ftp`, `Kubernetes`, `None`, `OfflineDrop`, `Ssh`, `TentacleActive`, or `TentaclePassive`.\n"
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "deploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getDeploymentTargetsDeploymentTarget:getDeploymentTargetsDeploymentTarget"
                        },
                        "description": "A list of deployment targets that match the filter(s).\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDeploymentTargets.\n",
                "properties": {
                    "communicationStyles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of communication styles. Valid communication styles are `AzureCloudService`, `AzureServiceFabricCluster`, `AzureWebApp`, `Ftp`, `Kubernetes`, `None`, `OfflineDrop`, `Ssh`, `TentacleActive`, or `TentaclePassive`.\n"
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "deploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getDeploymentTargetsDeploymentTarget:getDeploymentTargetsDeploymentTarget"
                        },
                        "description": "A list of deployment targets that match the filter(s).\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "deploymentTargets",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getEnvironments:getEnvironments": {
            "description": "Provides information about existing environments.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getEnvironments({\n    ids: [\n        \"Environments-123\",\n        \"Environments-321\",\n    ],\n    name: \"Production\",\n    partialName: \"Produc\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_environments(ids=[\n        \"Environments-123\",\n        \"Environments-321\",\n    ],\n    name=\"Production\",\n    partial_name=\"Produc\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetEnvironments.Invoke(new()\n    {\n        Ids = new[]\n        {\n            \"Environments-123\",\n            \"Environments-321\",\n        },\n        Name = \"Production\",\n        PartialName = \"Produc\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetEnvironments(ctx, \u0026octopusdeploy.GetEnvironmentsArgs{\n\t\t\tIds: []string{\n\t\t\t\t\"Environments-123\",\n\t\t\t\t\"Environments-321\",\n\t\t\t},\n\t\t\tName:        pulumi.StringRef(\"Production\"),\n\t\t\tPartialName: pulumi.StringRef(\"Produc\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetEnvironmentsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getEnvironments(GetEnvironmentsArgs.builder()\n            .ids(            \n                \"Environments-123\",\n                \"Environments-321\")\n            .name(\"Production\")\n            .partialName(\"Produc\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getEnvironments\n      Arguments:\n        ids:\n          - Environments-123\n          - Environments-321\n        name: Production\n        partialName: Produc\n        skip: 5\n        take: 100\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getEnvironments.\n",
                "properties": {
                    "environments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getEnvironmentsEnvironment:getEnvironmentsEnvironment"
                        },
                        "description": "A list of environments that match the filter(s).\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEnvironments.\n",
                "properties": {
                    "environments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getEnvironmentsEnvironment:getEnvironmentsEnvironment"
                        },
                        "description": "A list of environments that match the filter(s).\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "environments",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getFeeds:getFeeds": {
            "description": "Provides information about existing feeds.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getFeeds({\n    feedType: \"NuGet\",\n    ids: [\n        \"Feeds-123\",\n        \"Feeds-321\",\n    ],\n    partialName: \"Develop\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_feeds(feed_type=\"NuGet\",\n    ids=[\n        \"Feeds-123\",\n        \"Feeds-321\",\n    ],\n    partial_name=\"Develop\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetFeeds.Invoke(new()\n    {\n        FeedType = \"NuGet\",\n        Ids = new[]\n        {\n            \"Feeds-123\",\n            \"Feeds-321\",\n        },\n        PartialName = \"Develop\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetFeeds(ctx, \u0026octopusdeploy.GetFeedsArgs{\n\t\t\tFeedType: pulumi.StringRef(\"NuGet\"),\n\t\t\tIds: []string{\n\t\t\t\t\"Feeds-123\",\n\t\t\t\t\"Feeds-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Develop\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetFeedsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getFeeds(GetFeedsArgs.builder()\n            .feedType(\"NuGet\")\n            .ids(            \n                \"Feeds-123\",\n                \"Feeds-321\")\n            .partialName(\"Develop\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getFeeds\n      Arguments:\n        feedType: NuGet\n        ids:\n          - Feeds-123\n          - Feeds-321\n        partialName: Develop\n        skip: 5\n        take: 100\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFeeds.\n",
                "properties": {
                    "feedType": {
                        "type": "string",
                        "description": "A filter to search by feed type. Valid feed types are `AwsElasticContainerRegistry`, `BuiltIn`, `Docker`, `GitHub`, `Helm`, `Maven`, `NuGet`, or `OctopusProject`.\n"
                    },
                    "feeds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getFeedsFeed:getFeedsFeed"
                        },
                        "description": "A list of feeds that match the filter(s).\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFeeds.\n",
                "properties": {
                    "feedType": {
                        "type": "string",
                        "description": "A filter to search by feed type. Valid feed types are `AwsElasticContainerRegistry`, `BuiltIn`, `Docker`, `GitHub`, `Helm`, `Maven`, `NuGet`, or `OctopusProject`.\n"
                    },
                    "feeds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getFeedsFeed:getFeedsFeed"
                        },
                        "description": "A list of feeds that match the filter(s).\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "feeds",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getGitCredentials:getGitCredentials": {
            "description": "Provides information about existing GitCredentials.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getGitCredentials.\n",
                "properties": {
                    "gitCredentials": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getGitCredentialsGitCredential:getGitCredentialsGitCredential"
                        },
                        "description": "A list of Git Credentials that match the filter(s).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGitCredentials.\n",
                "properties": {
                    "gitCredentials": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getGitCredentialsGitCredential:getGitCredentialsGitCredential"
                        },
                        "description": "A list of Git Credentials that match the filter(s).\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "gitCredentials",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getKubernetesClusterDeploymentTargets:getKubernetesClusterDeploymentTargets": {
            "description": "Provides information about existing Kubernetes cluster deployment targets.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKubernetesClusterDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "kubernetesClusterDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTarget:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTarget"
                        },
                        "description": "A list of Kubernetes cluster deployment targets that match the filter(s).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getKubernetesClusterDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "kubernetesClusterDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTarget:getKubernetesClusterDeploymentTargetsKubernetesClusterDeploymentTarget"
                        },
                        "description": "A list of Kubernetes cluster deployment targets that match the filter(s).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "kubernetesClusterDeploymentTargets"
                ]
            }
        },
        "octopusdeploy:index/getLibraryVariableSets:getLibraryVariableSets": {
            "description": "Provides information about existing library variable sets.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getLibraryVariableSets.\n",
                "properties": {
                    "contentType": {
                        "type": "string",
                        "description": "A filter to search by content type.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "libraryVariableSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getLibraryVariableSetsLibraryVariableSet:getLibraryVariableSetsLibraryVariableSet"
                        },
                        "description": "A list of library variable sets that match the filter(s).\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLibraryVariableSets.\n",
                "properties": {
                    "contentType": {
                        "type": "string",
                        "description": "A filter to search by content type.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "libraryVariableSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getLibraryVariableSetsLibraryVariableSet:getLibraryVariableSetsLibraryVariableSet"
                        },
                        "description": "A list of library variable sets that match the filter(s).\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "libraryVariableSets"
                ]
            }
        },
        "octopusdeploy:index/getLifecycles:getLifecycles": {
            "description": "Provides information about existing lifecycles.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getLifecycles({\n    ids: [\n        \"Lifecycles-123\",\n        \"Lifecycles-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_lifecycles(ids=[\n        \"Lifecycles-123\",\n        \"Lifecycles-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetLifecycles.Invoke(new()\n    {\n        Ids = new[]\n        {\n            \"Lifecycles-123\",\n            \"Lifecycles-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetLifecycles(ctx, \u0026octopusdeploy.GetLifecyclesArgs{\n\t\t\tIds: []string{\n\t\t\t\t\"Lifecycles-123\",\n\t\t\t\t\"Lifecycles-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetLifecyclesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getLifecycles(GetLifecyclesArgs.builder()\n            .ids(            \n                \"Lifecycles-123\",\n                \"Lifecycles-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getLifecycles\n      Arguments:\n        ids:\n          - Lifecycles-123\n          - Lifecycles-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getLifecycles.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "lifecycles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getLifecyclesLifecycle:getLifecyclesLifecycle"
                        },
                        "description": "A list of lifecycles that match the filter(s).\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLifecycles.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "lifecycles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getLifecyclesLifecycle:getLifecyclesLifecycle"
                        },
                        "description": "A list of lifecycles that match the filter(s).\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "lifecycles",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getListeningTentacleDeploymentTargets:getListeningTentacleDeploymentTargets": {
            "description": "Provides information about existing listening tentacle deployment targets.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst listeningTentacleDeploymentTargets = octopusdeploy.getListeningTentacleDeploymentTargets({});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nlistening_tentacle_deployment_targets = octopusdeploy.get_listening_tentacle_deployment_targets()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var listeningTentacleDeploymentTargets = Octopusdeploy.GetListeningTentacleDeploymentTargets.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetListeningTentacleDeploymentTargets(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetListeningTentacleDeploymentTargetsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var listeningTentacleDeploymentTargets = OctopusdeployFunctions.getListeningTentacleDeploymentTargets();\n\n    }\n}\n```\n```yaml\nvariables:\n  listeningTentacleDeploymentTargets:\n    fn::invoke:\n      Function: octopusdeploy:getListeningTentacleDeploymentTargets\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getListeningTentacleDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "listeningTentacleDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getListeningTentacleDeploymentTargetsListeningTentacleDeploymentTarget:getListeningTentacleDeploymentTargetsListeningTentacleDeploymentTarget"
                        },
                        "description": "A list of listening tentacle deployment targets that match the filter(s).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getListeningTentacleDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "listeningTentacleDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getListeningTentacleDeploymentTargetsListeningTentacleDeploymentTarget:getListeningTentacleDeploymentTargetsListeningTentacleDeploymentTarget"
                        },
                        "description": "A list of listening tentacle deployment targets that match the filter(s).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "listeningTentacleDeploymentTargets"
                ]
            }
        },
        "octopusdeploy:index/getMachine:getMachine": {
            "inputs": {
                "description": "A collection of arguments for invoking getMachine.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMachine.\n",
                "properties": {
                    "endpointCommunicationstyle": {
                        "type": "string"
                    },
                    "endpointId": {
                        "type": "string"
                    },
                    "endpointProxyid": {
                        "type": "string"
                    },
                    "endpointTentacleversiondetailsUpgradelocked": {
                        "type": "string"
                    },
                    "endpointTentacleversiondetailsUpgraderequired": {
                        "type": "string"
                    },
                    "endpointTentacleversiondetailsUpgradesuggested": {
                        "type": "string"
                    },
                    "endpointTentacleversiondetailsVersion": {
                        "type": "string"
                    },
                    "endpointThumbprint": {
                        "type": "string"
                    },
                    "endpointUri": {
                        "type": "string"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "haslatestcalamari": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isdisabled": {
                        "type": "boolean"
                    },
                    "isinprocess": {
                        "type": "boolean"
                    },
                    "machinepolicy": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "statussummary": {
                        "type": "string"
                    },
                    "tenanteddeploymentparticipation": {
                        "type": "string"
                    },
                    "tenantids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tenanttags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "endpointCommunicationstyle",
                    "endpointId",
                    "endpointProxyid",
                    "endpointTentacleversiondetailsUpgradelocked",
                    "endpointTentacleversiondetailsUpgraderequired",
                    "endpointTentacleversiondetailsUpgradesuggested",
                    "endpointTentacleversiondetailsVersion",
                    "endpointThumbprint",
                    "endpointUri",
                    "environments",
                    "haslatestcalamari",
                    "isdisabled",
                    "isinprocess",
                    "machinepolicy",
                    "name",
                    "roles",
                    "status",
                    "statussummary",
                    "tenanteddeploymentparticipation",
                    "tenantids",
                    "tenanttags",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getMachinePolicies:getMachinePolicies": {
            "description": "Provides information about existing machine policies.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getMachinePolicies.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "machinePolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getMachinePoliciesMachinePolicy:getMachinePoliciesMachinePolicy"
                        },
                        "description": "A list of machine policies that match the filter(s).\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMachinePolicies.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "machinePolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getMachinePoliciesMachinePolicy:getMachinePoliciesMachinePolicy"
                        },
                        "description": "A list of machine policies that match the filter(s).\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "machinePolicies",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getOfflinePackageDropDeploymentTargets:getOfflinePackageDropDeploymentTargets": {
            "description": "Provides information about existing offline package drop deployment targets.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOfflinePackageDropDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "offlinePackageDropDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTarget:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTarget"
                        },
                        "description": "A list of offline package drop deployment targets that match the filter(s).\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getOfflinePackageDropDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "offlinePackageDropDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTarget:getOfflinePackageDropDeploymentTargetsOfflinePackageDropDeploymentTarget"
                        },
                        "description": "A list of offline package drop deployment targets that match the filter(s).\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "offlinePackageDropDeploymentTargets"
                ]
            }
        },
        "octopusdeploy:index/getPollingTentacleDeploymentTargets:getPollingTentacleDeploymentTargets": {
            "description": "Provides information about existing polling tentacle deployment targets.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPollingTentacleDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "pollingTentacleDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTarget:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTarget"
                        },
                        "description": "A list of polling tentacle deployment targets that match the filter(s).\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPollingTentacleDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "pollingTentacleDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTarget:getPollingTentacleDeploymentTargetsPollingTentacleDeploymentTarget"
                        },
                        "description": "A list of polling tentacle deployment targets that match the filter(s).\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "pollingTentacleDeploymentTargets"
                ]
            }
        },
        "octopusdeploy:index/getProjectGroups:getProjectGroups": {
            "description": "Provides information about existing project groups.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getProjectGroups({\n    ids: [\n        \"ProjectGroups-123\",\n        \"ProjectGroups-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_project_groups(ids=[\n        \"ProjectGroups-123\",\n        \"ProjectGroups-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetProjectGroups.Invoke(new()\n    {\n        Ids = new[]\n        {\n            \"ProjectGroups-123\",\n            \"ProjectGroups-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetProjectGroups(ctx, \u0026octopusdeploy.GetProjectGroupsArgs{\n\t\t\tIds: []string{\n\t\t\t\t\"ProjectGroups-123\",\n\t\t\t\t\"ProjectGroups-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetProjectGroupsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getProjectGroups(GetProjectGroupsArgs.builder()\n            .ids(            \n                \"ProjectGroups-123\",\n                \"ProjectGroups-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getProjectGroups\n      Arguments:\n        ids:\n          - ProjectGroups-123\n          - ProjectGroups-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getProjectGroups.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "projectGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getProjectGroupsProjectGroup:getProjectGroupsProjectGroup"
                        },
                        "description": "A list of project groups that match the filter(s).\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getProjectGroups.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "projectGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getProjectGroupsProjectGroup:getProjectGroupsProjectGroup"
                        },
                        "description": "A list of project groups that match the filter(s).\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "projectGroups"
                ]
            }
        },
        "octopusdeploy:index/getProjects:getProjects": {
            "description": "Provides information about existing projects.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getProjects({\n    clonedFromProjectId: \"Projects-456\",\n    ids: [\n        \"Projects-123\",\n        \"Projects-321\",\n    ],\n    isClone: true,\n    name: \"Default\",\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_projects(cloned_from_project_id=\"Projects-456\",\n    ids=[\n        \"Projects-123\",\n        \"Projects-321\",\n    ],\n    is_clone=True,\n    name=\"Default\",\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetProjects.Invoke(new()\n    {\n        ClonedFromProjectId = \"Projects-456\",\n        Ids = new[]\n        {\n            \"Projects-123\",\n            \"Projects-321\",\n        },\n        IsClone = true,\n        Name = \"Default\",\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetProjects(ctx, \u0026octopusdeploy.GetProjectsArgs{\n\t\t\tClonedFromProjectId: pulumi.StringRef(\"Projects-456\"),\n\t\t\tIds: []string{\n\t\t\t\t\"Projects-123\",\n\t\t\t\t\"Projects-321\",\n\t\t\t},\n\t\t\tIsClone:     pulumi.BoolRef(true),\n\t\t\tName:        pulumi.StringRef(\"Default\"),\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetProjectsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getProjects(GetProjectsArgs.builder()\n            .clonedFromProjectId(\"Projects-456\")\n            .ids(            \n                \"Projects-123\",\n                \"Projects-321\")\n            .isClone(true)\n            .name(\"Default\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getProjects\n      Arguments:\n        clonedFromProjectId: Projects-456\n        ids:\n          - Projects-123\n          - Projects-321\n        isClone: true\n        name: Default\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getProjects.\n",
                "properties": {
                    "clonedFromProjectId": {
                        "type": "string",
                        "description": "A filter to search for cloned resources by a project ID.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isClone": {
                        "type": "boolean",
                        "description": "A filter to search for cloned resources.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getProjectsProject:getProjectsProject"
                        },
                        "description": "A list of projects that match the filter(s).\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getProjects.\n",
                "properties": {
                    "clonedFromProjectId": {
                        "type": "string",
                        "description": "A filter to search for cloned resources by a project ID.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isClone": {
                        "type": "boolean",
                        "description": "A filter to search for cloned resources.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getProjectsProject:getProjectsProject"
                        },
                        "description": "A list of projects that match the filter(s).\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "projects"
                ]
            }
        },
        "octopusdeploy:index/getScriptModules:getScriptModules": {
            "description": "Provides information about existing script modules.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getScriptModules({\n    ids: [\n        \"LibraryVariableSets-123\",\n        \"LibraryVariableSets-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_script_modules(ids=[\n        \"LibraryVariableSets-123\",\n        \"LibraryVariableSets-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetScriptModules.Invoke(new()\n    {\n        Ids = new[]\n        {\n            \"LibraryVariableSets-123\",\n            \"LibraryVariableSets-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetScriptModules(ctx, \u0026octopusdeploy.GetScriptModulesArgs{\n\t\t\tIds: []string{\n\t\t\t\t\"LibraryVariableSets-123\",\n\t\t\t\t\"LibraryVariableSets-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetScriptModulesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getScriptModules(GetScriptModulesArgs.builder()\n            .ids(            \n                \"LibraryVariableSets-123\",\n                \"LibraryVariableSets-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getScriptModules\n      Arguments:\n        ids:\n          - LibraryVariableSets-123\n          - LibraryVariableSets-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getScriptModules.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "scriptModules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getScriptModulesScriptModule:getScriptModulesScriptModule"
                        },
                        "description": "A list of script modules that match the filter(s).\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getScriptModules.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "scriptModules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getScriptModulesScriptModule:getScriptModulesScriptModule"
                        },
                        "description": "A list of script modules that match the filter(s).\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "scriptModules"
                ]
            }
        },
        "octopusdeploy:index/getSpace:getSpace": {
            "description": "Provides information about an existing space.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSpace.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of this resource, no more than 20 characters long\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSpace.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of this space.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The unique ID for this resource.\n"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Specifies if this space is the default space in Octopus.\n"
                    },
                    "isTaskQueueStopped": {
                        "type": "boolean",
                        "description": "Specifies the status of the task queue for this space.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this resource, no more than 20 characters long\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The unique slug of this space.\n"
                    },
                    "spaceManagersTeamMembers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of user IDs designated to be managers of this space.\n"
                    },
                    "spaceManagersTeams": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of team IDs designated to be managers of this space.\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "id",
                    "isDefault",
                    "isTaskQueueStopped",
                    "name",
                    "slug",
                    "spaceManagersTeamMembers",
                    "spaceManagersTeams"
                ]
            }
        },
        "octopusdeploy:index/getSpaces:getSpaces": {
            "description": "Provides information about existing spaces.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst spaces = octopusdeploy.getSpaces({\n    ids: [\n        \"Spaces-123\",\n        \"Spaces-321\",\n    ],\n    partialName: \"Defau\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nspaces = octopusdeploy.get_spaces(ids=[\n        \"Spaces-123\",\n        \"Spaces-321\",\n    ],\n    partial_name=\"Defau\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var spaces = Octopusdeploy.GetSpaces.Invoke(new()\n    {\n        Ids = new[]\n        {\n            \"Spaces-123\",\n            \"Spaces-321\",\n        },\n        PartialName = \"Defau\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetSpaces(ctx, \u0026octopusdeploy.GetSpacesArgs{\n\t\t\tIds: []string{\n\t\t\t\t\"Spaces-123\",\n\t\t\t\t\"Spaces-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Defau\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetSpacesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var spaces = OctopusdeployFunctions.getSpaces(GetSpacesArgs.builder()\n            .ids(            \n                \"Spaces-123\",\n                \"Spaces-321\")\n            .partialName(\"Defau\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  spaces:\n    fn::invoke:\n      Function: octopusdeploy:getSpaces\n      Arguments:\n        ids:\n          - Spaces-123\n          - Spaces-321\n        partialName: Defau\n        skip: 5\n        take: 100\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSpaces.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getSpacesSpace:getSpacesSpace"
                        },
                        "description": "A list of spaces that match the filter(s).\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSpaces.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getSpacesSpace:getSpacesSpace"
                        },
                        "description": "A list of spaces that match the filter(s).\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "spaces"
                ]
            }
        },
        "octopusdeploy:index/getSshConnectionDeploymentTargets:getSshConnectionDeploymentTargets": {
            "description": "Provides information about existing SSH connection deployment targets.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSshConnectionDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "sshConnectionDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTarget:getSshConnectionDeploymentTargetsSshConnectionDeploymentTarget"
                        },
                        "description": "A list of SSH connection deployment targets that match the filter(s).\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSshConnectionDeploymentTargets.\n",
                "properties": {
                    "deploymentId": {
                        "type": "string",
                        "description": "A filter to search by deployment ID.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of environment IDs.\n"
                    },
                    "healthStatuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of health statuses of resources. Valid health statuses are `HasWarnings`, `Healthy`, `Unavailable`, `Unhealthy`, or `Unknown`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "A filter to search by the disabled status of a resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of role IDs.\n"
                    },
                    "shellNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of shell names to match in the query and/or search\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "sshConnectionDeploymentTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getSshConnectionDeploymentTargetsSshConnectionDeploymentTarget:getSshConnectionDeploymentTargetsSshConnectionDeploymentTarget"
                        },
                        "description": "A list of SSH connection deployment targets that match the filter(s).\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenantTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant tags.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tenant IDs.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The thumbprint of the deployment target to match in the query and/or search\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "sshConnectionDeploymentTargets"
                ]
            }
        },
        "octopusdeploy:index/getTagSets:getTagSets": {
            "description": "Provides information about existing tag sets.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTagSets.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "tagSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getTagSetsTagSet:getTagSetsTagSet"
                        },
                        "description": "A list of tag sets that match the filter(s).\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTagSets.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "tagSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getTagSetsTagSet:getTagSetsTagSet"
                        },
                        "description": "A list of tag sets that match the filter(s).\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    }
                },
                "type": "object",
                "required": [
                    "tagSets",
                    "id"
                ]
            }
        },
        "octopusdeploy:index/getTeams:getTeams": {
            "description": "Provides information about existing users.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTeams.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "includeSystem": {
                        "type": "boolean",
                        "description": "A filter to include system teams.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaces": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of space IDs.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "teams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getTeamsTeam:getTeamsTeam"
                        },
                        "description": "A list of teams that match the filter(s).\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTeams.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "includeSystem": {
                        "type": "boolean",
                        "description": "A filter to include system teams.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "spaces": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of space IDs.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "teams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getTeamsTeam:getTeamsTeam"
                        },
                        "description": "A list of teams that match the filter(s).\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "teams"
                ]
            }
        },
        "octopusdeploy:index/getTenants:getTenants": {
            "description": "Provides information about existing tenants.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTenants.\n",
                "properties": {
                    "clonedFromTenantId": {
                        "type": "string",
                        "description": "A filter to search for a cloned tenant by its ID.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isClone": {
                        "type": "boolean",
                        "description": "A filter to search for cloned resources.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "A filter to search by a project ID.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tags.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getTenantsTenant:getTenantsTenant"
                        },
                        "description": "A list of tenants that match the filter(s).\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTenants.\n",
                "properties": {
                    "clonedFromTenantId": {
                        "type": "string",
                        "description": "A filter to search for a cloned tenant by its ID.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "isClone": {
                        "type": "boolean",
                        "description": "A filter to search for cloned resources.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "A filter to search by a project ID.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of tags.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getTenantsTenant:getTenantsTenant"
                        },
                        "description": "A list of tenants that match the filter(s).\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "tenants"
                ]
            }
        },
        "octopusdeploy:index/getUserRoles:getUserRoles": {
            "description": "Provides information about existing user roles.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getUserRoles({\n    ids: [\n        \"UserRoles-123\",\n        \"UserRoles-321\",\n    ],\n    partialName: \"Administra\",\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_user_roles(ids=[\n        \"UserRoles-123\",\n        \"UserRoles-321\",\n    ],\n    partial_name=\"Administra\",\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetUserRoles.Invoke(new()\n    {\n        Ids = new[]\n        {\n            \"UserRoles-123\",\n            \"UserRoles-321\",\n        },\n        PartialName = \"Administra\",\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetUserRoles(ctx, \u0026octopusdeploy.GetUserRolesArgs{\n\t\t\tIds: []string{\n\t\t\t\t\"UserRoles-123\",\n\t\t\t\t\"UserRoles-321\",\n\t\t\t},\n\t\t\tPartialName: pulumi.StringRef(\"Administra\"),\n\t\t\tSkip:        pulumi.IntRef(5),\n\t\t\tTake:        pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetUserRolesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getUserRoles(GetUserRolesArgs.builder()\n            .ids(            \n                \"UserRoles-123\",\n                \"UserRoles-321\")\n            .partialName(\"Administra\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getUserRoles\n      Arguments:\n        ids:\n          - UserRoles-123\n          - UserRoles-321\n        partialName: Administra\n        skip: 5\n        take: 100\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUserRoles.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "userRoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getUserRolesUserRole:getUserRolesUserRole"
                        },
                        "description": "A list of user roles that match the filter(s).\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUserRoles.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "userRoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getUserRolesUserRole:getUserRolesUserRole"
                        },
                        "description": "A list of user roles that match the filter(s).\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "userRoles"
                ]
            }
        },
        "octopusdeploy:index/getUsers:getUsers": {
            "description": "Provides information about existing users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getUsers({\n    ids: [\n        \"Users-123\",\n        \"Users-321\",\n    ],\n    skip: 5,\n    take: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_users(ids=[\n        \"Users-123\",\n        \"Users-321\",\n    ],\n    skip=5,\n    take=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetUsers.Invoke(new()\n    {\n        Ids = new[]\n        {\n            \"Users-123\",\n            \"Users-321\",\n        },\n        Skip = 5,\n        Take = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetUsers(ctx, \u0026octopusdeploy.GetUsersArgs{\n\t\t\tIds: []string{\n\t\t\t\t\"Users-123\",\n\t\t\t\t\"Users-321\",\n\t\t\t},\n\t\t\tSkip: pulumi.IntRef(5),\n\t\t\tTake: pulumi.IntRef(100),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetUsersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getUsers(GetUsersArgs.builder()\n            .ids(            \n                \"Users-123\",\n                \"Users-321\")\n            .skip(5)\n            .take(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getUsers\n      Arguments:\n        ids:\n          - Users-123\n          - Users-321\n        skip: 5\n        take: 100\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUsers.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "A filter with which to search.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getUsersUser:getUsersUser"
                        },
                        "description": "A list of users that match the filter(s).\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUsers.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "A filter with which to search.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getUsersUser:getUsersUser"
                        },
                        "description": "A list of users that match the filter(s).\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "users"
                ]
            }
        },
        "octopusdeploy:index/getVariables:getVariables": {
            "description": "Provides information about existing variables.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as octopusdeploy from \"@pulumi/octopusdeploy\";\n\nconst example = octopusdeploy.getVariables({});\n```\n```python\nimport pulumi\nimport pulumi_octopusdeploy as octopusdeploy\n\nexample = octopusdeploy.get_variables()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Octopusdeploy = Pulumi.Octopusdeploy;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Octopusdeploy.GetVariables.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-octopusdeploy/sdk/go/octopusdeploy\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := octopusdeploy.GetVariables(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.octopusdeploy.OctopusdeployFunctions;\nimport com.pulumi.octopusdeploy.inputs.GetVariablesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = OctopusdeployFunctions.getVariables();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: octopusdeploy:getVariables\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVariables.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getVariablesVariable:getVariablesVariable"
                        },
                        "description": "A list of variables that match the filter(s).\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVariables.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "An auto-generated identifier that includes the timestamp when this data source was last modified.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getVariablesVariable:getVariablesVariable"
                        },
                        "description": "A list of variables that match the filter(s).\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "variables"
                ]
            }
        },
        "octopusdeploy:index/getWorkerPools:getWorkerPools": {
            "description": "Provides information about existing worker pools.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getWorkerPools.\n",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "workerPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getWorkerPoolsWorkerPool:getWorkerPoolsWorkerPool"
                        },
                        "description": "A list of worker pools that match the filter(s).\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getWorkerPools.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A filter to search by a list of IDs.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A filter to search by name.\n"
                    },
                    "partialName": {
                        "type": "string",
                        "description": "A filter to search by the partial match of a name.\n"
                    },
                    "skip": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to skip in the response.\n"
                    },
                    "take": {
                        "type": "integer",
                        "description": "A filter to specify the number of items to take (or return) in the response.\n"
                    },
                    "workerPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/octopusdeploy:index/getWorkerPoolsWorkerPool:getWorkerPoolsWorkerPool"
                        },
                        "description": "A list of worker pools that match the filter(s).\n"
                    }
                },
                "type": "object",
                "required": [
                    "workerPools",
                    "id"
                ]
            }
        }
    }
}